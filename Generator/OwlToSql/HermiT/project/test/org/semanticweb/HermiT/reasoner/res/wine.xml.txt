Prefix(:=<http://www.w3.org/TR/2003/PR-owl-guide-20031209/wine#>)
Prefix(a1:=<http://www.w3.org/TR/2003/PR-owl-guide-20031209/food#>)

Ontology(<http://www.w3.org/TR/2003/PR-owl-guide-20031209/wine#>

  SubClassOf( a1:Grape owl:Thing ) Declaration( Class( a1:Grape ) )
    SubClassOf( :WineGrape a1:Grape ) Declaration( Class( :WineGrape ) )
  SubClassOf( a1:PotableLiquid owl:Thing ) Declaration( Class( a1:PotableLiquid ) )
    SubClassOf( :Wine a1:PotableLiquid ) Declaration( Class( :Wine ) )
      SubClassOf( :AmericanWine :Wine ) Declaration( Class( :AmericanWine ) )
        SubClassOf( :CaliforniaWine :AmericanWine ) Declaration( Class( :CaliforniaWine ) )
        SubClassOf( :TexasWine :AmericanWine ) Declaration( Class( :TexasWine ) )
      SubClassOf( :DessertWine :Wine ) Declaration( Class( :DessertWine ) )
        SubClassOf( :IceWine :DessertWine ) Declaration( Class( :IceWine ) )
        SubClassOf( :SweetRiesling :DessertWine ) Declaration( Class( :SweetRiesling ) )
      SubClassOf( :DryWine :Wine ) EquivalentClasses( :DryWine :TableWine ) Declaration( Class( :DryWine ) ) Declaration( Class( :TableWine ) )
        SubClassOf( :Burgundy :DryWine ) Declaration( Class( :Burgundy ) )
          SubClassOf( :RedBurgundy :Burgundy ) Declaration( Class( :RedBurgundy ) )
            SubClassOf( :CotesDOr :RedBurgundy ) Declaration( Class( :CotesDOr ) )
          SubClassOf( :WhiteBurgundy :Burgundy ) Declaration( Class( :WhiteBurgundy ) )
            SubClassOf( :Meursault :WhiteBurgundy ) Declaration( Class( :Meursault ) )
        SubClassOf( :DryRedWine :DryWine ) EquivalentClasses( :DryRedWine :RedTableWine ) Declaration( Class( :DryRedWine ) ) Declaration( Class( :RedTableWine ) )
          SubClassOf( :Beaujolais :DryRedWine ) Declaration( Class( :Beaujolais ) )
          SubClassOf( :CabernetFranc :DryRedWine ) Declaration( Class( :CabernetFranc ) )
          SubClassOf( :CabernetSauvignon :DryRedWine ) Declaration( Class( :CabernetSauvignon ) )
            SubClassOf( :Pauillac :CabernetSauvignon ) Declaration( Class( :Pauillac ) )
            SubClassOf( :StEmilion :CabernetSauvignon ) Declaration( Class( :StEmilion ) )
          SubClassOf( :Chianti :DryRedWine ) Declaration( Class( :Chianti ) )
          SubClassOf( :Medoc :DryRedWine ) Declaration( Class( :Medoc ) )
            SubClassOf( :Margaux :Medoc ) Declaration( Class( :Margaux ) )
            SubClassOf( :Pauillac :Medoc )
          SubClassOf( :Merlot :DryRedWine ) Declaration( Class( :Merlot ) )
            SubClassOf( :Margaux :Merlot )
          SubClassOf( :PetiteSyrah :DryRedWine ) Declaration( Class( :PetiteSyrah ) )
          SubClassOf( :RedBurgundy :DryRedWine )
          SubClassOf( :Zinfandel :DryRedWine ) Declaration( Class( :Zinfandel ) )
        SubClassOf( :DryWhiteWine :DryWine ) EquivalentClasses( :DryWhiteWine :WhiteTableWine ) Declaration( Class( :DryWhiteWine ) ) Declaration( Class( :WhiteTableWine ) )
          SubClassOf( :DryRiesling :DryWhiteWine ) Declaration( Class( :DryRiesling ) )
          SubClassOf( :Muscadet :DryWhiteWine ) Declaration( Class( :Muscadet ) )
          SubClassOf( :WhiteBurgundy :DryWhiteWine )
      SubClassOf( :EarlyHarvest :Wine ) Declaration( Class( :EarlyHarvest ) )
      SubClassOf( :FrenchWine :Wine ) Declaration( Class( :FrenchWine ) )
        SubClassOf( :AlsatianWine :FrenchWine ) Declaration( Class( :AlsatianWine ) )
        SubClassOf( :Beaujolais :FrenchWine )
        SubClassOf( :Bordeaux :FrenchWine ) Declaration( Class( :Bordeaux ) )
          SubClassOf( :RedBordeaux :Bordeaux ) Declaration( Class( :RedBordeaux ) )
            SubClassOf( :Medoc :RedBordeaux )
            SubClassOf( :StEmilion :RedBordeaux )
          SubClassOf( :WhiteBordeaux :Bordeaux ) Declaration( Class( :WhiteBordeaux ) )
            SubClassOf( :Sauternes :WhiteBordeaux ) Declaration( Class( :Sauternes ) )
        SubClassOf( :Burgundy :FrenchWine )
        SubClassOf( :Loire :FrenchWine ) Declaration( Class( :Loire ) )
          SubClassOf( :Anjou :Loire ) Declaration( Class( :Anjou ) )
          SubClassOf( :WhiteLoire :Loire ) Declaration( Class( :WhiteLoire ) )
            SubClassOf( :Muscadet :WhiteLoire )
            SubClassOf( :Sancerre :WhiteLoire ) Declaration( Class( :Sancerre ) )
            SubClassOf( :Tours :WhiteLoire ) Declaration( Class( :Tours ) )
      SubClassOf( :FullBodiedWine :Wine ) Declaration( Class( :FullBodiedWine ) )
        SubClassOf( :Meursault :FullBodiedWine )
        SubClassOf( :Pauillac :FullBodiedWine )
        SubClassOf( :Port :FullBodiedWine ) Declaration( Class( :Port ) )
        SubClassOf( :SweetRiesling :FullBodiedWine )
      SubClassOf( :Gamay :Wine ) Declaration( Class( :Gamay ) )
        SubClassOf( :Beaujolais :Gamay )
      SubClassOf( :GermanWine :Wine ) Declaration( Class( :GermanWine ) )
      SubClassOf( :ItalianWine :Wine ) Declaration( Class( :ItalianWine ) )
        SubClassOf( :Chianti :ItalianWine )
      SubClassOf( :RedWine :Wine ) Declaration( Class( :RedWine ) )
        SubClassOf( :DryRedWine :RedWine )
        SubClassOf( :Meritage :RedWine ) Declaration( Class( :Meritage ) )
        SubClassOf( :PinotNoir :RedWine ) Declaration( Class( :PinotNoir ) )
          SubClassOf( :RedBurgundy :PinotNoir )
        SubClassOf( :Port :RedWine )
        SubClassOf( :RedBordeaux :RedWine )
      SubClassOf( :RoseWine :Wine ) Declaration( Class( :RoseWine ) )
        SubClassOf( :Anjou :RoseWine )
      SubClassOf( :SweetWine :Wine ) Declaration( Class( :SweetWine ) )
        SubClassOf( :LateHarvest :SweetWine ) Declaration( Class( :LateHarvest ) )
          SubClassOf( :IceWine :LateHarvest )
          SubClassOf( :Sauternes :LateHarvest )
        SubClassOf( :Port :SweetWine )
        SubClassOf( :SweetRiesling :SweetWine )
      SubClassOf( :WhiteWine :Wine ) Declaration( Class( :WhiteWine ) )
        SubClassOf( :Chardonnay :WhiteWine ) Declaration( Class( :Chardonnay ) )
          SubClassOf( :WhiteBurgundy :Chardonnay )
        SubClassOf( :IceWine :WhiteWine )
        SubClassOf( :PinotBlanc :WhiteWine ) Declaration( Class( :PinotBlanc ) )
          SubClassOf( :Muscadet :PinotBlanc )
        SubClassOf( :Riesling :WhiteWine ) Declaration( Class( :Riesling ) )
          SubClassOf( :DryRiesling :Riesling )
          SubClassOf( :SweetRiesling :Riesling )
        SubClassOf( :SemillonOrSauvignonBlanc :WhiteWine ) Declaration( Class( :SemillonOrSauvignonBlanc ) )
          SubClassOf( :SauvignonBlanc :SemillonOrSauvignonBlanc ) Declaration( Class( :SauvignonBlanc ) )
            SubClassOf( :Sancerre :SauvignonBlanc )
          SubClassOf( :Semillon :SemillonOrSauvignonBlanc ) Declaration( Class( :Semillon ) )
          SubClassOf( :WhiteBordeaux :SemillonOrSauvignonBlanc )
        SubClassOf( :WhiteLoire :WhiteWine )
        SubClassOf( :WhiteNonSweetWine :WhiteWine ) Declaration( Class( :WhiteNonSweetWine ) )
          SubClassOf( :CheninBlanc :WhiteNonSweetWine ) Declaration( Class( :CheninBlanc ) )
            SubClassOf( :Tours :CheninBlanc )
          SubClassOf( :DryWhiteWine :WhiteNonSweetWine )
          SubClassOf( :Sancerre :WhiteNonSweetWine )
  SubClassOf( :ConsumableThing owl:Thing ) Declaration( Class( :ConsumableThing ) )
    SubClassOf( :EdibleThing :ConsumableThing ) Declaration( Class( :EdibleThing ) )
      SubClassOf( :Dessert :EdibleThing ) Declaration( Class( :Dessert ) )
        SubClassOf( :CheeseNutsDessert :Dessert ) Declaration( Class( :CheeseNutsDessert ) )
        SubClassOf( :SweetDessert :Dessert ) Declaration( Class( :SweetDessert ) )
      SubClassOf( :Fowl :EdibleThing ) Declaration( Class( :Fowl ) )
        SubClassOf( :DarkMeatFowl :Fowl ) Declaration( Class( :DarkMeatFowl ) )
        SubClassOf( :LightMeatFowl :Fowl ) Declaration( Class( :LightMeatFowl ) )
      SubClassOf( :Fruit :EdibleThing ) Declaration( Class( :Fruit ) )
        SubClassOf( :NonSweetFruit :Fruit ) Declaration( Class( :NonSweetFruit ) )
        SubClassOf( :SweetFruit :Fruit ) Declaration( Class( :SweetFruit ) )
          SubClassOf( :Grape :SweetFruit ) Declaration( Class( :Grape ) )
            SubClassOf( :EatingGrape :Grape ) Declaration( Class( :EatingGrape ) )
      SubClassOf( :Meat :EdibleThing ) Declaration( Class( :Meat ) )
        SubClassOf( :NonRedMeat :Meat ) Declaration( Class( :NonRedMeat ) )
        SubClassOf( :RedMeat :Meat ) Declaration( Class( :RedMeat ) )
          SubClassOf( :NonSpicyRedMeat :RedMeat ) Declaration( Class( :NonSpicyRedMeat ) )
          SubClassOf( :SpicyRedMeat :RedMeat ) Declaration( Class( :SpicyRedMeat ) )
      SubClassOf( :OtherTomatoBasedFood :EdibleThing ) Declaration( Class( :OtherTomatoBasedFood ) )
      SubClassOf( :Pasta :EdibleThing ) Declaration( Class( :Pasta ) )
        SubClassOf( :PastaWithRedSauce :Pasta ) Declaration( Class( :PastaWithRedSauce ) )
          SubClassOf( :PastaWithNonSpicyRedSauce :PastaWithRedSauce ) Declaration( Class( :PastaWithNonSpicyRedSauce ) )
          SubClassOf( :PastaWithSpicyRedSauce :PastaWithRedSauce ) Declaration( Class( :PastaWithSpicyRedSauce ) )
        SubClassOf( :PastaWithWhiteSauce :Pasta ) Declaration( Class( :PastaWithWhiteSauce ) )
          SubClassOf( :PastaWithHeavyCreamSauce :PastaWithWhiteSauce ) Declaration( Class( :PastaWithHeavyCreamSauce ) )
          SubClassOf( :PastaWithLightCreamSauce :PastaWithWhiteSauce ) Declaration( Class( :PastaWithLightCreamSauce ) )
      SubClassOf( :Seafood :EdibleThing ) Declaration( Class( :Seafood ) )
        SubClassOf( :Fish :Seafood ) Declaration( Class( :Fish ) )
          SubClassOf( :BlandFish :Fish ) Declaration( Class( :BlandFish ) )
          SubClassOf( :NonBlandFish :Fish ) Declaration( Class( :NonBlandFish ) )
        SubClassOf( :Shellfish :Seafood ) Declaration( Class( :Shellfish ) )
          SubClassOf( :NonOysterShellfish :Shellfish ) Declaration( Class( :NonOysterShellfish ) )
          SubClassOf( :OysterShellfish :Shellfish ) Declaration( Class( :OysterShellfish ) )
    SubClassOf( :Meal :ConsumableThing ) Declaration( Class( :Meal ) )
    SubClassOf( :MealCourse :ConsumableThing ) Declaration( Class( :MealCourse ) )
      SubClassOf( :DarkMeatFowlCourse :MealCourse ) Declaration( Class( :DarkMeatFowlCourse ) )
      SubClassOf( :DessertCourse :MealCourse ) Declaration( Class( :DessertCourse ) )
        SubClassOf( :CheeseNutsDessertCourse :DessertCourse ) Declaration( Class( :CheeseNutsDessertCourse ) )
        SubClassOf( :SweetDessertCourse :DessertCourse ) Declaration( Class( :SweetDessertCourse ) )
      SubClassOf( :FruitCourse :MealCourse ) Declaration( Class( :FruitCourse ) )
        SubClassOf( :NonSweetFruitCourse :FruitCourse ) Declaration( Class( :NonSweetFruitCourse ) )
        SubClassOf( :SweetFruitCourse :FruitCourse ) Declaration( Class( :SweetFruitCourse ) )
      SubClassOf( :LightMeatFowlCourse :MealCourse ) Declaration( Class( :LightMeatFowlCourse ) )
      SubClassOf( :NonRedMeatCourse :MealCourse ) Declaration( Class( :NonRedMeatCourse ) )
      SubClassOf( :OtherTomatoBasedFoodCourse :MealCourse ) Declaration( Class( :OtherTomatoBasedFoodCourse ) )
      SubClassOf( :PastaWithHeavyCreamCourse :MealCourse ) Declaration( Class( :PastaWithHeavyCreamCourse ) )
      SubClassOf( :PastaWithLightCreamCourse :MealCourse ) Declaration( Class( :PastaWithLightCreamCourse ) )
      SubClassOf( :PastaWithNonSpicyRedSauceCourse :MealCourse ) Declaration( Class( :PastaWithNonSpicyRedSauceCourse ) )
      SubClassOf( :PastaWithSpicyRedSauceCourse :MealCourse ) Declaration( Class( :PastaWithSpicyRedSauceCourse ) )
      SubClassOf( :RedMeatCourse :MealCourse ) Declaration( Class( :RedMeatCourse ) )
        SubClassOf( :NonSpicyRedMeatCourse :RedMeatCourse ) Declaration( Class( :NonSpicyRedMeatCourse ) )
        SubClassOf( :SpicyRedMeatCourse :RedMeatCourse ) Declaration( Class( :SpicyRedMeatCourse ) )
      SubClassOf( :SeafoodCourse :MealCourse ) Declaration( Class( :SeafoodCourse ) )
        SubClassOf( :FishCourse :SeafoodCourse ) Declaration( Class( :FishCourse ) )
          SubClassOf( :BlandFishCourse :FishCourse ) Declaration( Class( :BlandFishCourse ) )
          SubClassOf( :NonBlandFishCourse :FishCourse ) Declaration( Class( :NonBlandFishCourse ) )
        SubClassOf( :ShellfishCourse :SeafoodCourse ) Declaration( Class( :ShellfishCourse ) )
          SubClassOf( :NonOysterShellfishCourse :ShellfishCourse ) Declaration( Class( :NonOysterShellfishCourse ) )
          SubClassOf( :OysterShellfishCourse :ShellfishCourse ) Declaration( Class( :OysterShellfishCourse ) )
    SubClassOf( :PotableLiquid :ConsumableThing ) Declaration( Class( :PotableLiquid ) )
      SubClassOf( :Juice :PotableLiquid ) Declaration( Class( :Juice ) )
  SubClassOf( :NonConsumableThing owl:Thing ) Declaration( Class( :NonConsumableThing ) )
  SubClassOf( :Region owl:Thing ) Declaration( Class( :Region ) )
  SubClassOf( :Vintage owl:Thing ) Declaration( Class( :Vintage ) )
  SubClassOf( :VintageYear owl:Thing ) Declaration( Class( :VintageYear ) )
  SubClassOf( :WineDescriptor owl:Thing ) Declaration( Class( :WineDescriptor ) )
    SubClassOf( :WineColor :WineDescriptor ) Declaration( Class( :WineColor ) )
    SubClassOf( :WineTaste :WineDescriptor ) Declaration( Class( :WineTaste ) )
      SubClassOf( :WineBody :WineTaste ) Declaration( Class( :WineBody ) )
      SubClassOf( :WineFlavor :WineTaste ) Declaration( Class( :WineFlavor ) )
      SubClassOf( :WineSugar :WineTaste ) Declaration( Class( :WineSugar ) )
  SubClassOf( :Winery owl:Thing ) Declaration( Class( :Winery ) )

  SubObjectPropertyOf( a1:madeFromFruit owl:topObjectProperty ) Declaration( ObjectProperty( a1:madeFromFruit ) )
    SubObjectPropertyOf( :madeFromGrape a1:madeFromFruit ) EquivalentObjectProperties( :madeFromGrape ObjectInverseOf( :madeIntoWine ) ) Declaration( ObjectProperty( :madeFromGrape ) )
  SubObjectPropertyOf( :adjacentRegion owl:topObjectProperty ) EquivalentObjectProperties( :adjacentRegion ObjectInverseOf( :adjacentRegion ) ) Declaration( ObjectProperty( :adjacentRegion ) )
  SubObjectPropertyOf( :course owl:topObjectProperty ) Declaration( ObjectProperty( :course ) )
  SubObjectPropertyOf( :hasDrink owl:topObjectProperty ) Declaration( ObjectProperty( :hasDrink ) )
  SubObjectPropertyOf( :hasFood owl:topObjectProperty ) Declaration( ObjectProperty( :hasFood ) )
  SubObjectPropertyOf( :hasMaker owl:topObjectProperty ) EquivalentObjectProperties( :hasMaker ObjectInverseOf( :producesWine ) ) Declaration( ObjectProperty( :hasMaker ) )
  SubObjectPropertyOf( :hasVintageYear owl:topObjectProperty ) Declaration( ObjectProperty( :hasVintageYear ) )
  SubObjectPropertyOf( :hasWineDescriptor owl:topObjectProperty ) Declaration( ObjectProperty( :hasWineDescriptor ) )
    SubObjectPropertyOf( :hasBody :hasWineDescriptor ) Declaration( ObjectProperty( :hasBody ) )
    SubObjectPropertyOf( :hasColor :hasWineDescriptor ) Declaration( ObjectProperty( :hasColor ) )
    SubObjectPropertyOf( :hasFlavor :hasWineDescriptor ) Declaration( ObjectProperty( :hasFlavor ) )
    SubObjectPropertyOf( :hasSugar :hasWineDescriptor ) Declaration( ObjectProperty( :hasSugar ) )
  SubObjectPropertyOf( :locatedIn owl:topObjectProperty ) Declaration( ObjectProperty( :locatedIn ) )
  SubObjectPropertyOf( :madeFromFruit owl:topObjectProperty ) Declaration( ObjectProperty( :madeFromFruit ) )
  SubObjectPropertyOf( :producesWine owl:topObjectProperty ) EquivalentObjectProperties( :producesWine ObjectInverseOf( :hasMaker ) ) Declaration( ObjectProperty( :producesWine ) )
  SubObjectPropertyOf( ObjectInverseOf( a1:madeFromFruit ) owl:topObjectProperty )
    SubObjectPropertyOf( :madeIntoWine ObjectInverseOf( a1:madeFromFruit ) ) EquivalentObjectProperties( :madeIntoWine ObjectInverseOf( :madeFromGrape ) ) Declaration( ObjectProperty( :madeIntoWine ) )
  SubObjectPropertyOf( ObjectInverseOf( :course ) owl:topObjectProperty )
  SubObjectPropertyOf( ObjectInverseOf( :hasDrink ) owl:topObjectProperty )
  SubObjectPropertyOf( ObjectInverseOf( :hasFood ) owl:topObjectProperty )
  SubObjectPropertyOf( ObjectInverseOf( :hasVintageYear ) owl:topObjectProperty )
  SubObjectPropertyOf( ObjectInverseOf( :hasWineDescriptor ) owl:topObjectProperty )
    SubObjectPropertyOf( ObjectInverseOf( :hasBody ) ObjectInverseOf( :hasWineDescriptor ) )
    SubObjectPropertyOf( ObjectInverseOf( :hasColor ) ObjectInverseOf( :hasWineDescriptor ) )
    SubObjectPropertyOf( ObjectInverseOf( :hasFlavor ) ObjectInverseOf( :hasWineDescriptor ) )
    SubObjectPropertyOf( ObjectInverseOf( :hasSugar ) ObjectInverseOf( :hasWineDescriptor ) )
  SubObjectPropertyOf( ObjectInverseOf( :locatedIn ) owl:topObjectProperty )
  SubObjectPropertyOf( ObjectInverseOf( :madeFromFruit ) owl:topObjectProperty )

  SubDataPropertyOf( :yearValue owl:topDataProperty ) Declaration( DataProperty( :yearValue ) )

)
