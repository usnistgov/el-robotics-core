Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)
Prefix(:=<http://www.nist.gov/el/ontologies/plan_a2b1c1.owl#>)
Prefix(:=<http://www.nist.gov/el/ontologies/kittingPlanClasses.owl#>)
Ontology(<http://www.nist.gov/el/ontologies/plan_a2b1c1.owl>
Import(<file:kittingPlanClasses.owl>)

//*****************************************
// 1 start KittingPlan plan_a2b1c1
Declaration(NamedIndividual(:plan_a2b1c1))
ClassAssertion(:KittingPlan :plan_a2b1c1)
DataPropertyAssertion(:hasKittingPlan_PlanId :plan_a2b1c1
                      "plan_a2b1c1.xml"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasKittingPlan_PlanVersion :plan_a2b1c1
                      "2013Sep16"^^xsd:token)
DataPropertyAssertion(:hasKittingPlan_PlanDateAndTime :plan_a2b1c1
                      "2013-09-16T18:10:00-05:00"^^xsd:dateTime)
DataPropertyAssertion(:hasKittingPlan_PlanAuthor :plan_a2b1c1
                      "Zeid Kootbally and Tom Kramer"^^xsd:token)
DataPropertyAssertion(:hasKittingPlan_PlanDescription :plan_a2b1c1
                      "
    This is a version of a plan generated by PDDL for building a kit with
    two part a, one part b, and one part c. The plan is sequentially
    ordered.
  "^^xsd:string)
DataPropertyAssertion(:hasKittingPlan_Object :plan_a2b1c1
                      "finished_kit_receiver"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasKittingPlan_Object :plan_a2b1c1
                      "kit_tray_1"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasKittingPlan_Object :plan_a2b1c1
                      "part_a_1"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasKittingPlan_Object :plan_a2b1c1
                      "part_a_2"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasKittingPlan_Object :plan_a2b1c1
                      "part_b_1"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasKittingPlan_Object :plan_a2b1c1
                      "part_c_1"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasKittingPlan_Object :plan_a2b1c1
                      "part_gripper"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasKittingPlan_Object :plan_a2b1c1
                      "part_gripper_holder"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasKittingPlan_Object :plan_a2b1c1
                      "robot_1"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasKittingPlan_Object :plan_a2b1c1
                      "tray_gripper"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasKittingPlan_Object :plan_a2b1c1
                      "tray_gripper_holder"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasKittingPlan_Object :plan_a2b1c1
                      "work_table_1"^^xsd:NMTOKEN)
ObjectPropertyAssertion(:hasKittingPlan_PlanRoot
                        :plan_a2b1c1 :plan_1)

//*****************************************
// 2 start OrderedActionGroup plan_1
Declaration(NamedIndividual(:plan_1))
ClassAssertion(:OrderedActionGroup :plan_1)
ObjectPropertyAssertion(:hasOrderedActionGroup_Step
                        :plan_1 :step_1)

//*****************************************
// 3 start NumberedPlanElement step_1
Declaration(NamedIndividual(:step_1))
ClassAssertion(:NumberedPlanElement :step_1)
DataPropertyAssertion(:hasNumberedPlanElement_SequenceNumber :step_1
                      "1"^^xsd:positiveInteger)
ObjectPropertyAssertion(:hasNumberedPlanElement_PlanElement
                        :step_1 :attach_1)

//*****************************************
// 4 start AttachEndEffector attach_1
Declaration(NamedIndividual(:attach_1))
ClassAssertion(:AttachEndEffector :attach_1)
DataPropertyAssertion(:hasAttachEndEffector_RobotName :attach_1
                      "robot_1"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasAttachEndEffector_EndEffectorName :attach_1
                      "tray_gripper"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasAttachEndEffector_EndEffectorHolderName :attach_1
                      "tray_gripper_holder"^^xsd:NMTOKEN)
// 4 end AttachEndEffector
//*****************************************

// 3 end NumberedPlanElement
//*****************************************

ObjectPropertyAssertion(:hasOrderedActionGroup_Step
                        :plan_1 :step_2)

//*****************************************
// 3 start NumberedPlanElement step_2
Declaration(NamedIndividual(:step_2))
ClassAssertion(:NumberedPlanElement :step_2)
DataPropertyAssertion(:hasNumberedPlanElement_SequenceNumber :step_2
                      "2"^^xsd:positiveInteger)
ObjectPropertyAssertion(:hasNumberedPlanElement_PlanElement
                        :step_2 :take_kit_tray_1)

//*****************************************
// 4 start TakeKitTray take_kit_tray_1
Declaration(NamedIndividual(:take_kit_tray_1))
ClassAssertion(:TakeKitTray :take_kit_tray_1)
DataPropertyAssertion(:hasTakeKitTray_RobotName :take_kit_tray_1
                      "robot_1"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasTakeKitTray_KitTrayName :take_kit_tray_1
                      "kit_tray_1"^^xsd:NMTOKEN)
// 4 end TakeKitTray
//*****************************************

// 3 end NumberedPlanElement
//*****************************************

ObjectPropertyAssertion(:hasOrderedActionGroup_Step
                        :plan_1 :step_3)

//*****************************************
// 3 start NumberedPlanElement step_3
Declaration(NamedIndividual(:step_3))
ClassAssertion(:NumberedPlanElement :step_3)
DataPropertyAssertion(:hasNumberedPlanElement_SequenceNumber :step_3
                      "3"^^xsd:positiveInteger)
ObjectPropertyAssertion(:hasNumberedPlanElement_PlanElement
                        :step_3 :put_kit_tray_1)

//*****************************************
// 4 start PutKitTray put_kit_tray_1
Declaration(NamedIndividual(:put_kit_tray_1))
ClassAssertion(:PutKitTray :put_kit_tray_1)
DataPropertyAssertion(:hasPutKitTray_RobotName :put_kit_tray_1
                      "robot_1"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasPutKitTray_KitTrayName :put_kit_tray_1
                      "kit_tray_1"^^xsd:NMTOKEN)
ObjectPropertyAssertion(:hasPutKitTray_Location
                        :put_kit_tray_1 :kit_on_table_1)

//*****************************************
// 5 start RelativeLocationOn kit_on_table_1
Declaration(NamedIndividual(:kit_on_table_1))
ClassAssertion(:RelativeLocationOn :kit_on_table_1)
DataPropertyAssertion(:hasPhysicalLocation_RefObjectName :kit_on_table_1
                      "work_table_1"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasRelativeLocation_Description :kit_on_table_1
                      "kit on table"^^xsd:string)
// 5 end RelativeLocationOn
//*****************************************

// 4 end PutKitTray
//*****************************************

// 3 end NumberedPlanElement
//*****************************************

ObjectPropertyAssertion(:hasOrderedActionGroup_Step
                        :plan_1 :step_4)

//*****************************************
// 3 start NumberedPlanElement step_4
Declaration(NamedIndividual(:step_4))
ClassAssertion(:NumberedPlanElement :step_4)
DataPropertyAssertion(:hasNumberedPlanElement_SequenceNumber :step_4
                      "4"^^xsd:positiveInteger)
ObjectPropertyAssertion(:hasNumberedPlanElement_PlanElement
                        :step_4 :create_kit_1)

//*****************************************
// 4 start CreateKit create_kit_1
Declaration(NamedIndividual(:create_kit_1))
ClassAssertion(:CreateKit :create_kit_1)
DataPropertyAssertion(:hasCreateKit_KitTrayName :create_kit_1
                      "kit_tray_1"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasCreateKit_KitName :create_kit_1
                      "kit_1"^^xsd:NMTOKEN)
// 4 end CreateKit
//*****************************************

// 3 end NumberedPlanElement
//*****************************************

ObjectPropertyAssertion(:hasOrderedActionGroup_Step
                        :plan_1 :step_5)

//*****************************************
// 3 start NumberedPlanElement step_5
Declaration(NamedIndividual(:step_5))
ClassAssertion(:NumberedPlanElement :step_5)
DataPropertyAssertion(:hasNumberedPlanElement_SequenceNumber :step_5
                      "2"^^xsd:positiveInteger)
ObjectPropertyAssertion(:hasNumberedPlanElement_PlanElement
                        :step_5 :detach_1)

//*****************************************
// 4 start DetachEndEffector detach_1
Declaration(NamedIndividual(:detach_1))
ClassAssertion(:DetachEndEffector :detach_1)
DataPropertyAssertion(:hasDetachEndEffector_RobotName :detach_1
                      "robot_1"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasDetachEndEffector_EndEffectorName :detach_1
                      "tray_gripper"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasDetachEndEffector_EndEffectorHolderName :detach_1
                      "tray_gripper_holder"^^xsd:NMTOKEN)
// 4 end DetachEndEffector
//*****************************************

// 3 end NumberedPlanElement
//*****************************************

ObjectPropertyAssertion(:hasOrderedActionGroup_Step
                        :plan_1 :step_6)

//*****************************************
// 3 start NumberedPlanElement step_6
Declaration(NamedIndividual(:step_6))
ClassAssertion(:NumberedPlanElement :step_6)
DataPropertyAssertion(:hasNumberedPlanElement_SequenceNumber :step_6
                      "6"^^xsd:positiveInteger)
ObjectPropertyAssertion(:hasNumberedPlanElement_PlanElement
                        :step_6 :attach_2)

//*****************************************
// 4 start AttachEndEffector attach_2
Declaration(NamedIndividual(:attach_2))
ClassAssertion(:AttachEndEffector :attach_2)
DataPropertyAssertion(:hasAttachEndEffector_RobotName :attach_2
                      "robot_1"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasAttachEndEffector_EndEffectorName :attach_2
                      "part_gripper"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasAttachEndEffector_EndEffectorHolderName :attach_2
                      "part_gripper_holder"^^xsd:NMTOKEN)
// 4 end AttachEndEffector
//*****************************************

// 3 end NumberedPlanElement
//*****************************************

ObjectPropertyAssertion(:hasOrderedActionGroup_Step
                        :plan_1 :step_7)

//*****************************************
// 3 start NumberedPlanElement step_7
Declaration(NamedIndividual(:step_7))
ClassAssertion(:NumberedPlanElement :step_7)
DataPropertyAssertion(:hasNumberedPlanElement_SequenceNumber :step_7
                      "7"^^xsd:positiveInteger)
ObjectPropertyAssertion(:hasNumberedPlanElement_PlanElement
                        :step_7 :locate_part_c_1)

//*****************************************
// 4 start LocatePart locate_part_c_1
Declaration(NamedIndividual(:locate_part_c_1))
ClassAssertion(:LocatePart :locate_part_c_1)
DataPropertyAssertion(:hasLocatePart_PartName :locate_part_c_1
                      "part_c_1"^^xsd:NMTOKEN)
// 4 end LocatePart
//*****************************************

// 3 end NumberedPlanElement
//*****************************************

ObjectPropertyAssertion(:hasOrderedActionGroup_Step
                        :plan_1 :step_8)

//*****************************************
// 3 start NumberedPlanElement step_8
Declaration(NamedIndividual(:step_8))
ClassAssertion(:NumberedPlanElement :step_8)
DataPropertyAssertion(:hasNumberedPlanElement_SequenceNumber :step_8
                      "8"^^xsd:positiveInteger)
ObjectPropertyAssertion(:hasNumberedPlanElement_PlanElement
                        :step_8 :take_part_c_1)

//*****************************************
// 4 start TakePart take_part_c_1
Declaration(NamedIndividual(:take_part_c_1))
ClassAssertion(:TakePart :take_part_c_1)
DataPropertyAssertion(:hasTakePart_RobotName :take_part_c_1
                      "robot_1"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasTakePart_PartName :take_part_c_1
                      "part_c_1"^^xsd:NMTOKEN)
// 4 end TakePart
//*****************************************

// 3 end NumberedPlanElement
//*****************************************

ObjectPropertyAssertion(:hasOrderedActionGroup_Step
                        :plan_1 :step_9)

//*****************************************
// 3 start NumberedPlanElement step_9
Declaration(NamedIndividual(:step_9))
ClassAssertion(:NumberedPlanElement :step_9)
DataPropertyAssertion(:hasNumberedPlanElement_SequenceNumber :step_9
                      "9"^^xsd:positiveInteger)
ObjectPropertyAssertion(:hasNumberedPlanElement_PlanElement
                        :step_9 :put_part_c_1)

//*****************************************
// 4 start PutPart put_part_c_1
Declaration(NamedIndividual(:put_part_c_1))
ClassAssertion(:PutPart :put_part_c_1)
DataPropertyAssertion(:hasPutPart_RobotName :put_part_c_1
                      "robot_1"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasPutPart_PartName :put_part_c_1
                      "part_c_1"^^xsd:NMTOKEN)
ObjectPropertyAssertion(:hasPutPart_Location
                        :put_part_c_1 :c_1_in_kit)

//*****************************************
// 5 start RelativeLocationIn c_1_in_kit
Declaration(NamedIndividual(:c_1_in_kit))
ClassAssertion(:RelativeLocationIn :c_1_in_kit)
DataPropertyAssertion(:hasPhysicalLocation_RefObjectName :c_1_in_kit
                      "kit_1"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasRelativeLocation_Description :c_1_in_kit
                      "part c1 in kit"^^xsd:string)
// 5 end RelativeLocationIn
//*****************************************

// 4 end PutPart
//*****************************************

// 3 end NumberedPlanElement
//*****************************************

ObjectPropertyAssertion(:hasOrderedActionGroup_Step
                        :plan_1 :step_10)

//*****************************************
// 3 start NumberedPlanElement step_10
Declaration(NamedIndividual(:step_10))
ClassAssertion(:NumberedPlanElement :step_10)
DataPropertyAssertion(:hasNumberedPlanElement_SequenceNumber :step_10
                      "10"^^xsd:positiveInteger)
ObjectPropertyAssertion(:hasNumberedPlanElement_PlanElement
                        :step_10 :locate_part_b_1)

//*****************************************
// 4 start LocatePart locate_part_b_1
Declaration(NamedIndividual(:locate_part_b_1))
ClassAssertion(:LocatePart :locate_part_b_1)
DataPropertyAssertion(:hasLocatePart_PartName :locate_part_b_1
                      "part_b_1"^^xsd:NMTOKEN)
// 4 end LocatePart
//*****************************************

// 3 end NumberedPlanElement
//*****************************************

ObjectPropertyAssertion(:hasOrderedActionGroup_Step
                        :plan_1 :step_11)

//*****************************************
// 3 start NumberedPlanElement step_11
Declaration(NamedIndividual(:step_11))
ClassAssertion(:NumberedPlanElement :step_11)
DataPropertyAssertion(:hasNumberedPlanElement_SequenceNumber :step_11
                      "11"^^xsd:positiveInteger)
ObjectPropertyAssertion(:hasNumberedPlanElement_PlanElement
                        :step_11 :take_part_b_1)

//*****************************************
// 4 start TakePart take_part_b_1
Declaration(NamedIndividual(:take_part_b_1))
ClassAssertion(:TakePart :take_part_b_1)
DataPropertyAssertion(:hasTakePart_RobotName :take_part_b_1
                      "robot_1"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasTakePart_PartName :take_part_b_1
                      "part_b_1"^^xsd:NMTOKEN)
// 4 end TakePart
//*****************************************

// 3 end NumberedPlanElement
//*****************************************

ObjectPropertyAssertion(:hasOrderedActionGroup_Step
                        :plan_1 :step_12)

//*****************************************
// 3 start NumberedPlanElement step_12
Declaration(NamedIndividual(:step_12))
ClassAssertion(:NumberedPlanElement :step_12)
DataPropertyAssertion(:hasNumberedPlanElement_SequenceNumber :step_12
                      "12"^^xsd:positiveInteger)
ObjectPropertyAssertion(:hasNumberedPlanElement_PlanElement
                        :step_12 :put_part_b_1)

//*****************************************
// 4 start PutPart put_part_b_1
Declaration(NamedIndividual(:put_part_b_1))
ClassAssertion(:PutPart :put_part_b_1)
DataPropertyAssertion(:hasPutPart_RobotName :put_part_b_1
                      "robot_1"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasPutPart_PartName :put_part_b_1
                      "part_b_1"^^xsd:NMTOKEN)
ObjectPropertyAssertion(:hasPutPart_Location
                        :put_part_b_1 :b_1_in_kit)

//*****************************************
// 5 start RelativeLocationIn b_1_in_kit
Declaration(NamedIndividual(:b_1_in_kit))
ClassAssertion(:RelativeLocationIn :b_1_in_kit)
DataPropertyAssertion(:hasPhysicalLocation_RefObjectName :b_1_in_kit
                      "kit_1"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasRelativeLocation_Description :b_1_in_kit
                      "part b1 in kit"^^xsd:string)
// 5 end RelativeLocationIn
//*****************************************

// 4 end PutPart
//*****************************************

// 3 end NumberedPlanElement
//*****************************************

ObjectPropertyAssertion(:hasOrderedActionGroup_Step
                        :plan_1 :step_13)

//*****************************************
// 3 start NumberedPlanElement step_13
Declaration(NamedIndividual(:step_13))
ClassAssertion(:NumberedPlanElement :step_13)
DataPropertyAssertion(:hasNumberedPlanElement_SequenceNumber :step_13
                      "13"^^xsd:positiveInteger)
ObjectPropertyAssertion(:hasNumberedPlanElement_PlanElement
                        :step_13 :locate_part_a_2)

//*****************************************
// 4 start LocatePart locate_part_a_2
Declaration(NamedIndividual(:locate_part_a_2))
ClassAssertion(:LocatePart :locate_part_a_2)
DataPropertyAssertion(:hasLocatePart_PartName :locate_part_a_2
                      "part_a_2"^^xsd:NMTOKEN)
// 4 end LocatePart
//*****************************************

// 3 end NumberedPlanElement
//*****************************************

ObjectPropertyAssertion(:hasOrderedActionGroup_Step
                        :plan_1 :step_14)

//*****************************************
// 3 start NumberedPlanElement step_14
Declaration(NamedIndividual(:step_14))
ClassAssertion(:NumberedPlanElement :step_14)
DataPropertyAssertion(:hasNumberedPlanElement_SequenceNumber :step_14
                      "14"^^xsd:positiveInteger)
ObjectPropertyAssertion(:hasNumberedPlanElement_PlanElement
                        :step_14 :take_part_a_2)

//*****************************************
// 4 start TakePart take_part_a_2
Declaration(NamedIndividual(:take_part_a_2))
ClassAssertion(:TakePart :take_part_a_2)
DataPropertyAssertion(:hasTakePart_RobotName :take_part_a_2
                      "robot_1"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasTakePart_PartName :take_part_a_2
                      "part_a_2"^^xsd:NMTOKEN)
// 4 end TakePart
//*****************************************

// 3 end NumberedPlanElement
//*****************************************

ObjectPropertyAssertion(:hasOrderedActionGroup_Step
                        :plan_1 :step_15)

//*****************************************
// 3 start NumberedPlanElement step_15
Declaration(NamedIndividual(:step_15))
ClassAssertion(:NumberedPlanElement :step_15)
DataPropertyAssertion(:hasNumberedPlanElement_SequenceNumber :step_15
                      "15"^^xsd:positiveInteger)
ObjectPropertyAssertion(:hasNumberedPlanElement_PlanElement
                        :step_15 :put_part_a_2)

//*****************************************
// 4 start PutPart put_part_a_2
Declaration(NamedIndividual(:put_part_a_2))
ClassAssertion(:PutPart :put_part_a_2)
DataPropertyAssertion(:hasPutPart_RobotName :put_part_a_2
                      "robot_1"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasPutPart_PartName :put_part_a_2
                      "part_a_2"^^xsd:NMTOKEN)
ObjectPropertyAssertion(:hasPutPart_Location
                        :put_part_a_2 :a_2_in_kit)

//*****************************************
// 5 start RelativeLocationIn a_2_in_kit
Declaration(NamedIndividual(:a_2_in_kit))
ClassAssertion(:RelativeLocationIn :a_2_in_kit)
DataPropertyAssertion(:hasPhysicalLocation_RefObjectName :a_2_in_kit
                      "kit_1"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasRelativeLocation_Description :a_2_in_kit
                      "part a2 in kit"^^xsd:string)
// 5 end RelativeLocationIn
//*****************************************

// 4 end PutPart
//*****************************************

// 3 end NumberedPlanElement
//*****************************************

ObjectPropertyAssertion(:hasOrderedActionGroup_Step
                        :plan_1 :step_16)

//*****************************************
// 3 start NumberedPlanElement step_16
Declaration(NamedIndividual(:step_16))
ClassAssertion(:NumberedPlanElement :step_16)
DataPropertyAssertion(:hasNumberedPlanElement_SequenceNumber :step_16
                      "16"^^xsd:positiveInteger)
ObjectPropertyAssertion(:hasNumberedPlanElement_PlanElement
                        :step_16 :locate_part_a_1)

//*****************************************
// 4 start LocatePart locate_part_a_1
Declaration(NamedIndividual(:locate_part_a_1))
ClassAssertion(:LocatePart :locate_part_a_1)
DataPropertyAssertion(:hasLocatePart_PartName :locate_part_a_1
                      "part_a_1"^^xsd:NMTOKEN)
// 4 end LocatePart
//*****************************************

// 3 end NumberedPlanElement
//*****************************************

ObjectPropertyAssertion(:hasOrderedActionGroup_Step
                        :plan_1 :step_17)

//*****************************************
// 3 start NumberedPlanElement step_17
Declaration(NamedIndividual(:step_17))
ClassAssertion(:NumberedPlanElement :step_17)
DataPropertyAssertion(:hasNumberedPlanElement_SequenceNumber :step_17
                      "17"^^xsd:positiveInteger)
ObjectPropertyAssertion(:hasNumberedPlanElement_PlanElement
                        :step_17 :take_part_a_1)

//*****************************************
// 4 start TakePart take_part_a_1
Declaration(NamedIndividual(:take_part_a_1))
ClassAssertion(:TakePart :take_part_a_1)
DataPropertyAssertion(:hasTakePart_RobotName :take_part_a_1
                      "robot_1"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasTakePart_PartName :take_part_a_1
                      "part_a_1"^^xsd:NMTOKEN)
// 4 end TakePart
//*****************************************

// 3 end NumberedPlanElement
//*****************************************

ObjectPropertyAssertion(:hasOrderedActionGroup_Step
                        :plan_1 :step_18)

//*****************************************
// 3 start NumberedPlanElement step_18
Declaration(NamedIndividual(:step_18))
ClassAssertion(:NumberedPlanElement :step_18)
DataPropertyAssertion(:hasNumberedPlanElement_SequenceNumber :step_18
                      "18"^^xsd:positiveInteger)
ObjectPropertyAssertion(:hasNumberedPlanElement_PlanElement
                        :step_18 :put_part_a_1)

//*****************************************
// 4 start PutPart put_part_a_1
Declaration(NamedIndividual(:put_part_a_1))
ClassAssertion(:PutPart :put_part_a_1)
DataPropertyAssertion(:hasPutPart_RobotName :put_part_a_1
                      "robot_1"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasPutPart_PartName :put_part_a_1
                      "part_a_1"^^xsd:NMTOKEN)
ObjectPropertyAssertion(:hasPutPart_Location
                        :put_part_a_1 :a_1_in_kit)

//*****************************************
// 5 start RelativeLocationIn a_1_in_kit
Declaration(NamedIndividual(:a_1_in_kit))
ClassAssertion(:RelativeLocationIn :a_1_in_kit)
DataPropertyAssertion(:hasPhysicalLocation_RefObjectName :a_1_in_kit
                      "kit_1"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasRelativeLocation_Description :a_1_in_kit
                      "part a1 in kit"^^xsd:string)
// 5 end RelativeLocationIn
//*****************************************

// 4 end PutPart
//*****************************************

// 3 end NumberedPlanElement
//*****************************************

ObjectPropertyAssertion(:hasOrderedActionGroup_Step
                        :plan_1 :step_19)

//*****************************************
// 3 start NumberedPlanElement step_19
Declaration(NamedIndividual(:step_19))
ClassAssertion(:NumberedPlanElement :step_19)
DataPropertyAssertion(:hasNumberedPlanElement_SequenceNumber :step_19
                      "19"^^xsd:positiveInteger)
ObjectPropertyAssertion(:hasNumberedPlanElement_PlanElement
                        :step_19 :detach_2)

//*****************************************
// 4 start DetachEndEffector detach_2
Declaration(NamedIndividual(:detach_2))
ClassAssertion(:DetachEndEffector :detach_2)
DataPropertyAssertion(:hasDetachEndEffector_RobotName :detach_2
                      "robot_1"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasDetachEndEffector_EndEffectorName :detach_2
                      "part_gripper"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasDetachEndEffector_EndEffectorHolderName :detach_2
                      "part_gripper_holder"^^xsd:NMTOKEN)
// 4 end DetachEndEffector
//*****************************************

// 3 end NumberedPlanElement
//*****************************************

ObjectPropertyAssertion(:hasOrderedActionGroup_Step
                        :plan_1 :step_20)

//*****************************************
// 3 start NumberedPlanElement step_20
Declaration(NamedIndividual(:step_20))
ClassAssertion(:NumberedPlanElement :step_20)
DataPropertyAssertion(:hasNumberedPlanElement_SequenceNumber :step_20
                      "20"^^xsd:positiveInteger)
ObjectPropertyAssertion(:hasNumberedPlanElement_PlanElement
                        :step_20 :attach_3)

//*****************************************
// 4 start AttachEndEffector attach_3
Declaration(NamedIndividual(:attach_3))
ClassAssertion(:AttachEndEffector :attach_3)
DataPropertyAssertion(:hasAttachEndEffector_RobotName :attach_3
                      "robot_1"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasAttachEndEffector_EndEffectorName :attach_3
                      "tray_gripper"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasAttachEndEffector_EndEffectorHolderName :attach_3
                      "tray_gripper_holder"^^xsd:NMTOKEN)
// 4 end AttachEndEffector
//*****************************************

// 3 end NumberedPlanElement
//*****************************************

ObjectPropertyAssertion(:hasOrderedActionGroup_Step
                        :plan_1 :step_21)

//*****************************************
// 3 start NumberedPlanElement step_21
Declaration(NamedIndividual(:step_21))
ClassAssertion(:NumberedPlanElement :step_21)
DataPropertyAssertion(:hasNumberedPlanElement_SequenceNumber :step_21
                      "21"^^xsd:positiveInteger)
ObjectPropertyAssertion(:hasNumberedPlanElement_PlanElement
                        :step_21 :take_kit_1)

//*****************************************
// 4 start TakeKit take_kit_1
Declaration(NamedIndividual(:take_kit_1))
ClassAssertion(:TakeKit :take_kit_1)
DataPropertyAssertion(:hasTakeKit_RobotName :take_kit_1
                      "robot_1"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasTakeKit_KitName :take_kit_1
                      "kit_1"^^xsd:NMTOKEN)
// 4 end TakeKit
//*****************************************

// 3 end NumberedPlanElement
//*****************************************

ObjectPropertyAssertion(:hasOrderedActionGroup_Step
                        :plan_1 :step_22)

//*****************************************
// 3 start NumberedPlanElement step_22
Declaration(NamedIndividual(:step_22))
ClassAssertion(:NumberedPlanElement :step_22)
DataPropertyAssertion(:hasNumberedPlanElement_SequenceNumber :step_22
                      "22"^^xsd:positiveInteger)
ObjectPropertyAssertion(:hasNumberedPlanElement_PlanElement
                        :step_22 :put_kit_1)

//*****************************************
// 4 start PutKit put_kit_1
Declaration(NamedIndividual(:put_kit_1))
ClassAssertion(:PutKit :put_kit_1)
DataPropertyAssertion(:hasPutKit_RobotName :put_kit_1
                      "robot_1"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasPutKit_KitName :put_kit_1
                      "kit_1"^^xsd:NMTOKEN)
ObjectPropertyAssertion(:hasPutKit_Location
                        :put_kit_1 :kit_in_receiver)

//*****************************************
// 5 start RelativeLocationIn kit_in_receiver
Declaration(NamedIndividual(:kit_in_receiver))
ClassAssertion(:RelativeLocationIn :kit_in_receiver)
DataPropertyAssertion(:hasPhysicalLocation_RefObjectName :kit_in_receiver
                      "finished_kit_receiver"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasRelativeLocation_Description :kit_in_receiver
                      "kit in receiver"^^xsd:string)
// 5 end RelativeLocationIn
//*****************************************

// 4 end PutKit
//*****************************************

// 3 end NumberedPlanElement
//*****************************************

// 2 end OrderedActionGroup
//*****************************************

// 1 end KittingPlan
//*****************************************


//*****************************************
// AttachEndEffector individuals 
DifferentIndividuals(
 :attach_1
 :attach_2
 :attach_3)

//*****************************************
// DetachEndEffector individuals 
DifferentIndividuals(
 :detach_1
 :detach_2)

//*****************************************
// LocatePart individuals 
DifferentIndividuals(
 :locate_part_a_1
 :locate_part_a_2
 :locate_part_b_1
 :locate_part_c_1)

//*****************************************
// NumberedPlanElement individuals 
DifferentIndividuals(
 :step_1
 :step_10
 :step_11
 :step_12
 :step_13
 :step_14
 :step_15
 :step_16
 :step_17
 :step_18
 :step_19
 :step_2
 :step_20
 :step_21
 :step_22
 :step_3
 :step_4
 :step_5
 :step_6
 :step_7
 :step_8
 :step_9)

//*****************************************
// PutPart individuals 
DifferentIndividuals(
 :put_part_a_1
 :put_part_a_2
 :put_part_b_1
 :put_part_c_1)

//*****************************************
// RelativeLocationIn individuals 
DifferentIndividuals(
 :a_1_in_kit
 :a_2_in_kit
 :b_1_in_kit
 :c_1_in_kit
 :kit_in_receiver)

//*****************************************
// TakePart individuals 
DifferentIndividuals(
 :take_part_a_1
 :take_part_a_2
 :take_part_b_1
 :take_part_c_1)
)
