Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)
Prefix(:=<http://www.nist.gov/el/ontologies/soapInstances.owl#>)
Prefix(soap:=<http://www.nist.gov/el/ontologies/soapClasses.owl#>)
Prefix(ktw:=<http://www.nist.gov/el/ontologies/kittingWorkstationClasses.owl#>)
Ontology(<http://www.nist.gov/el/ontologies/soapInstances.owl>
Import(<file:soapClasses.owl>)

//*****************************************
// 1 start soap:SOAP soap
Declaration(NamedIndividual(:soap))
ClassAssertion(soap:SOAP :soap)
ObjectPropertyAssertion(soap:hasSOAP_KittingWorkstation
                        :soap :kitting_workstation_1)

//*****************************************
// 2 start ktw:KittingWorkstation kitting_workstation_1
Declaration(NamedIndividual(:kitting_workstation_1))
ClassAssertion(ktw:KittingWorkstation :kitting_workstation_1)
ObjectPropertyAssertion(ktw:hasSolidObject_PrimaryLocation
                        :kitting_workstation_1 :relative_location_in_1)

//*****************************************
// 3 start ktw:RelativeLocationIn relative_location_in_1
Declaration(NamedIndividual(:relative_location_in_1))
ClassAssertion(ktw:RelativeLocationIn :relative_location_in_1)
ObjectPropertyAssertion(ktw:hasPhysicalLocation_RefObject
                        :relative_location_in_1 :kitting_workstation_1)
DataPropertyAssertion(ktw:hasRelativeLocation_Description :relative_location_in_1
                      "The KittingWorkstation is in kitting_workstation_1
    "^^xsd:string)
// 3 end ktw:RelativeLocationIn
//*****************************************

DataPropertyAssertion(ktw:hasKittingWorkstation_AngleUnit :kitting_workstation_1
                      "degree"^^xsd:NMTOKEN)
ObjectPropertyAssertion(ktw:hasKittingWorkstation_ChangingStation
                        :kitting_workstation_1 :changing_station_1)

//*****************************************
// 3 start ktw:EndEffectorChangingStation changing_station_1
Declaration(NamedIndividual(:changing_station_1))
ClassAssertion(ktw:EndEffectorChangingStation :changing_station_1)
ObjectPropertyAssertion(ktw:hasSolidObject_PrimaryLocation
                        :changing_station_1 :changing_station_pose)

//*****************************************
// 4 start ktw:PoseOnlyLocation changing_station_pose
Declaration(NamedIndividual(:changing_station_pose))
ClassAssertion(ktw:PoseOnlyLocation :changing_station_pose)
ObjectPropertyAssertion(ktw:hasPhysicalLocation_RefObject
                        :changing_station_pose :kitting_workstation_1)
ObjectPropertyAssertion(ktw:hasPoseLocation_Point
                        :changing_station_pose :changing_station_point)

//*****************************************
// 5 start ktw:Point changing_station_point
Declaration(NamedIndividual(:changing_station_point))
ClassAssertion(ktw:Point :changing_station_point)
DataPropertyAssertion(ktw:hasPoint_X :changing_station_point
                      "7.500000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Y :changing_station_point
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Z :changing_station_point
                      "0.000000"^^xsd:decimal)
// 5 end ktw:Point
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_XAxis
                        :changing_station_pose :changing_station_x_axis)

//*****************************************
// 5 start ktw:Vector changing_station_x_axis
Declaration(NamedIndividual(:changing_station_x_axis))
ClassAssertion(ktw:Vector :changing_station_x_axis)
DataPropertyAssertion(ktw:hasVector_I :changing_station_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :changing_station_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :changing_station_x_axis
                      "0.000000"^^xsd:decimal)
// 5 end ktw:Vector
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_ZAxis
                        :changing_station_pose :changing_station_z_axis)

//*****************************************
// 5 start ktw:Vector changing_station_z_axis
Declaration(NamedIndividual(:changing_station_z_axis))
ClassAssertion(ktw:Vector :changing_station_z_axis)
DataPropertyAssertion(ktw:hasVector_I :changing_station_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :changing_station_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :changing_station_z_axis
                      "1.000000"^^xsd:decimal)
// 5 end ktw:Vector
//*****************************************

// 4 end ktw:PoseOnlyLocation
//*****************************************

ObjectPropertyAssertion(ktw:hasEndEffectorChangingStation_Base
                        :changing_station_1 :changing_station_base)

//*****************************************
// 4 start ktw:MechanicalComponent changing_station_base
Declaration(NamedIndividual(:changing_station_base))
ClassAssertion(ktw:MechanicalComponent :changing_station_base)
ObjectPropertyAssertion(ktw:hasSolidObject_PrimaryLocation
                        :changing_station_base :changing_station_base_pose)

//*****************************************
// 5 start ktw:PoseOnlyLocation changing_station_base_pose
Declaration(NamedIndividual(:changing_station_base_pose))
ClassAssertion(ktw:PoseOnlyLocation :changing_station_base_pose)
ObjectPropertyAssertion(ktw:hasPhysicalLocation_RefObject
                        :changing_station_base_pose :changing_station_1)
ObjectPropertyAssertion(ktw:hasPoseLocation_Point
                        :changing_station_base_pose :changing_station_base_point)

//*****************************************
// 6 start ktw:Point changing_station_base_point
Declaration(NamedIndividual(:changing_station_base_point))
ClassAssertion(ktw:Point :changing_station_base_point)
DataPropertyAssertion(ktw:hasPoint_X :changing_station_base_point
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Y :changing_station_base_point
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Z :changing_station_base_point
                      "0.000000"^^xsd:decimal)
// 6 end ktw:Point
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_XAxis
                        :changing_station_base_pose :changing_station_base_x_axis)

//*****************************************
// 6 start ktw:Vector changing_station_base_x_axis
Declaration(NamedIndividual(:changing_station_base_x_axis))
ClassAssertion(ktw:Vector :changing_station_base_x_axis)
DataPropertyAssertion(ktw:hasVector_I :changing_station_base_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :changing_station_base_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :changing_station_base_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end ktw:Vector
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_ZAxis
                        :changing_station_base_pose :changing_station_base_z_axis)

//*****************************************
// 6 start ktw:Vector changing_station_base_z_axis
Declaration(NamedIndividual(:changing_station_base_z_axis))
ClassAssertion(ktw:Vector :changing_station_base_z_axis)
DataPropertyAssertion(ktw:hasVector_I :changing_station_base_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :changing_station_base_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :changing_station_base_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end ktw:Vector
//*****************************************

// 5 end ktw:PoseOnlyLocation
//*****************************************

ObjectPropertyAssertion(ktw:hasNoSkuObject_InternalShape
                        :changing_station_base :shape_changing_station_base)

//*****************************************
// 5 start ktw:BoxyShape shape_changing_station_base
Declaration(NamedIndividual(:shape_changing_station_base))
ClassAssertion(ktw:BoxyShape :shape_changing_station_base)
DataPropertyAssertion(ktw:hasShapeDesign_Description :shape_changing_station_base
                      "Shape of base of changing station"^^xsd:string)
DataPropertyAssertion(ktw:hasBoxyShape_Length :shape_changing_station_base
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasBoxyShape_Width :shape_changing_station_base
                      "0.100000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasBoxyShape_Height :shape_changing_station_base
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasBoxyShape_HasTop :shape_changing_station_base
                      "true"^^xsd:boolean)
// 5 end ktw:BoxyShape
//*****************************************

// 4 end ktw:MechanicalComponent
//*****************************************

ObjectPropertyAssertion(ktw:hasEndEffectorChangingStation_EndEffectorHolder
                        :changing_station_1 :part_gripper_holder)

//*****************************************
// 4 start ktw:EndEffectorHolder part_gripper_holder
Declaration(NamedIndividual(:part_gripper_holder))
ClassAssertion(ktw:EndEffectorHolder :part_gripper_holder)
ObjectPropertyAssertion(ktw:hasSolidObject_PrimaryLocation
                        :part_gripper_holder :part_gripper_holder_pose)

//*****************************************
// 5 start ktw:PoseOnlyLocation part_gripper_holder_pose
Declaration(NamedIndividual(:part_gripper_holder_pose))
ClassAssertion(ktw:PoseOnlyLocation :part_gripper_holder_pose)
ObjectPropertyAssertion(ktw:hasPhysicalLocation_RefObject
                        :part_gripper_holder_pose :changing_station_1)
ObjectPropertyAssertion(ktw:hasPoseLocation_Point
                        :part_gripper_holder_pose :part_gripper_holder_point)

//*****************************************
// 6 start ktw:Point part_gripper_holder_point
Declaration(NamedIndividual(:part_gripper_holder_point))
ClassAssertion(ktw:Point :part_gripper_holder_point)
DataPropertyAssertion(ktw:hasPoint_X :part_gripper_holder_point
                      "0.250000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Y :part_gripper_holder_point
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Z :part_gripper_holder_point
                      "0.500000"^^xsd:decimal)
// 6 end ktw:Point
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_XAxis
                        :part_gripper_holder_pose :part_gripper_holder_x_axis)

//*****************************************
// 6 start ktw:Vector part_gripper_holder_x_axis
Declaration(NamedIndividual(:part_gripper_holder_x_axis))
ClassAssertion(ktw:Vector :part_gripper_holder_x_axis)
DataPropertyAssertion(ktw:hasVector_I :part_gripper_holder_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :part_gripper_holder_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :part_gripper_holder_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end ktw:Vector
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_ZAxis
                        :part_gripper_holder_pose :part_gripper_holder_z_axis)

//*****************************************
// 6 start ktw:Vector part_gripper_holder_z_axis
Declaration(NamedIndividual(:part_gripper_holder_z_axis))
ClassAssertion(ktw:Vector :part_gripper_holder_z_axis)
DataPropertyAssertion(ktw:hasVector_I :part_gripper_holder_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :part_gripper_holder_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :part_gripper_holder_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end ktw:Vector
//*****************************************

// 5 end ktw:PoseOnlyLocation
//*****************************************

ObjectPropertyAssertion(ktw:hasEndEffectorHolder_EndEffector
                        :part_gripper_holder :part_gripper)

//*****************************************
// 5 start ktw:VacuumEffectorSingleCup part_gripper
Declaration(NamedIndividual(:part_gripper))
ClassAssertion(ktw:VacuumEffectorSingleCup :part_gripper)
ObjectPropertyAssertion(ktw:hasSolidObject_PrimaryLocation
                        :part_gripper :part_gripper_pose)

//*****************************************
// 6 start ktw:PoseOnlyLocation part_gripper_pose
Declaration(NamedIndividual(:part_gripper_pose))
ClassAssertion(ktw:PoseOnlyLocation :part_gripper_pose)
ObjectPropertyAssertion(ktw:hasPhysicalLocation_RefObject
                        :part_gripper_pose :part_gripper_holder)
ObjectPropertyAssertion(ktw:hasPoseLocation_Point
                        :part_gripper_pose :part_gripper_point)

//*****************************************
// 7 start ktw:Point part_gripper_point
Declaration(NamedIndividual(:part_gripper_point))
ClassAssertion(ktw:Point :part_gripper_point)
DataPropertyAssertion(ktw:hasPoint_X :part_gripper_point
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Y :part_gripper_point
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Z :part_gripper_point
                      "0.000000"^^xsd:decimal)
// 7 end ktw:Point
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_XAxis
                        :part_gripper_pose :part_gripper_x_axis)

//*****************************************
// 7 start ktw:Vector part_gripper_x_axis
Declaration(NamedIndividual(:part_gripper_x_axis))
ClassAssertion(ktw:Vector :part_gripper_x_axis)
DataPropertyAssertion(ktw:hasVector_I :part_gripper_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :part_gripper_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :part_gripper_x_axis
                      "0.000000"^^xsd:decimal)
// 7 end ktw:Vector
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_ZAxis
                        :part_gripper_pose :part_gripper_z_axis)

//*****************************************
// 7 start ktw:Vector part_gripper_z_axis
Declaration(NamedIndividual(:part_gripper_z_axis))
ClassAssertion(ktw:Vector :part_gripper_z_axis)
DataPropertyAssertion(ktw:hasVector_I :part_gripper_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :part_gripper_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :part_gripper_z_axis
                      "1.000000"^^xsd:decimal)
// 7 end ktw:Vector
//*****************************************

// 6 end ktw:PoseOnlyLocation
//*****************************************

DataPropertyAssertion(ktw:hasEndEffector_Description :part_gripper
                      "small single cup vacuum effector"^^xsd:string)
DataPropertyAssertion(ktw:hasEndEffector_Weight :part_gripper
                      "0.010000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasEndEffector_MaximumLoadWeight :part_gripper
                      "0.400000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVacuumEffector_CupDiameter :part_gripper
                      "0.020000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVacuumEffector_Length :part_gripper
                      "0.025000"^^xsd:decimal)
// 5 end ktw:VacuumEffectorSingleCup
//*****************************************

// 4 end ktw:EndEffectorHolder
//*****************************************

ObjectPropertyAssertion(ktw:hasEndEffectorChangingStation_EndEffectorHolder
                        :changing_station_1 :tray_gripper_holder)

//*****************************************
// 4 start ktw:EndEffectorHolder tray_gripper_holder
Declaration(NamedIndividual(:tray_gripper_holder))
ClassAssertion(ktw:EndEffectorHolder :tray_gripper_holder)
ObjectPropertyAssertion(ktw:hasSolidObject_PrimaryLocation
                        :tray_gripper_holder :tray_gripper_holder_pose)

//*****************************************
// 5 start ktw:PoseOnlyLocation tray_gripper_holder_pose
Declaration(NamedIndividual(:tray_gripper_holder_pose))
ClassAssertion(ktw:PoseOnlyLocation :tray_gripper_holder_pose)
ObjectPropertyAssertion(ktw:hasPhysicalLocation_RefObject
                        :tray_gripper_holder_pose :changing_station_1)
ObjectPropertyAssertion(ktw:hasPoseLocation_Point
                        :tray_gripper_holder_pose :tray_gripper_holder_point)

//*****************************************
// 6 start ktw:Point tray_gripper_holder_point
Declaration(NamedIndividual(:tray_gripper_holder_point))
ClassAssertion(ktw:Point :tray_gripper_holder_point)
DataPropertyAssertion(ktw:hasPoint_X :tray_gripper_holder_point
                      "-0.250000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Y :tray_gripper_holder_point
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Z :tray_gripper_holder_point
                      "0.500000"^^xsd:decimal)
// 6 end ktw:Point
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_XAxis
                        :tray_gripper_holder_pose :tray_gripper_holder_x_axis)

//*****************************************
// 6 start ktw:Vector tray_gripper_holder_x_axis
Declaration(NamedIndividual(:tray_gripper_holder_x_axis))
ClassAssertion(ktw:Vector :tray_gripper_holder_x_axis)
DataPropertyAssertion(ktw:hasVector_I :tray_gripper_holder_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :tray_gripper_holder_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :tray_gripper_holder_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end ktw:Vector
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_ZAxis
                        :tray_gripper_holder_pose :tray_gripper_holder_z_axis)

//*****************************************
// 6 start ktw:Vector tray_gripper_holder_z_axis
Declaration(NamedIndividual(:tray_gripper_holder_z_axis))
ClassAssertion(ktw:Vector :tray_gripper_holder_z_axis)
DataPropertyAssertion(ktw:hasVector_I :tray_gripper_holder_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :tray_gripper_holder_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :tray_gripper_holder_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end ktw:Vector
//*****************************************

// 5 end ktw:PoseOnlyLocation
//*****************************************

// 4 end ktw:EndEffectorHolder
//*****************************************

// 3 end ktw:EndEffectorChangingStation
//*****************************************

ObjectPropertyAssertion(ktw:hasKittingWorkstation_KitDesign
                        :kitting_workstation_1 :kit_design_a2b1c1)

//*****************************************
// 3 start ktw:KitDesign kit_design_a2b1c1
Declaration(NamedIndividual(:kit_design_a2b1c1))
ClassAssertion(ktw:KitDesign :kit_design_a2b1c1)
ObjectPropertyAssertion(ktw:hasKitDesign_KitTraySku
                        :kit_design_a2b1c1 :stock_keeping_unit_kit_tray)
ObjectPropertyAssertion(ktw:hasKitDesign_PartRefAndPose
                        :kit_design_a2b1c1 :part_ref_and_pose_kit_a2b1c1_a_1)

//*****************************************
// 4 start ktw:PartRefAndPose part_ref_and_pose_kit_a2b1c1_a_1
Declaration(NamedIndividual(:part_ref_and_pose_kit_a2b1c1_a_1))
ClassAssertion(ktw:PartRefAndPose :part_ref_and_pose_kit_a2b1c1_a_1)
ObjectPropertyAssertion(ktw:hasPartRefAndPose_Sku
                        :part_ref_and_pose_kit_a2b1c1_a_1 :stock_keeping_unit_part_a)
ObjectPropertyAssertion(ktw:hasPartRefAndPose_Point
                        :part_ref_and_pose_kit_a2b1c1_a_1 :point_kit_a2b1c1_a_1)

//*****************************************
// 5 start ktw:Point point_kit_a2b1c1_a_1
Declaration(NamedIndividual(:point_kit_a2b1c1_a_1))
ClassAssertion(ktw:Point :point_kit_a2b1c1_a_1)
DataPropertyAssertion(ktw:hasPoint_X :point_kit_a2b1c1_a_1
                      "0.200000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Y :point_kit_a2b1c1_a_1
                      "0.300000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Z :point_kit_a2b1c1_a_1
                      "0.000000"^^xsd:decimal)
// 5 end ktw:Point
//*****************************************

ObjectPropertyAssertion(ktw:hasPartRefAndPose_XAxis
                        :part_ref_and_pose_kit_a2b1c1_a_1 :x_axis_kit_a2b1c1_a_1)

//*****************************************
// 5 start ktw:Vector x_axis_kit_a2b1c1_a_1
Declaration(NamedIndividual(:x_axis_kit_a2b1c1_a_1))
ClassAssertion(ktw:Vector :x_axis_kit_a2b1c1_a_1)
DataPropertyAssertion(ktw:hasVector_I :x_axis_kit_a2b1c1_a_1
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :x_axis_kit_a2b1c1_a_1
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :x_axis_kit_a2b1c1_a_1
                      "0.000000"^^xsd:decimal)
// 5 end ktw:Vector
//*****************************************

ObjectPropertyAssertion(ktw:hasPartRefAndPose_ZAxis
                        :part_ref_and_pose_kit_a2b1c1_a_1 :z_axis_kit_a2b1c1_a_1)

//*****************************************
// 5 start ktw:Vector z_axis_kit_a2b1c1_a_1
Declaration(NamedIndividual(:z_axis_kit_a2b1c1_a_1))
ClassAssertion(ktw:Vector :z_axis_kit_a2b1c1_a_1)
DataPropertyAssertion(ktw:hasVector_I :z_axis_kit_a2b1c1_a_1
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :z_axis_kit_a2b1c1_a_1
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :z_axis_kit_a2b1c1_a_1
                      "1.000000"^^xsd:decimal)
// 5 end ktw:Vector
//*****************************************

// 4 end ktw:PartRefAndPose
//*****************************************

ObjectPropertyAssertion(ktw:hasKitDesign_PartRefAndPose
                        :kit_design_a2b1c1 :part_ref_and_pose_kit_a2b1c1_a_2)

//*****************************************
// 4 start ktw:PartRefAndPose part_ref_and_pose_kit_a2b1c1_a_2
Declaration(NamedIndividual(:part_ref_and_pose_kit_a2b1c1_a_2))
ClassAssertion(ktw:PartRefAndPose :part_ref_and_pose_kit_a2b1c1_a_2)
ObjectPropertyAssertion(ktw:hasPartRefAndPose_Sku
                        :part_ref_and_pose_kit_a2b1c1_a_2 :stock_keeping_unit_part_a)
ObjectPropertyAssertion(ktw:hasPartRefAndPose_Point
                        :part_ref_and_pose_kit_a2b1c1_a_2 :point_kit_a2b1c1_a_2)

//*****************************************
// 5 start ktw:Point point_kit_a2b1c1_a_2
Declaration(NamedIndividual(:point_kit_a2b1c1_a_2))
ClassAssertion(ktw:Point :point_kit_a2b1c1_a_2)
DataPropertyAssertion(ktw:hasPoint_X :point_kit_a2b1c1_a_2
                      "0.400000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Y :point_kit_a2b1c1_a_2
                      "0.300000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Z :point_kit_a2b1c1_a_2
                      "0.000000"^^xsd:decimal)
// 5 end ktw:Point
//*****************************************

ObjectPropertyAssertion(ktw:hasPartRefAndPose_XAxis
                        :part_ref_and_pose_kit_a2b1c1_a_2 :x_axis_kit_a2b1c1_a_2)

//*****************************************
// 5 start ktw:Vector x_axis_kit_a2b1c1_a_2
Declaration(NamedIndividual(:x_axis_kit_a2b1c1_a_2))
ClassAssertion(ktw:Vector :x_axis_kit_a2b1c1_a_2)
DataPropertyAssertion(ktw:hasVector_I :x_axis_kit_a2b1c1_a_2
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :x_axis_kit_a2b1c1_a_2
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :x_axis_kit_a2b1c1_a_2
                      "0.000000"^^xsd:decimal)
// 5 end ktw:Vector
//*****************************************

ObjectPropertyAssertion(ktw:hasPartRefAndPose_ZAxis
                        :part_ref_and_pose_kit_a2b1c1_a_2 :z_axis_kit_a2b1c1_a_2)

//*****************************************
// 5 start ktw:Vector z_axis_kit_a2b1c1_a_2
Declaration(NamedIndividual(:z_axis_kit_a2b1c1_a_2))
ClassAssertion(ktw:Vector :z_axis_kit_a2b1c1_a_2)
DataPropertyAssertion(ktw:hasVector_I :z_axis_kit_a2b1c1_a_2
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :z_axis_kit_a2b1c1_a_2
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :z_axis_kit_a2b1c1_a_2
                      "1.000000"^^xsd:decimal)
// 5 end ktw:Vector
//*****************************************

// 4 end ktw:PartRefAndPose
//*****************************************

ObjectPropertyAssertion(ktw:hasKitDesign_PartRefAndPose
                        :kit_design_a2b1c1 :part_ref_and_pose_kit_a2b1c1_b_1)

//*****************************************
// 4 start ktw:PartRefAndPose part_ref_and_pose_kit_a2b1c1_b_1
Declaration(NamedIndividual(:part_ref_and_pose_kit_a2b1c1_b_1))
ClassAssertion(ktw:PartRefAndPose :part_ref_and_pose_kit_a2b1c1_b_1)
ObjectPropertyAssertion(ktw:hasPartRefAndPose_Sku
                        :part_ref_and_pose_kit_a2b1c1_b_1 :stock_keeping_unit_part_b)
ObjectPropertyAssertion(ktw:hasPartRefAndPose_Point
                        :part_ref_and_pose_kit_a2b1c1_b_1 :point_kit_a2b1c1_b_1)

//*****************************************
// 5 start ktw:Point point_kit_a2b1c1_b_1
Declaration(NamedIndividual(:point_kit_a2b1c1_b_1))
ClassAssertion(ktw:Point :point_kit_a2b1c1_b_1)
DataPropertyAssertion(ktw:hasPoint_X :point_kit_a2b1c1_b_1
                      "0.200000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Y :point_kit_a2b1c1_b_1
                      "0.500000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Z :point_kit_a2b1c1_b_1
                      "0.000000"^^xsd:decimal)
// 5 end ktw:Point
//*****************************************

ObjectPropertyAssertion(ktw:hasPartRefAndPose_XAxis
                        :part_ref_and_pose_kit_a2b1c1_b_1 :x_axis_kit_a2b1c1_b_1)

//*****************************************
// 5 start ktw:Vector x_axis_kit_a2b1c1_b_1
Declaration(NamedIndividual(:x_axis_kit_a2b1c1_b_1))
ClassAssertion(ktw:Vector :x_axis_kit_a2b1c1_b_1)
DataPropertyAssertion(ktw:hasVector_I :x_axis_kit_a2b1c1_b_1
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :x_axis_kit_a2b1c1_b_1
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :x_axis_kit_a2b1c1_b_1
                      "0.000000"^^xsd:decimal)
// 5 end ktw:Vector
//*****************************************

ObjectPropertyAssertion(ktw:hasPartRefAndPose_ZAxis
                        :part_ref_and_pose_kit_a2b1c1_b_1 :z_axis_kit_a2b1c1_b_1)

//*****************************************
// 5 start ktw:Vector z_axis_kit_a2b1c1_b_1
Declaration(NamedIndividual(:z_axis_kit_a2b1c1_b_1))
ClassAssertion(ktw:Vector :z_axis_kit_a2b1c1_b_1)
DataPropertyAssertion(ktw:hasVector_I :z_axis_kit_a2b1c1_b_1
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :z_axis_kit_a2b1c1_b_1
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :z_axis_kit_a2b1c1_b_1
                      "1.000000"^^xsd:decimal)
// 5 end ktw:Vector
//*****************************************

// 4 end ktw:PartRefAndPose
//*****************************************

ObjectPropertyAssertion(ktw:hasKitDesign_PartRefAndPose
                        :kit_design_a2b1c1 :part_ref_and_pose_kit_a2b1c1_c_1)

//*****************************************
// 4 start ktw:PartRefAndPose part_ref_and_pose_kit_a2b1c1_c_1
Declaration(NamedIndividual(:part_ref_and_pose_kit_a2b1c1_c_1))
ClassAssertion(ktw:PartRefAndPose :part_ref_and_pose_kit_a2b1c1_c_1)
ObjectPropertyAssertion(ktw:hasPartRefAndPose_Sku
                        :part_ref_and_pose_kit_a2b1c1_c_1 :stock_keeping_unit_part_c)
ObjectPropertyAssertion(ktw:hasPartRefAndPose_Point
                        :part_ref_and_pose_kit_a2b1c1_c_1 :point_kit_a2b1c1_c_1)

//*****************************************
// 5 start ktw:Point point_kit_a2b1c1_c_1
Declaration(NamedIndividual(:point_kit_a2b1c1_c_1))
ClassAssertion(ktw:Point :point_kit_a2b1c1_c_1)
DataPropertyAssertion(ktw:hasPoint_X :point_kit_a2b1c1_c_1
                      "0.400000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Y :point_kit_a2b1c1_c_1
                      "0.500000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Z :point_kit_a2b1c1_c_1
                      "0.000000"^^xsd:decimal)
// 5 end ktw:Point
//*****************************************

ObjectPropertyAssertion(ktw:hasPartRefAndPose_XAxis
                        :part_ref_and_pose_kit_a2b1c1_c_1 :x_axis_kit_a2b1c1_c_1)

//*****************************************
// 5 start ktw:Vector x_axis_kit_a2b1c1_c_1
Declaration(NamedIndividual(:x_axis_kit_a2b1c1_c_1))
ClassAssertion(ktw:Vector :x_axis_kit_a2b1c1_c_1)
DataPropertyAssertion(ktw:hasVector_I :x_axis_kit_a2b1c1_c_1
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :x_axis_kit_a2b1c1_c_1
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :x_axis_kit_a2b1c1_c_1
                      "0.000000"^^xsd:decimal)
// 5 end ktw:Vector
//*****************************************

ObjectPropertyAssertion(ktw:hasPartRefAndPose_ZAxis
                        :part_ref_and_pose_kit_a2b1c1_c_1 :z_axis_kit_a2b1c1_c_1)

//*****************************************
// 5 start ktw:Vector z_axis_kit_a2b1c1_c_1
Declaration(NamedIndividual(:z_axis_kit_a2b1c1_c_1))
ClassAssertion(ktw:Vector :z_axis_kit_a2b1c1_c_1)
DataPropertyAssertion(ktw:hasVector_I :z_axis_kit_a2b1c1_c_1
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :z_axis_kit_a2b1c1_c_1
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :z_axis_kit_a2b1c1_c_1
                      "1.000000"^^xsd:decimal)
// 5 end ktw:Vector
//*****************************************

// 4 end ktw:PartRefAndPose
//*****************************************

// 3 end ktw:KitDesign
//*****************************************

ObjectPropertyAssertion(ktw:hasKittingWorkstation_KitDesign
                        :kitting_workstation_1 :kit_design_a2b2c1)

//*****************************************
// 3 start ktw:KitDesign kit_design_a2b2c1
Declaration(NamedIndividual(:kit_design_a2b2c1))
ClassAssertion(ktw:KitDesign :kit_design_a2b2c1)
ObjectPropertyAssertion(ktw:hasKitDesign_KitTraySku
                        :kit_design_a2b2c1 :stock_keeping_unit_kit_tray)
ObjectPropertyAssertion(ktw:hasKitDesign_PartRefAndPose
                        :kit_design_a2b2c1 :part_ref_and_pose_kit_a2b2c1_a_1)

//*****************************************
// 4 start ktw:PartRefAndPose part_ref_and_pose_kit_a2b2c1_a_1
Declaration(NamedIndividual(:part_ref_and_pose_kit_a2b2c1_a_1))
ClassAssertion(ktw:PartRefAndPose :part_ref_and_pose_kit_a2b2c1_a_1)
ObjectPropertyAssertion(ktw:hasPartRefAndPose_Sku
                        :part_ref_and_pose_kit_a2b2c1_a_1 :stock_keeping_unit_part_a)
ObjectPropertyAssertion(ktw:hasPartRefAndPose_Point
                        :part_ref_and_pose_kit_a2b2c1_a_1 :point_kit_a2b2c1_a_1)

//*****************************************
// 5 start ktw:Point point_kit_a2b2c1_a_1
Declaration(NamedIndividual(:point_kit_a2b2c1_a_1))
ClassAssertion(ktw:Point :point_kit_a2b2c1_a_1)
DataPropertyAssertion(ktw:hasPoint_X :point_kit_a2b2c1_a_1
                      "-0.159000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Y :point_kit_a2b2c1_a_1
                      "0.145000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Z :point_kit_a2b2c1_a_1
                      "0.036000"^^xsd:decimal)
// 5 end ktw:Point
//*****************************************

ObjectPropertyAssertion(ktw:hasPartRefAndPose_XAxis
                        :part_ref_and_pose_kit_a2b2c1_a_1 :x_axis_kit_a2b2c1_a_1)

//*****************************************
// 5 start ktw:Vector x_axis_kit_a2b2c1_a_1
Declaration(NamedIndividual(:x_axis_kit_a2b2c1_a_1))
ClassAssertion(ktw:Vector :x_axis_kit_a2b2c1_a_1)
DataPropertyAssertion(ktw:hasVector_I :x_axis_kit_a2b2c1_a_1
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :x_axis_kit_a2b2c1_a_1
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :x_axis_kit_a2b2c1_a_1
                      "0.000000"^^xsd:decimal)
// 5 end ktw:Vector
//*****************************************

ObjectPropertyAssertion(ktw:hasPartRefAndPose_ZAxis
                        :part_ref_and_pose_kit_a2b2c1_a_1 :z_axis_kit_a2b2c1_a_1)

//*****************************************
// 5 start ktw:Vector z_axis_kit_a2b2c1_a_1
Declaration(NamedIndividual(:z_axis_kit_a2b2c1_a_1))
ClassAssertion(ktw:Vector :z_axis_kit_a2b2c1_a_1)
DataPropertyAssertion(ktw:hasVector_I :z_axis_kit_a2b2c1_a_1
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :z_axis_kit_a2b2c1_a_1
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :z_axis_kit_a2b2c1_a_1
                      "1.000000"^^xsd:decimal)
// 5 end ktw:Vector
//*****************************************

// 4 end ktw:PartRefAndPose
//*****************************************

ObjectPropertyAssertion(ktw:hasKitDesign_PartRefAndPose
                        :kit_design_a2b2c1 :part_ref_and_pose_kit_a2b2c1_a_2)

//*****************************************
// 4 start ktw:PartRefAndPose part_ref_and_pose_kit_a2b2c1_a_2
Declaration(NamedIndividual(:part_ref_and_pose_kit_a2b2c1_a_2))
ClassAssertion(ktw:PartRefAndPose :part_ref_and_pose_kit_a2b2c1_a_2)
ObjectPropertyAssertion(ktw:hasPartRefAndPose_Sku
                        :part_ref_and_pose_kit_a2b2c1_a_2 :stock_keeping_unit_part_a)
ObjectPropertyAssertion(ktw:hasPartRefAndPose_Point
                        :part_ref_and_pose_kit_a2b2c1_a_2 :point_kit_a2b2c1_a_2)

//*****************************************
// 5 start ktw:Point point_kit_a2b2c1_a_2
Declaration(NamedIndividual(:point_kit_a2b2c1_a_2))
ClassAssertion(ktw:Point :point_kit_a2b2c1_a_2)
DataPropertyAssertion(ktw:hasPoint_X :point_kit_a2b2c1_a_2
                      "-0.159000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Y :point_kit_a2b2c1_a_2
                      "-0.149000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Z :point_kit_a2b2c1_a_2
                      "0.036000"^^xsd:decimal)
// 5 end ktw:Point
//*****************************************

ObjectPropertyAssertion(ktw:hasPartRefAndPose_XAxis
                        :part_ref_and_pose_kit_a2b2c1_a_2 :x_axis_kit_a2b2c1_a_2)

//*****************************************
// 5 start ktw:Vector x_axis_kit_a2b2c1_a_2
Declaration(NamedIndividual(:x_axis_kit_a2b2c1_a_2))
ClassAssertion(ktw:Vector :x_axis_kit_a2b2c1_a_2)
DataPropertyAssertion(ktw:hasVector_I :x_axis_kit_a2b2c1_a_2
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :x_axis_kit_a2b2c1_a_2
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :x_axis_kit_a2b2c1_a_2
                      "0.000000"^^xsd:decimal)
// 5 end ktw:Vector
//*****************************************

ObjectPropertyAssertion(ktw:hasPartRefAndPose_ZAxis
                        :part_ref_and_pose_kit_a2b2c1_a_2 :z_axis_kit_a2b2c1_a_2)

//*****************************************
// 5 start ktw:Vector z_axis_kit_a2b2c1_a_2
Declaration(NamedIndividual(:z_axis_kit_a2b2c1_a_2))
ClassAssertion(ktw:Vector :z_axis_kit_a2b2c1_a_2)
DataPropertyAssertion(ktw:hasVector_I :z_axis_kit_a2b2c1_a_2
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :z_axis_kit_a2b2c1_a_2
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :z_axis_kit_a2b2c1_a_2
                      "1.000000"^^xsd:decimal)
// 5 end ktw:Vector
//*****************************************

// 4 end ktw:PartRefAndPose
//*****************************************

ObjectPropertyAssertion(ktw:hasKitDesign_PartRefAndPose
                        :kit_design_a2b2c1 :part_ref_and_pose_kit_a2b2c1_b_1)

//*****************************************
// 4 start ktw:PartRefAndPose part_ref_and_pose_kit_a2b2c1_b_1
Declaration(NamedIndividual(:part_ref_and_pose_kit_a2b2c1_b_1))
ClassAssertion(ktw:PartRefAndPose :part_ref_and_pose_kit_a2b2c1_b_1)
ObjectPropertyAssertion(ktw:hasPartRefAndPose_Sku
                        :part_ref_and_pose_kit_a2b2c1_b_1 :stock_keeping_unit_part_b)
ObjectPropertyAssertion(ktw:hasPartRefAndPose_Point
                        :part_ref_and_pose_kit_a2b2c1_b_1 :point_kit_a2b2c1_b_1)

//*****************************************
// 5 start ktw:Point point_kit_a2b2c1_b_1
Declaration(NamedIndividual(:point_kit_a2b2c1_b_1))
ClassAssertion(ktw:Point :point_kit_a2b2c1_b_1)
DataPropertyAssertion(ktw:hasPoint_X :point_kit_a2b2c1_b_1
                      "0.219000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Y :point_kit_a2b2c1_b_1
                      "-0.166000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Z :point_kit_a2b2c1_b_1
                      "0.080000"^^xsd:decimal)
// 5 end ktw:Point
//*****************************************

ObjectPropertyAssertion(ktw:hasPartRefAndPose_XAxis
                        :part_ref_and_pose_kit_a2b2c1_b_1 :x_axis_kit_a2b2c1_b_1)

//*****************************************
// 5 start ktw:Vector x_axis_kit_a2b2c1_b_1
Declaration(NamedIndividual(:x_axis_kit_a2b2c1_b_1))
ClassAssertion(ktw:Vector :x_axis_kit_a2b2c1_b_1)
DataPropertyAssertion(ktw:hasVector_I :x_axis_kit_a2b2c1_b_1
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :x_axis_kit_a2b2c1_b_1
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :x_axis_kit_a2b2c1_b_1
                      "0.000000"^^xsd:decimal)
// 5 end ktw:Vector
//*****************************************

ObjectPropertyAssertion(ktw:hasPartRefAndPose_ZAxis
                        :part_ref_and_pose_kit_a2b2c1_b_1 :z_axis_kit_a2b2c1_b_1)

//*****************************************
// 5 start ktw:Vector z_axis_kit_a2b2c1_b_1
Declaration(NamedIndividual(:z_axis_kit_a2b2c1_b_1))
ClassAssertion(ktw:Vector :z_axis_kit_a2b2c1_b_1)
DataPropertyAssertion(ktw:hasVector_I :z_axis_kit_a2b2c1_b_1
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :z_axis_kit_a2b2c1_b_1
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :z_axis_kit_a2b2c1_b_1
                      "1.000000"^^xsd:decimal)
// 5 end ktw:Vector
//*****************************************

// 4 end ktw:PartRefAndPose
//*****************************************

ObjectPropertyAssertion(ktw:hasKitDesign_PartRefAndPose
                        :kit_design_a2b2c1 :part_ref_and_pose_kit_a2b2c1_b_2)

//*****************************************
// 4 start ktw:PartRefAndPose part_ref_and_pose_kit_a2b2c1_b_2
Declaration(NamedIndividual(:part_ref_and_pose_kit_a2b2c1_b_2))
ClassAssertion(ktw:PartRefAndPose :part_ref_and_pose_kit_a2b2c1_b_2)
ObjectPropertyAssertion(ktw:hasPartRefAndPose_Sku
                        :part_ref_and_pose_kit_a2b2c1_b_2 :stock_keeping_unit_part_b)
ObjectPropertyAssertion(ktw:hasPartRefAndPose_Point
                        :part_ref_and_pose_kit_a2b2c1_b_2 :point_kit_a2b2c1_b_2)

//*****************************************
// 5 start ktw:Point point_kit_a2b2c1_b_2
Declaration(NamedIndividual(:point_kit_a2b2c1_b_2))
ClassAssertion(ktw:Point :point_kit_a2b2c1_b_2)
DataPropertyAssertion(ktw:hasPoint_X :point_kit_a2b2c1_b_2
                      "0.171000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Y :point_kit_a2b2c1_b_2
                      "0.215000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Z :point_kit_a2b2c1_b_2
                      "0.080000"^^xsd:decimal)
// 5 end ktw:Point
//*****************************************

ObjectPropertyAssertion(ktw:hasPartRefAndPose_XAxis
                        :part_ref_and_pose_kit_a2b2c1_b_2 :x_axis_kit_a2b2c1_b_2)

//*****************************************
// 5 start ktw:Vector x_axis_kit_a2b2c1_b_2
Declaration(NamedIndividual(:x_axis_kit_a2b2c1_b_2))
ClassAssertion(ktw:Vector :x_axis_kit_a2b2c1_b_2)
DataPropertyAssertion(ktw:hasVector_I :x_axis_kit_a2b2c1_b_2
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :x_axis_kit_a2b2c1_b_2
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :x_axis_kit_a2b2c1_b_2
                      "0.000000"^^xsd:decimal)
// 5 end ktw:Vector
//*****************************************

ObjectPropertyAssertion(ktw:hasPartRefAndPose_ZAxis
                        :part_ref_and_pose_kit_a2b2c1_b_2 :z_axis_kit_a2b2c1_b_2)

//*****************************************
// 5 start ktw:Vector z_axis_kit_a2b2c1_b_2
Declaration(NamedIndividual(:z_axis_kit_a2b2c1_b_2))
ClassAssertion(ktw:Vector :z_axis_kit_a2b2c1_b_2)
DataPropertyAssertion(ktw:hasVector_I :z_axis_kit_a2b2c1_b_2
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :z_axis_kit_a2b2c1_b_2
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :z_axis_kit_a2b2c1_b_2
                      "1.000000"^^xsd:decimal)
// 5 end ktw:Vector
//*****************************************

// 4 end ktw:PartRefAndPose
//*****************************************

ObjectPropertyAssertion(ktw:hasKitDesign_PartRefAndPose
                        :kit_design_a2b2c1 :part_ref_and_pose_kit_a2b2c1_c_1)

//*****************************************
// 4 start ktw:PartRefAndPose part_ref_and_pose_kit_a2b2c1_c_1
Declaration(NamedIndividual(:part_ref_and_pose_kit_a2b2c1_c_1))
ClassAssertion(ktw:PartRefAndPose :part_ref_and_pose_kit_a2b2c1_c_1)
ObjectPropertyAssertion(ktw:hasPartRefAndPose_Sku
                        :part_ref_and_pose_kit_a2b2c1_c_1 :stock_keeping_unit_part_c)
ObjectPropertyAssertion(ktw:hasPartRefAndPose_Point
                        :part_ref_and_pose_kit_a2b2c1_c_1 :point_kit_a2b2c1_c_1)

//*****************************************
// 5 start ktw:Point point_kit_a2b2c1_c_1
Declaration(NamedIndividual(:point_kit_a2b2c1_c_1))
ClassAssertion(ktw:Point :point_kit_a2b2c1_c_1)
DataPropertyAssertion(ktw:hasPoint_X :point_kit_a2b2c1_c_1
                      "0.060000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Y :point_kit_a2b2c1_c_1
                      "-0.090000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Z :point_kit_a2b2c1_c_1
                      "0.045000"^^xsd:decimal)
// 5 end ktw:Point
//*****************************************

ObjectPropertyAssertion(ktw:hasPartRefAndPose_XAxis
                        :part_ref_and_pose_kit_a2b2c1_c_1 :x_axis_kit_a2b2c1_c_1)

//*****************************************
// 5 start ktw:Vector x_axis_kit_a2b2c1_c_1
Declaration(NamedIndividual(:x_axis_kit_a2b2c1_c_1))
ClassAssertion(ktw:Vector :x_axis_kit_a2b2c1_c_1)
DataPropertyAssertion(ktw:hasVector_I :x_axis_kit_a2b2c1_c_1
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :x_axis_kit_a2b2c1_c_1
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :x_axis_kit_a2b2c1_c_1
                      "0.000000"^^xsd:decimal)
// 5 end ktw:Vector
//*****************************************

ObjectPropertyAssertion(ktw:hasPartRefAndPose_ZAxis
                        :part_ref_and_pose_kit_a2b2c1_c_1 :z_axis_kit_a2b2c1_c_1)

//*****************************************
// 5 start ktw:Vector z_axis_kit_a2b2c1_c_1
Declaration(NamedIndividual(:z_axis_kit_a2b2c1_c_1))
ClassAssertion(ktw:Vector :z_axis_kit_a2b2c1_c_1)
DataPropertyAssertion(ktw:hasVector_I :z_axis_kit_a2b2c1_c_1
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :z_axis_kit_a2b2c1_c_1
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :z_axis_kit_a2b2c1_c_1
                      "1.000000"^^xsd:decimal)
// 5 end ktw:Vector
//*****************************************

// 4 end ktw:PartRefAndPose
//*****************************************

// 3 end ktw:KitDesign
//*****************************************

DataPropertyAssertion(ktw:hasKittingWorkstation_LengthUnit :kitting_workstation_1
                      "meter"^^xsd:NMTOKEN)
ObjectPropertyAssertion(ktw:hasKittingWorkstation_Object
                        :kitting_workstation_1 :empty_kit_tray_supply)

//*****************************************
// 3 start ktw:LargeBoxWithEmptyKitTrays empty_kit_tray_supply
Declaration(NamedIndividual(:empty_kit_tray_supply))
ClassAssertion(ktw:LargeBoxWithEmptyKitTrays :empty_kit_tray_supply)
ObjectPropertyAssertion(ktw:hasSolidObject_PrimaryLocation
                        :empty_kit_tray_supply :empty_kit_tray_supply_pose)

//*****************************************
// 4 start ktw:PoseOnlyLocation empty_kit_tray_supply_pose
Declaration(NamedIndividual(:empty_kit_tray_supply_pose))
ClassAssertion(ktw:PoseOnlyLocation :empty_kit_tray_supply_pose)
ObjectPropertyAssertion(ktw:hasPhysicalLocation_RefObject
                        :empty_kit_tray_supply_pose :kitting_workstation_1)
ObjectPropertyAssertion(ktw:hasPoseLocation_Point
                        :empty_kit_tray_supply_pose :empty_kit_tray_supply_point)

//*****************************************
// 5 start ktw:Point empty_kit_tray_supply_point
Declaration(NamedIndividual(:empty_kit_tray_supply_point))
ClassAssertion(ktw:Point :empty_kit_tray_supply_point)
DataPropertyAssertion(ktw:hasPoint_X :empty_kit_tray_supply_point
                      "0.500000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Y :empty_kit_tray_supply_point
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Z :empty_kit_tray_supply_point
                      "0.000000"^^xsd:decimal)
// 5 end ktw:Point
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_XAxis
                        :empty_kit_tray_supply_pose :empty_kit_tray_supply_x_axis)

//*****************************************
// 5 start ktw:Vector empty_kit_tray_supply_x_axis
Declaration(NamedIndividual(:empty_kit_tray_supply_x_axis))
ClassAssertion(ktw:Vector :empty_kit_tray_supply_x_axis)
DataPropertyAssertion(ktw:hasVector_I :empty_kit_tray_supply_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :empty_kit_tray_supply_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :empty_kit_tray_supply_x_axis
                      "0.000000"^^xsd:decimal)
// 5 end ktw:Vector
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_ZAxis
                        :empty_kit_tray_supply_pose :empty_kit_tray_supply_z_axis)

//*****************************************
// 5 start ktw:Vector empty_kit_tray_supply_z_axis
Declaration(NamedIndividual(:empty_kit_tray_supply_z_axis))
ClassAssertion(ktw:Vector :empty_kit_tray_supply_z_axis)
DataPropertyAssertion(ktw:hasVector_I :empty_kit_tray_supply_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :empty_kit_tray_supply_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :empty_kit_tray_supply_z_axis
                      "1.000000"^^xsd:decimal)
// 5 end ktw:Vector
//*****************************************

// 4 end ktw:PoseOnlyLocation
//*****************************************

ObjectPropertyAssertion(ktw:hasLargeBoxWithEmptyKitTrays_LargeContainer
                        :empty_kit_tray_supply :empty_kit_tray_box)

//*****************************************
// 4 start ktw:LargeContainer empty_kit_tray_box
Declaration(NamedIndividual(:empty_kit_tray_box))
ClassAssertion(ktw:LargeContainer :empty_kit_tray_box)
ObjectPropertyAssertion(ktw:hasSolidObject_PrimaryLocation
                        :empty_kit_tray_box :empty_kit_tray_box_pose)

//*****************************************
// 5 start ktw:PoseOnlyLocation empty_kit_tray_box_pose
Declaration(NamedIndividual(:empty_kit_tray_box_pose))
ClassAssertion(ktw:PoseOnlyLocation :empty_kit_tray_box_pose)
ObjectPropertyAssertion(ktw:hasPhysicalLocation_RefObject
                        :empty_kit_tray_box_pose :empty_kit_tray_supply)
ObjectPropertyAssertion(ktw:hasPoseLocation_Point
                        :empty_kit_tray_box_pose :empty_kit_tray_box_point)

//*****************************************
// 6 start ktw:Point empty_kit_tray_box_point
Declaration(NamedIndividual(:empty_kit_tray_box_point))
ClassAssertion(ktw:Point :empty_kit_tray_box_point)
DataPropertyAssertion(ktw:hasPoint_X :empty_kit_tray_box_point
                      "0.500000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Y :empty_kit_tray_box_point
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Z :empty_kit_tray_box_point
                      "0.000000"^^xsd:decimal)
// 6 end ktw:Point
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_XAxis
                        :empty_kit_tray_box_pose :empty_kit_tray_box_x_axis)

//*****************************************
// 6 start ktw:Vector empty_kit_tray_box_x_axis
Declaration(NamedIndividual(:empty_kit_tray_box_x_axis))
ClassAssertion(ktw:Vector :empty_kit_tray_box_x_axis)
DataPropertyAssertion(ktw:hasVector_I :empty_kit_tray_box_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :empty_kit_tray_box_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :empty_kit_tray_box_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end ktw:Vector
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_ZAxis
                        :empty_kit_tray_box_pose :empty_kit_tray_box_z_axis)

//*****************************************
// 6 start ktw:Vector empty_kit_tray_box_z_axis
Declaration(NamedIndividual(:empty_kit_tray_box_z_axis))
ClassAssertion(ktw:Vector :empty_kit_tray_box_z_axis)
DataPropertyAssertion(ktw:hasVector_I :empty_kit_tray_box_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :empty_kit_tray_box_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :empty_kit_tray_box_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end ktw:Vector
//*****************************************

// 5 end ktw:PoseOnlyLocation
//*****************************************

ObjectPropertyAssertion(ktw:hasSkuObject_Sku
                        :empty_kit_tray_box :stock_keeping_unit_kit_box)
DataPropertyAssertion(ktw:hasLargeContainer_SerialNumber :empty_kit_tray_box
                      "4"^^xsd:NMTOKEN)
// 4 end ktw:LargeContainer
//*****************************************

ObjectPropertyAssertion(ktw:hasLargeBoxWithEmptyKitTrays_KitTray
                        :empty_kit_tray_supply :kit_tray_1)

//*****************************************
// 4 start ktw:KitTray kit_tray_1
Declaration(NamedIndividual(:kit_tray_1))
ClassAssertion(ktw:KitTray :kit_tray_1)
ObjectPropertyAssertion(ktw:hasSolidObject_PrimaryLocation
                        :kit_tray_1 :kit_tray_1_pose)

//*****************************************
// 5 start ktw:PoseOnlyLocation kit_tray_1_pose
Declaration(NamedIndividual(:kit_tray_1_pose))
ClassAssertion(ktw:PoseOnlyLocation :kit_tray_1_pose)
ObjectPropertyAssertion(ktw:hasPhysicalLocation_RefObject
                        :kit_tray_1_pose :empty_kit_tray_supply)
ObjectPropertyAssertion(ktw:hasPoseLocation_Point
                        :kit_tray_1_pose :kit_tray_1_point)

//*****************************************
// 6 start ktw:Point kit_tray_1_point
Declaration(NamedIndividual(:kit_tray_1_point))
ClassAssertion(ktw:Point :kit_tray_1_point)
DataPropertyAssertion(ktw:hasPoint_X :kit_tray_1_point
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Y :kit_tray_1_point
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Z :kit_tray_1_point
                      "0.000000"^^xsd:decimal)
// 6 end ktw:Point
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_XAxis
                        :kit_tray_1_pose :kit_tray_1_x_axis)

//*****************************************
// 6 start ktw:Vector kit_tray_1_x_axis
Declaration(NamedIndividual(:kit_tray_1_x_axis))
ClassAssertion(ktw:Vector :kit_tray_1_x_axis)
DataPropertyAssertion(ktw:hasVector_I :kit_tray_1_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :kit_tray_1_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :kit_tray_1_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end ktw:Vector
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_ZAxis
                        :kit_tray_1_pose :kit_tray_1_z_axis)

//*****************************************
// 6 start ktw:Vector kit_tray_1_z_axis
Declaration(NamedIndividual(:kit_tray_1_z_axis))
ClassAssertion(ktw:Vector :kit_tray_1_z_axis)
DataPropertyAssertion(ktw:hasVector_I :kit_tray_1_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :kit_tray_1_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :kit_tray_1_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end ktw:Vector
//*****************************************

// 5 end ktw:PoseOnlyLocation
//*****************************************

ObjectPropertyAssertion(ktw:hasSkuObject_Sku
                        :kit_tray_1 :stock_keeping_unit_kit_tray)
DataPropertyAssertion(ktw:hasKitTray_SerialNumber :kit_tray_1
                      "1"^^xsd:NMTOKEN)
// 4 end ktw:KitTray
//*****************************************

ObjectPropertyAssertion(ktw:hasLargeBoxWithEmptyKitTrays_KitTray
                        :empty_kit_tray_supply :kit_tray_2)

//*****************************************
// 4 start ktw:KitTray kit_tray_2
Declaration(NamedIndividual(:kit_tray_2))
ClassAssertion(ktw:KitTray :kit_tray_2)
ObjectPropertyAssertion(ktw:hasSolidObject_PrimaryLocation
                        :kit_tray_2 :kit_tray_2_pose)

//*****************************************
// 5 start ktw:PoseOnlyLocation kit_tray_2_pose
Declaration(NamedIndividual(:kit_tray_2_pose))
ClassAssertion(ktw:PoseOnlyLocation :kit_tray_2_pose)
ObjectPropertyAssertion(ktw:hasPhysicalLocation_RefObject
                        :kit_tray_2_pose :empty_kit_tray_supply)
ObjectPropertyAssertion(ktw:hasPoseLocation_Point
                        :kit_tray_2_pose :kit_tray_2_point)

//*****************************************
// 6 start ktw:Point kit_tray_2_point
Declaration(NamedIndividual(:kit_tray_2_point))
ClassAssertion(ktw:Point :kit_tray_2_point)
DataPropertyAssertion(ktw:hasPoint_X :kit_tray_2_point
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Y :kit_tray_2_point
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Z :kit_tray_2_point
                      "0.150000"^^xsd:decimal)
// 6 end ktw:Point
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_XAxis
                        :kit_tray_2_pose :kit_tray_2_x_axis)

//*****************************************
// 6 start ktw:Vector kit_tray_2_x_axis
Declaration(NamedIndividual(:kit_tray_2_x_axis))
ClassAssertion(ktw:Vector :kit_tray_2_x_axis)
DataPropertyAssertion(ktw:hasVector_I :kit_tray_2_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :kit_tray_2_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :kit_tray_2_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end ktw:Vector
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_ZAxis
                        :kit_tray_2_pose :kit_tray_2_z_axis)

//*****************************************
// 6 start ktw:Vector kit_tray_2_z_axis
Declaration(NamedIndividual(:kit_tray_2_z_axis))
ClassAssertion(ktw:Vector :kit_tray_2_z_axis)
DataPropertyAssertion(ktw:hasVector_I :kit_tray_2_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :kit_tray_2_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :kit_tray_2_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end ktw:Vector
//*****************************************

// 5 end ktw:PoseOnlyLocation
//*****************************************

ObjectPropertyAssertion(ktw:hasSkuObject_Sku
                        :kit_tray_2 :stock_keeping_unit_kit_tray)
DataPropertyAssertion(ktw:hasKitTray_SerialNumber :kit_tray_2
                      "2"^^xsd:NMTOKEN)
// 4 end ktw:KitTray
//*****************************************

ObjectPropertyAssertion(ktw:hasLargeBoxWithEmptyKitTrays_KitTray
                        :empty_kit_tray_supply :kit_tray_3)

//*****************************************
// 4 start ktw:KitTray kit_tray_3
Declaration(NamedIndividual(:kit_tray_3))
ClassAssertion(ktw:KitTray :kit_tray_3)
ObjectPropertyAssertion(ktw:hasSolidObject_PrimaryLocation
                        :kit_tray_3 :kit_tray_3_pose)

//*****************************************
// 5 start ktw:PoseOnlyLocation kit_tray_3_pose
Declaration(NamedIndividual(:kit_tray_3_pose))
ClassAssertion(ktw:PoseOnlyLocation :kit_tray_3_pose)
ObjectPropertyAssertion(ktw:hasPhysicalLocation_RefObject
                        :kit_tray_3_pose :empty_kit_tray_supply)
ObjectPropertyAssertion(ktw:hasPoseLocation_Point
                        :kit_tray_3_pose :kit_tray_3_point)

//*****************************************
// 6 start ktw:Point kit_tray_3_point
Declaration(NamedIndividual(:kit_tray_3_point))
ClassAssertion(ktw:Point :kit_tray_3_point)
DataPropertyAssertion(ktw:hasPoint_X :kit_tray_3_point
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Y :kit_tray_3_point
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Z :kit_tray_3_point
                      "0.300000"^^xsd:decimal)
// 6 end ktw:Point
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_XAxis
                        :kit_tray_3_pose :kit_tray_3_x_axis)

//*****************************************
// 6 start ktw:Vector kit_tray_3_x_axis
Declaration(NamedIndividual(:kit_tray_3_x_axis))
ClassAssertion(ktw:Vector :kit_tray_3_x_axis)
DataPropertyAssertion(ktw:hasVector_I :kit_tray_3_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :kit_tray_3_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :kit_tray_3_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end ktw:Vector
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_ZAxis
                        :kit_tray_3_pose :kit_tray_3_z_axis)

//*****************************************
// 6 start ktw:Vector kit_tray_3_z_axis
Declaration(NamedIndividual(:kit_tray_3_z_axis))
ClassAssertion(ktw:Vector :kit_tray_3_z_axis)
DataPropertyAssertion(ktw:hasVector_I :kit_tray_3_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :kit_tray_3_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :kit_tray_3_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end ktw:Vector
//*****************************************

// 5 end ktw:PoseOnlyLocation
//*****************************************

ObjectPropertyAssertion(ktw:hasSkuObject_Sku
                        :kit_tray_3 :stock_keeping_unit_kit_tray)
DataPropertyAssertion(ktw:hasKitTray_SerialNumber :kit_tray_3
                      "3"^^xsd:NMTOKEN)
// 4 end ktw:KitTray
//*****************************************

// 3 end ktw:LargeBoxWithEmptyKitTrays
//*****************************************

ObjectPropertyAssertion(ktw:hasKittingWorkstation_Object
                        :kitting_workstation_1 :finished_kit_receiver)

//*****************************************
// 3 start ktw:LargeBoxWithKits finished_kit_receiver
Declaration(NamedIndividual(:finished_kit_receiver))
ClassAssertion(ktw:LargeBoxWithKits :finished_kit_receiver)
ObjectPropertyAssertion(ktw:hasSolidObject_PrimaryLocation
                        :finished_kit_receiver :finished_kit_receiver_pose)

//*****************************************
// 4 start ktw:PoseOnlyLocation finished_kit_receiver_pose
Declaration(NamedIndividual(:finished_kit_receiver_pose))
ClassAssertion(ktw:PoseOnlyLocation :finished_kit_receiver_pose)
ObjectPropertyAssertion(ktw:hasPhysicalLocation_RefObject
                        :finished_kit_receiver_pose :kitting_workstation_1)
ObjectPropertyAssertion(ktw:hasPoseLocation_Point
                        :finished_kit_receiver_pose :finished_kit_receiver_point)

//*****************************************
// 5 start ktw:Point finished_kit_receiver_point
Declaration(NamedIndividual(:finished_kit_receiver_point))
ClassAssertion(ktw:Point :finished_kit_receiver_point)
DataPropertyAssertion(ktw:hasPoint_X :finished_kit_receiver_point
                      "1.500000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Y :finished_kit_receiver_point
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Z :finished_kit_receiver_point
                      "0.000000"^^xsd:decimal)
// 5 end ktw:Point
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_XAxis
                        :finished_kit_receiver_pose :finished_kit_receiver_x_axis)

//*****************************************
// 5 start ktw:Vector finished_kit_receiver_x_axis
Declaration(NamedIndividual(:finished_kit_receiver_x_axis))
ClassAssertion(ktw:Vector :finished_kit_receiver_x_axis)
DataPropertyAssertion(ktw:hasVector_I :finished_kit_receiver_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :finished_kit_receiver_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :finished_kit_receiver_x_axis
                      "0.000000"^^xsd:decimal)
// 5 end ktw:Vector
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_ZAxis
                        :finished_kit_receiver_pose :finished_kit_receiver_z_axis)

//*****************************************
// 5 start ktw:Vector finished_kit_receiver_z_axis
Declaration(NamedIndividual(:finished_kit_receiver_z_axis))
ClassAssertion(ktw:Vector :finished_kit_receiver_z_axis)
DataPropertyAssertion(ktw:hasVector_I :finished_kit_receiver_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :finished_kit_receiver_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :finished_kit_receiver_z_axis
                      "1.000000"^^xsd:decimal)
// 5 end ktw:Vector
//*****************************************

// 4 end ktw:PoseOnlyLocation
//*****************************************

ObjectPropertyAssertion(ktw:hasLargeBoxWithKits_LargeContainer
                        :finished_kit_receiver :finished_kit_box)

//*****************************************
// 4 start ktw:LargeContainer finished_kit_box
Declaration(NamedIndividual(:finished_kit_box))
ClassAssertion(ktw:LargeContainer :finished_kit_box)
ObjectPropertyAssertion(ktw:hasSolidObject_PrimaryLocation
                        :finished_kit_box :finished_kit_box_pose)

//*****************************************
// 5 start ktw:PoseOnlyLocation finished_kit_box_pose
Declaration(NamedIndividual(:finished_kit_box_pose))
ClassAssertion(ktw:PoseOnlyLocation :finished_kit_box_pose)
ObjectPropertyAssertion(ktw:hasPhysicalLocation_RefObject
                        :finished_kit_box_pose :finished_kit_receiver)
ObjectPropertyAssertion(ktw:hasPoseLocation_Point
                        :finished_kit_box_pose :finished_kit_box_point)

//*****************************************
// 6 start ktw:Point finished_kit_box_point
Declaration(NamedIndividual(:finished_kit_box_point))
ClassAssertion(ktw:Point :finished_kit_box_point)
DataPropertyAssertion(ktw:hasPoint_X :finished_kit_box_point
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Y :finished_kit_box_point
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Z :finished_kit_box_point
                      "0.000000"^^xsd:decimal)
// 6 end ktw:Point
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_XAxis
                        :finished_kit_box_pose :finished_kit_box_x_axis)

//*****************************************
// 6 start ktw:Vector finished_kit_box_x_axis
Declaration(NamedIndividual(:finished_kit_box_x_axis))
ClassAssertion(ktw:Vector :finished_kit_box_x_axis)
DataPropertyAssertion(ktw:hasVector_I :finished_kit_box_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :finished_kit_box_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :finished_kit_box_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end ktw:Vector
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_ZAxis
                        :finished_kit_box_pose :finished_kit_box_z_axis)

//*****************************************
// 6 start ktw:Vector finished_kit_box_z_axis
Declaration(NamedIndividual(:finished_kit_box_z_axis))
ClassAssertion(ktw:Vector :finished_kit_box_z_axis)
DataPropertyAssertion(ktw:hasVector_I :finished_kit_box_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :finished_kit_box_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :finished_kit_box_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end ktw:Vector
//*****************************************

// 5 end ktw:PoseOnlyLocation
//*****************************************

ObjectPropertyAssertion(ktw:hasSkuObject_Sku
                        :finished_kit_box :stock_keeping_unit_kit_box)
DataPropertyAssertion(ktw:hasLargeContainer_SerialNumber :finished_kit_box
                      "5"^^xsd:NMTOKEN)
// 4 end ktw:LargeContainer
//*****************************************

ObjectPropertyAssertion(ktw:hasLargeBoxWithKits_KitDesign
                        :finished_kit_receiver :kit_design_a2b1c1)
DataPropertyAssertion(ktw:hasLargeBoxWithKits_Capacity :finished_kit_receiver
                      "12"^^xsd:positiveInteger)
// 3 end ktw:LargeBoxWithKits
//*****************************************

ObjectPropertyAssertion(ktw:hasKittingWorkstation_Object
                        :kitting_workstation_1 :part_a_tray)

//*****************************************
// 3 start ktw:PartsTray part_a_tray
Declaration(NamedIndividual(:part_a_tray))
ClassAssertion(ktw:PartsTray :part_a_tray)
ObjectPropertyAssertion(ktw:hasSolidObject_PrimaryLocation
                        :part_a_tray :part_a_tray_pose)

//*****************************************
// 4 start ktw:PoseOnlyLocation part_a_tray_pose
Declaration(NamedIndividual(:part_a_tray_pose))
ClassAssertion(ktw:PoseOnlyLocation :part_a_tray_pose)
ObjectPropertyAssertion(ktw:hasPhysicalLocation_RefObject
                        :part_a_tray_pose :kitting_workstation_1)
ObjectPropertyAssertion(ktw:hasPoseLocation_Point
                        :part_a_tray_pose :part_a_tray_point)

//*****************************************
// 5 start ktw:Point part_a_tray_point
Declaration(NamedIndividual(:part_a_tray_point))
ClassAssertion(ktw:Point :part_a_tray_point)
DataPropertyAssertion(ktw:hasPoint_X :part_a_tray_point
                      "4.500000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Y :part_a_tray_point
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Z :part_a_tray_point
                      "0.000000"^^xsd:decimal)
// 5 end ktw:Point
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_XAxis
                        :part_a_tray_pose :part_a_tray_x_axis)

//*****************************************
// 5 start ktw:Vector part_a_tray_x_axis
Declaration(NamedIndividual(:part_a_tray_x_axis))
ClassAssertion(ktw:Vector :part_a_tray_x_axis)
DataPropertyAssertion(ktw:hasVector_I :part_a_tray_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :part_a_tray_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :part_a_tray_x_axis
                      "0.000000"^^xsd:decimal)
// 5 end ktw:Vector
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_ZAxis
                        :part_a_tray_pose :part_a_tray_z_axis)

//*****************************************
// 5 start ktw:Vector part_a_tray_z_axis
Declaration(NamedIndividual(:part_a_tray_z_axis))
ClassAssertion(ktw:Vector :part_a_tray_z_axis)
DataPropertyAssertion(ktw:hasVector_I :part_a_tray_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :part_a_tray_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :part_a_tray_z_axis
                      "1.000000"^^xsd:decimal)
// 5 end ktw:Vector
//*****************************************

// 4 end ktw:PoseOnlyLocation
//*****************************************

ObjectPropertyAssertion(ktw:hasSkuObject_Sku
                        :part_a_tray :stock_keeping_unit_parts_tray)
DataPropertyAssertion(ktw:hasPartsVessel_SerialNumber :part_a_tray
                      "6"^^xsd:NMTOKEN)
ObjectPropertyAssertion(ktw:hasPartsVessel_PartSku
                        :part_a_tray :stock_keeping_unit_part_a)
DataPropertyAssertion(ktw:hasPartsVessel_PartQuantity :part_a_tray
                      "4"^^xsd:nonNegativeInteger)
ObjectPropertyAssertion(ktw:hasPartsVessel_Part
                        :part_a_tray :part_a_1)

//*****************************************
// 4 start ktw:Part part_a_1
Declaration(NamedIndividual(:part_a_1))
ClassAssertion(ktw:Part :part_a_1)
ObjectPropertyAssertion(ktw:hasSolidObject_PrimaryLocation
                        :part_a_1 :part_a_1_pose)

//*****************************************
// 5 start ktw:PoseLocationIn part_a_1_pose
Declaration(NamedIndividual(:part_a_1_pose))
ClassAssertion(ktw:PoseLocationIn :part_a_1_pose)
ObjectPropertyAssertion(ktw:hasPhysicalLocation_RefObject
                        :part_a_1_pose :part_a_tray)
ObjectPropertyAssertion(ktw:hasPoseLocation_Point
                        :part_a_1_pose :part_a_1_point)

//*****************************************
// 6 start ktw:Point part_a_1_point
Declaration(NamedIndividual(:part_a_1_point))
ClassAssertion(ktw:Point :part_a_1_point)
DataPropertyAssertion(ktw:hasPoint_X :part_a_1_point
                      "0.159000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Y :part_a_1_point
                      "0.159000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Z :part_a_1_point
                      "0.027500"^^xsd:decimal)
// 6 end ktw:Point
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_XAxis
                        :part_a_1_pose :part_a_1_x_axis)

//*****************************************
// 6 start ktw:Vector part_a_1_x_axis
Declaration(NamedIndividual(:part_a_1_x_axis))
ClassAssertion(ktw:Vector :part_a_1_x_axis)
DataPropertyAssertion(ktw:hasVector_I :part_a_1_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :part_a_1_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :part_a_1_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end ktw:Vector
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_ZAxis
                        :part_a_1_pose :part_a_1_z_axis)

//*****************************************
// 6 start ktw:Vector part_a_1_z_axis
Declaration(NamedIndividual(:part_a_1_z_axis))
ClassAssertion(ktw:Vector :part_a_1_z_axis)
DataPropertyAssertion(ktw:hasVector_I :part_a_1_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :part_a_1_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :part_a_1_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end ktw:Vector
//*****************************************

// 5 end ktw:PoseLocationIn
//*****************************************

ObjectPropertyAssertion(ktw:hasSkuObject_Sku
                        :part_a_1 :stock_keeping_unit_part_a)
DataPropertyAssertion(ktw:hasPart_SerialNumber :part_a_1
                      "a1"^^xsd:NMTOKEN)
// 4 end ktw:Part
//*****************************************

ObjectPropertyAssertion(ktw:hasPartsVessel_Part
                        :part_a_tray :part_a_2)

//*****************************************
// 4 start ktw:Part part_a_2
Declaration(NamedIndividual(:part_a_2))
ClassAssertion(ktw:Part :part_a_2)
ObjectPropertyAssertion(ktw:hasSolidObject_PrimaryLocation
                        :part_a_2 :part_a_2_pose)

//*****************************************
// 5 start ktw:PoseLocationIn part_a_2_pose
Declaration(NamedIndividual(:part_a_2_pose))
ClassAssertion(ktw:PoseLocationIn :part_a_2_pose)
ObjectPropertyAssertion(ktw:hasPhysicalLocation_RefObject
                        :part_a_2_pose :part_a_tray)
ObjectPropertyAssertion(ktw:hasPoseLocation_Point
                        :part_a_2_pose :part_a_2_point)

//*****************************************
// 6 start ktw:Point part_a_2_point
Declaration(NamedIndividual(:part_a_2_point))
ClassAssertion(ktw:Point :part_a_2_point)
DataPropertyAssertion(ktw:hasPoint_X :part_a_2_point
                      "0.159000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Y :part_a_2_point
                      "-0.159000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Z :part_a_2_point
                      "0.027500"^^xsd:decimal)
// 6 end ktw:Point
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_XAxis
                        :part_a_2_pose :part_a_2_x_axis)

//*****************************************
// 6 start ktw:Vector part_a_2_x_axis
Declaration(NamedIndividual(:part_a_2_x_axis))
ClassAssertion(ktw:Vector :part_a_2_x_axis)
DataPropertyAssertion(ktw:hasVector_I :part_a_2_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :part_a_2_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :part_a_2_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end ktw:Vector
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_ZAxis
                        :part_a_2_pose :part_a_2_z_axis)

//*****************************************
// 6 start ktw:Vector part_a_2_z_axis
Declaration(NamedIndividual(:part_a_2_z_axis))
ClassAssertion(ktw:Vector :part_a_2_z_axis)
DataPropertyAssertion(ktw:hasVector_I :part_a_2_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :part_a_2_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :part_a_2_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end ktw:Vector
//*****************************************

// 5 end ktw:PoseLocationIn
//*****************************************

ObjectPropertyAssertion(ktw:hasSkuObject_Sku
                        :part_a_2 :stock_keeping_unit_part_a)
DataPropertyAssertion(ktw:hasPart_SerialNumber :part_a_2
                      "a2"^^xsd:NMTOKEN)
// 4 end ktw:Part
//*****************************************

ObjectPropertyAssertion(ktw:hasPartsVessel_Part
                        :part_a_tray :part_a_3)

//*****************************************
// 4 start ktw:Part part_a_3
Declaration(NamedIndividual(:part_a_3))
ClassAssertion(ktw:Part :part_a_3)
ObjectPropertyAssertion(ktw:hasSolidObject_PrimaryLocation
                        :part_a_3 :part_a_3_pose)

//*****************************************
// 5 start ktw:PoseLocationIn part_a_3_pose
Declaration(NamedIndividual(:part_a_3_pose))
ClassAssertion(ktw:PoseLocationIn :part_a_3_pose)
ObjectPropertyAssertion(ktw:hasPhysicalLocation_RefObject
                        :part_a_3_pose :part_a_tray)
ObjectPropertyAssertion(ktw:hasPoseLocation_Point
                        :part_a_3_pose :part_a_3_point)

//*****************************************
// 6 start ktw:Point part_a_3_point
Declaration(NamedIndividual(:part_a_3_point))
ClassAssertion(ktw:Point :part_a_3_point)
DataPropertyAssertion(ktw:hasPoint_X :part_a_3_point
                      "-0.159000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Y :part_a_3_point
                      "-0.159000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Z :part_a_3_point
                      "0.027500"^^xsd:decimal)
// 6 end ktw:Point
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_XAxis
                        :part_a_3_pose :part_a_3_x_axis)

//*****************************************
// 6 start ktw:Vector part_a_3_x_axis
Declaration(NamedIndividual(:part_a_3_x_axis))
ClassAssertion(ktw:Vector :part_a_3_x_axis)
DataPropertyAssertion(ktw:hasVector_I :part_a_3_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :part_a_3_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :part_a_3_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end ktw:Vector
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_ZAxis
                        :part_a_3_pose :part_a_3_z_axis)

//*****************************************
// 6 start ktw:Vector part_a_3_z_axis
Declaration(NamedIndividual(:part_a_3_z_axis))
ClassAssertion(ktw:Vector :part_a_3_z_axis)
DataPropertyAssertion(ktw:hasVector_I :part_a_3_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :part_a_3_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :part_a_3_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end ktw:Vector
//*****************************************

// 5 end ktw:PoseLocationIn
//*****************************************

ObjectPropertyAssertion(ktw:hasSkuObject_Sku
                        :part_a_3 :stock_keeping_unit_part_a)
DataPropertyAssertion(ktw:hasPart_SerialNumber :part_a_3
                      "a3"^^xsd:NMTOKEN)
// 4 end ktw:Part
//*****************************************

ObjectPropertyAssertion(ktw:hasPartsVessel_Part
                        :part_a_tray :part_a_4)

//*****************************************
// 4 start ktw:Part part_a_4
Declaration(NamedIndividual(:part_a_4))
ClassAssertion(ktw:Part :part_a_4)
ObjectPropertyAssertion(ktw:hasSolidObject_PrimaryLocation
                        :part_a_4 :part_a_4_pose)

//*****************************************
// 5 start ktw:PoseLocationIn part_a_4_pose
Declaration(NamedIndividual(:part_a_4_pose))
ClassAssertion(ktw:PoseLocationIn :part_a_4_pose)
ObjectPropertyAssertion(ktw:hasPhysicalLocation_RefObject
                        :part_a_4_pose :part_a_tray)
ObjectPropertyAssertion(ktw:hasPoseLocation_Point
                        :part_a_4_pose :part_a_4_point)

//*****************************************
// 6 start ktw:Point part_a_4_point
Declaration(NamedIndividual(:part_a_4_point))
ClassAssertion(ktw:Point :part_a_4_point)
DataPropertyAssertion(ktw:hasPoint_X :part_a_4_point
                      "-0.159000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Y :part_a_4_point
                      "0.159000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Z :part_a_4_point
                      "0.027500"^^xsd:decimal)
// 6 end ktw:Point
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_XAxis
                        :part_a_4_pose :part_a_4_x_axis)

//*****************************************
// 6 start ktw:Vector part_a_4_x_axis
Declaration(NamedIndividual(:part_a_4_x_axis))
ClassAssertion(ktw:Vector :part_a_4_x_axis)
DataPropertyAssertion(ktw:hasVector_I :part_a_4_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :part_a_4_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :part_a_4_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end ktw:Vector
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_ZAxis
                        :part_a_4_pose :part_a_4_z_axis)

//*****************************************
// 6 start ktw:Vector part_a_4_z_axis
Declaration(NamedIndividual(:part_a_4_z_axis))
ClassAssertion(ktw:Vector :part_a_4_z_axis)
DataPropertyAssertion(ktw:hasVector_I :part_a_4_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :part_a_4_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :part_a_4_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end ktw:Vector
//*****************************************

// 5 end ktw:PoseLocationIn
//*****************************************

ObjectPropertyAssertion(ktw:hasSkuObject_Sku
                        :part_a_4 :stock_keeping_unit_part_a)
DataPropertyAssertion(ktw:hasPart_SerialNumber :part_a_4
                      "a4"^^xsd:NMTOKEN)
// 4 end ktw:Part
//*****************************************

// 3 end ktw:PartsTray
//*****************************************

ObjectPropertyAssertion(ktw:hasKittingWorkstation_Object
                        :kitting_workstation_1 :part_b_tray)

//*****************************************
// 3 start ktw:PartsTray part_b_tray
Declaration(NamedIndividual(:part_b_tray))
ClassAssertion(ktw:PartsTray :part_b_tray)
ObjectPropertyAssertion(ktw:hasSolidObject_PrimaryLocation
                        :part_b_tray :part_b_tray_pose)

//*****************************************
// 4 start ktw:PoseOnlyLocation part_b_tray_pose
Declaration(NamedIndividual(:part_b_tray_pose))
ClassAssertion(ktw:PoseOnlyLocation :part_b_tray_pose)
ObjectPropertyAssertion(ktw:hasPhysicalLocation_RefObject
                        :part_b_tray_pose :kitting_workstation_1)
ObjectPropertyAssertion(ktw:hasPoseLocation_Point
                        :part_b_tray_pose :part_b_tray_point)

//*****************************************
// 5 start ktw:Point part_b_tray_point
Declaration(NamedIndividual(:part_b_tray_point))
ClassAssertion(ktw:Point :part_b_tray_point)
DataPropertyAssertion(ktw:hasPoint_X :part_b_tray_point
                      "5.500000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Y :part_b_tray_point
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Z :part_b_tray_point
                      "0.000000"^^xsd:decimal)
// 5 end ktw:Point
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_XAxis
                        :part_b_tray_pose :part_b_tray_x_axis)

//*****************************************
// 5 start ktw:Vector part_b_tray_x_axis
Declaration(NamedIndividual(:part_b_tray_x_axis))
ClassAssertion(ktw:Vector :part_b_tray_x_axis)
DataPropertyAssertion(ktw:hasVector_I :part_b_tray_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :part_b_tray_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :part_b_tray_x_axis
                      "0.000000"^^xsd:decimal)
// 5 end ktw:Vector
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_ZAxis
                        :part_b_tray_pose :part_b_tray_z_axis)

//*****************************************
// 5 start ktw:Vector part_b_tray_z_axis
Declaration(NamedIndividual(:part_b_tray_z_axis))
ClassAssertion(ktw:Vector :part_b_tray_z_axis)
DataPropertyAssertion(ktw:hasVector_I :part_b_tray_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :part_b_tray_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :part_b_tray_z_axis
                      "1.000000"^^xsd:decimal)
// 5 end ktw:Vector
//*****************************************

// 4 end ktw:PoseOnlyLocation
//*****************************************

ObjectPropertyAssertion(ktw:hasSkuObject_Sku
                        :part_b_tray :stock_keeping_unit_parts_tray)
DataPropertyAssertion(ktw:hasPartsVessel_SerialNumber :part_b_tray
                      "7"^^xsd:NMTOKEN)
ObjectPropertyAssertion(ktw:hasPartsVessel_PartSku
                        :part_b_tray :stock_keeping_unit_part_b)
DataPropertyAssertion(ktw:hasPartsVessel_PartQuantity :part_b_tray
                      "8"^^xsd:nonNegativeInteger)
ObjectPropertyAssertion(ktw:hasPartsVessel_Part
                        :part_b_tray :part_b_1)

//*****************************************
// 4 start ktw:Part part_b_1
Declaration(NamedIndividual(:part_b_1))
ClassAssertion(ktw:Part :part_b_1)
ObjectPropertyAssertion(ktw:hasSolidObject_PrimaryLocation
                        :part_b_1 :part_b_1_pose)

//*****************************************
// 5 start ktw:PoseLocationIn part_b_1_pose
Declaration(NamedIndividual(:part_b_1_pose))
ClassAssertion(ktw:PoseLocationIn :part_b_1_pose)
ObjectPropertyAssertion(ktw:hasPhysicalLocation_RefObject
                        :part_b_1_pose :part_b_tray)
ObjectPropertyAssertion(ktw:hasPoseLocation_Point
                        :part_b_1_pose :part_b_1_point)

//*****************************************
// 6 start ktw:Point part_b_1_point
Declaration(NamedIndividual(:part_b_1_point))
ClassAssertion(ktw:Point :part_b_1_point)
DataPropertyAssertion(ktw:hasPoint_X :part_b_1_point
                      "-0.080000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Y :part_b_1_point
                      "0.120000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Z :part_b_1_point
                      "0.067500"^^xsd:decimal)
// 6 end ktw:Point
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_XAxis
                        :part_b_1_pose :part_b_1_x_axis)

//*****************************************
// 6 start ktw:Vector part_b_1_x_axis
Declaration(NamedIndividual(:part_b_1_x_axis))
ClassAssertion(ktw:Vector :part_b_1_x_axis)
DataPropertyAssertion(ktw:hasVector_I :part_b_1_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :part_b_1_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :part_b_1_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end ktw:Vector
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_ZAxis
                        :part_b_1_pose :part_b_1_z_axis)

//*****************************************
// 6 start ktw:Vector part_b_1_z_axis
Declaration(NamedIndividual(:part_b_1_z_axis))
ClassAssertion(ktw:Vector :part_b_1_z_axis)
DataPropertyAssertion(ktw:hasVector_I :part_b_1_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :part_b_1_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :part_b_1_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end ktw:Vector
//*****************************************

// 5 end ktw:PoseLocationIn
//*****************************************

ObjectPropertyAssertion(ktw:hasSkuObject_Sku
                        :part_b_1 :stock_keeping_unit_part_b)
DataPropertyAssertion(ktw:hasPart_SerialNumber :part_b_1
                      "b1"^^xsd:NMTOKEN)
// 4 end ktw:Part
//*****************************************

ObjectPropertyAssertion(ktw:hasPartsVessel_Part
                        :part_b_tray :part_b_2)

//*****************************************
// 4 start ktw:Part part_b_2
Declaration(NamedIndividual(:part_b_2))
ClassAssertion(ktw:Part :part_b_2)
ObjectPropertyAssertion(ktw:hasSolidObject_PrimaryLocation
                        :part_b_2 :part_b_2_pose)

//*****************************************
// 5 start ktw:PoseLocationIn part_b_2_pose
Declaration(NamedIndividual(:part_b_2_pose))
ClassAssertion(ktw:PoseLocationIn :part_b_2_pose)
ObjectPropertyAssertion(ktw:hasPhysicalLocation_RefObject
                        :part_b_2_pose :part_b_tray)
ObjectPropertyAssertion(ktw:hasPoseLocation_Point
                        :part_b_2_pose :part_b_2_point)

//*****************************************
// 6 start ktw:Point part_b_2_point
Declaration(NamedIndividual(:part_b_2_point))
ClassAssertion(ktw:Point :part_b_2_point)
DataPropertyAssertion(ktw:hasPoint_X :part_b_2_point
                      "-0.240000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Y :part_b_2_point
                      "0.120000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Z :part_b_2_point
                      "0.067500"^^xsd:decimal)
// 6 end ktw:Point
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_XAxis
                        :part_b_2_pose :part_b_2_x_axis)

//*****************************************
// 6 start ktw:Vector part_b_2_x_axis
Declaration(NamedIndividual(:part_b_2_x_axis))
ClassAssertion(ktw:Vector :part_b_2_x_axis)
DataPropertyAssertion(ktw:hasVector_I :part_b_2_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :part_b_2_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :part_b_2_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end ktw:Vector
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_ZAxis
                        :part_b_2_pose :part_b_2_z_axis)

//*****************************************
// 6 start ktw:Vector part_b_2_z_axis
Declaration(NamedIndividual(:part_b_2_z_axis))
ClassAssertion(ktw:Vector :part_b_2_z_axis)
DataPropertyAssertion(ktw:hasVector_I :part_b_2_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :part_b_2_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :part_b_2_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end ktw:Vector
//*****************************************

// 5 end ktw:PoseLocationIn
//*****************************************

ObjectPropertyAssertion(ktw:hasSkuObject_Sku
                        :part_b_2 :stock_keeping_unit_part_b)
DataPropertyAssertion(ktw:hasPart_SerialNumber :part_b_2
                      "b2"^^xsd:NMTOKEN)
// 4 end ktw:Part
//*****************************************

ObjectPropertyAssertion(ktw:hasPartsVessel_Part
                        :part_b_tray :part_b_3)

//*****************************************
// 4 start ktw:Part part_b_3
Declaration(NamedIndividual(:part_b_3))
ClassAssertion(ktw:Part :part_b_3)
ObjectPropertyAssertion(ktw:hasSolidObject_PrimaryLocation
                        :part_b_3 :part_b_3_pose)

//*****************************************
// 5 start ktw:PoseLocationIn part_b_3_pose
Declaration(NamedIndividual(:part_b_3_pose))
ClassAssertion(ktw:PoseLocationIn :part_b_3_pose)
ObjectPropertyAssertion(ktw:hasPhysicalLocation_RefObject
                        :part_b_3_pose :part_b_tray)
ObjectPropertyAssertion(ktw:hasPoseLocation_Point
                        :part_b_3_pose :part_b_3_point)

//*****************************************
// 6 start ktw:Point part_b_3_point
Declaration(NamedIndividual(:part_b_3_point))
ClassAssertion(ktw:Point :part_b_3_point)
DataPropertyAssertion(ktw:hasPoint_X :part_b_3_point
                      "0.080000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Y :part_b_3_point
                      "0.120000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Z :part_b_3_point
                      "0.067500"^^xsd:decimal)
// 6 end ktw:Point
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_XAxis
                        :part_b_3_pose :part_b_3_x_axis)

//*****************************************
// 6 start ktw:Vector part_b_3_x_axis
Declaration(NamedIndividual(:part_b_3_x_axis))
ClassAssertion(ktw:Vector :part_b_3_x_axis)
DataPropertyAssertion(ktw:hasVector_I :part_b_3_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :part_b_3_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :part_b_3_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end ktw:Vector
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_ZAxis
                        :part_b_3_pose :part_b_3_z_axis)

//*****************************************
// 6 start ktw:Vector part_b_3_z_axis
Declaration(NamedIndividual(:part_b_3_z_axis))
ClassAssertion(ktw:Vector :part_b_3_z_axis)
DataPropertyAssertion(ktw:hasVector_I :part_b_3_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :part_b_3_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :part_b_3_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end ktw:Vector
//*****************************************

// 5 end ktw:PoseLocationIn
//*****************************************

ObjectPropertyAssertion(ktw:hasSkuObject_Sku
                        :part_b_3 :stock_keeping_unit_part_b)
DataPropertyAssertion(ktw:hasPart_SerialNumber :part_b_3
                      "b3"^^xsd:NMTOKEN)
// 4 end ktw:Part
//*****************************************

ObjectPropertyAssertion(ktw:hasPartsVessel_Part
                        :part_b_tray :part_b_4)

//*****************************************
// 4 start ktw:Part part_b_4
Declaration(NamedIndividual(:part_b_4))
ClassAssertion(ktw:Part :part_b_4)
ObjectPropertyAssertion(ktw:hasSolidObject_PrimaryLocation
                        :part_b_4 :part_b_4_pose)

//*****************************************
// 5 start ktw:PoseLocationIn part_b_4_pose
Declaration(NamedIndividual(:part_b_4_pose))
ClassAssertion(ktw:PoseLocationIn :part_b_4_pose)
ObjectPropertyAssertion(ktw:hasPhysicalLocation_RefObject
                        :part_b_4_pose :part_b_tray)
ObjectPropertyAssertion(ktw:hasPoseLocation_Point
                        :part_b_4_pose :part_b_4_point)

//*****************************************
// 6 start ktw:Point part_b_4_point
Declaration(NamedIndividual(:part_b_4_point))
ClassAssertion(ktw:Point :part_b_4_point)
DataPropertyAssertion(ktw:hasPoint_X :part_b_4_point
                      "0.240000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Y :part_b_4_point
                      "0.120000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Z :part_b_4_point
                      "0.067500"^^xsd:decimal)
// 6 end ktw:Point
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_XAxis
                        :part_b_4_pose :part_b_4_x_axis)

//*****************************************
// 6 start ktw:Vector part_b_4_x_axis
Declaration(NamedIndividual(:part_b_4_x_axis))
ClassAssertion(ktw:Vector :part_b_4_x_axis)
DataPropertyAssertion(ktw:hasVector_I :part_b_4_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :part_b_4_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :part_b_4_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end ktw:Vector
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_ZAxis
                        :part_b_4_pose :part_b_4_z_axis)

//*****************************************
// 6 start ktw:Vector part_b_4_z_axis
Declaration(NamedIndividual(:part_b_4_z_axis))
ClassAssertion(ktw:Vector :part_b_4_z_axis)
DataPropertyAssertion(ktw:hasVector_I :part_b_4_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :part_b_4_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :part_b_4_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end ktw:Vector
//*****************************************

// 5 end ktw:PoseLocationIn
//*****************************************

ObjectPropertyAssertion(ktw:hasSkuObject_Sku
                        :part_b_4 :stock_keeping_unit_part_b)
DataPropertyAssertion(ktw:hasPart_SerialNumber :part_b_4
                      "b4"^^xsd:NMTOKEN)
// 4 end ktw:Part
//*****************************************

ObjectPropertyAssertion(ktw:hasPartsVessel_Part
                        :part_b_tray :part_b_5)

//*****************************************
// 4 start ktw:Part part_b_5
Declaration(NamedIndividual(:part_b_5))
ClassAssertion(ktw:Part :part_b_5)
ObjectPropertyAssertion(ktw:hasSolidObject_PrimaryLocation
                        :part_b_5 :part_b_5_pose)

//*****************************************
// 5 start ktw:PoseLocationIn part_b_5_pose
Declaration(NamedIndividual(:part_b_5_pose))
ClassAssertion(ktw:PoseLocationIn :part_b_5_pose)
ObjectPropertyAssertion(ktw:hasPhysicalLocation_RefObject
                        :part_b_5_pose :part_b_tray)
ObjectPropertyAssertion(ktw:hasPoseLocation_Point
                        :part_b_5_pose :part_b_5_point)

//*****************************************
// 6 start ktw:Point part_b_5_point
Declaration(NamedIndividual(:part_b_5_point))
ClassAssertion(ktw:Point :part_b_5_point)
DataPropertyAssertion(ktw:hasPoint_X :part_b_5_point
                      "-0.080000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Y :part_b_5_point
                      "-0.120000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Z :part_b_5_point
                      "0.067500"^^xsd:decimal)
// 6 end ktw:Point
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_XAxis
                        :part_b_5_pose :part_b_5_x_axis)

//*****************************************
// 6 start ktw:Vector part_b_5_x_axis
Declaration(NamedIndividual(:part_b_5_x_axis))
ClassAssertion(ktw:Vector :part_b_5_x_axis)
DataPropertyAssertion(ktw:hasVector_I :part_b_5_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :part_b_5_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :part_b_5_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end ktw:Vector
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_ZAxis
                        :part_b_5_pose :part_b_5_z_axis)

//*****************************************
// 6 start ktw:Vector part_b_5_z_axis
Declaration(NamedIndividual(:part_b_5_z_axis))
ClassAssertion(ktw:Vector :part_b_5_z_axis)
DataPropertyAssertion(ktw:hasVector_I :part_b_5_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :part_b_5_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :part_b_5_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end ktw:Vector
//*****************************************

// 5 end ktw:PoseLocationIn
//*****************************************

ObjectPropertyAssertion(ktw:hasSkuObject_Sku
                        :part_b_5 :stock_keeping_unit_part_b)
DataPropertyAssertion(ktw:hasPart_SerialNumber :part_b_5
                      "b5"^^xsd:NMTOKEN)
// 4 end ktw:Part
//*****************************************

ObjectPropertyAssertion(ktw:hasPartsVessel_Part
                        :part_b_tray :part_b_6)

//*****************************************
// 4 start ktw:Part part_b_6
Declaration(NamedIndividual(:part_b_6))
ClassAssertion(ktw:Part :part_b_6)
ObjectPropertyAssertion(ktw:hasSolidObject_PrimaryLocation
                        :part_b_6 :part_b_6_pose)

//*****************************************
// 5 start ktw:PoseLocationIn part_b_6_pose
Declaration(NamedIndividual(:part_b_6_pose))
ClassAssertion(ktw:PoseLocationIn :part_b_6_pose)
ObjectPropertyAssertion(ktw:hasPhysicalLocation_RefObject
                        :part_b_6_pose :part_b_tray)
ObjectPropertyAssertion(ktw:hasPoseLocation_Point
                        :part_b_6_pose :part_b_6_point)

//*****************************************
// 6 start ktw:Point part_b_6_point
Declaration(NamedIndividual(:part_b_6_point))
ClassAssertion(ktw:Point :part_b_6_point)
DataPropertyAssertion(ktw:hasPoint_X :part_b_6_point
                      "-0.240000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Y :part_b_6_point
                      "-0.120000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Z :part_b_6_point
                      "0.067500"^^xsd:decimal)
// 6 end ktw:Point
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_XAxis
                        :part_b_6_pose :part_b_6_x_axis)

//*****************************************
// 6 start ktw:Vector part_b_6_x_axis
Declaration(NamedIndividual(:part_b_6_x_axis))
ClassAssertion(ktw:Vector :part_b_6_x_axis)
DataPropertyAssertion(ktw:hasVector_I :part_b_6_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :part_b_6_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :part_b_6_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end ktw:Vector
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_ZAxis
                        :part_b_6_pose :part_b_6_z_axis)

//*****************************************
// 6 start ktw:Vector part_b_6_z_axis
Declaration(NamedIndividual(:part_b_6_z_axis))
ClassAssertion(ktw:Vector :part_b_6_z_axis)
DataPropertyAssertion(ktw:hasVector_I :part_b_6_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :part_b_6_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :part_b_6_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end ktw:Vector
//*****************************************

// 5 end ktw:PoseLocationIn
//*****************************************

ObjectPropertyAssertion(ktw:hasSkuObject_Sku
                        :part_b_6 :stock_keeping_unit_part_b)
DataPropertyAssertion(ktw:hasPart_SerialNumber :part_b_6
                      "b6"^^xsd:NMTOKEN)
// 4 end ktw:Part
//*****************************************

ObjectPropertyAssertion(ktw:hasPartsVessel_Part
                        :part_b_tray :part_b_7)

//*****************************************
// 4 start ktw:Part part_b_7
Declaration(NamedIndividual(:part_b_7))
ClassAssertion(ktw:Part :part_b_7)
ObjectPropertyAssertion(ktw:hasSolidObject_PrimaryLocation
                        :part_b_7 :part_b_7_pose)

//*****************************************
// 5 start ktw:PoseLocationIn part_b_7_pose
Declaration(NamedIndividual(:part_b_7_pose))
ClassAssertion(ktw:PoseLocationIn :part_b_7_pose)
ObjectPropertyAssertion(ktw:hasPhysicalLocation_RefObject
                        :part_b_7_pose :part_b_tray)
ObjectPropertyAssertion(ktw:hasPoseLocation_Point
                        :part_b_7_pose :part_b_7_point)

//*****************************************
// 6 start ktw:Point part_b_7_point
Declaration(NamedIndividual(:part_b_7_point))
ClassAssertion(ktw:Point :part_b_7_point)
DataPropertyAssertion(ktw:hasPoint_X :part_b_7_point
                      "0.080000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Y :part_b_7_point
                      "-0.120000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Z :part_b_7_point
                      "0.067500"^^xsd:decimal)
// 6 end ktw:Point
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_XAxis
                        :part_b_7_pose :part_b_7_x_axis)

//*****************************************
// 6 start ktw:Vector part_b_7_x_axis
Declaration(NamedIndividual(:part_b_7_x_axis))
ClassAssertion(ktw:Vector :part_b_7_x_axis)
DataPropertyAssertion(ktw:hasVector_I :part_b_7_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :part_b_7_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :part_b_7_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end ktw:Vector
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_ZAxis
                        :part_b_7_pose :part_b_7_z_axis)

//*****************************************
// 6 start ktw:Vector part_b_7_z_axis
Declaration(NamedIndividual(:part_b_7_z_axis))
ClassAssertion(ktw:Vector :part_b_7_z_axis)
DataPropertyAssertion(ktw:hasVector_I :part_b_7_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :part_b_7_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :part_b_7_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end ktw:Vector
//*****************************************

// 5 end ktw:PoseLocationIn
//*****************************************

ObjectPropertyAssertion(ktw:hasSkuObject_Sku
                        :part_b_7 :stock_keeping_unit_part_b)
DataPropertyAssertion(ktw:hasPart_SerialNumber :part_b_7
                      "b7"^^xsd:NMTOKEN)
// 4 end ktw:Part
//*****************************************

ObjectPropertyAssertion(ktw:hasPartsVessel_Part
                        :part_b_tray :part_b_8)

//*****************************************
// 4 start ktw:Part part_b_8
Declaration(NamedIndividual(:part_b_8))
ClassAssertion(ktw:Part :part_b_8)
ObjectPropertyAssertion(ktw:hasSolidObject_PrimaryLocation
                        :part_b_8 :part_b_8_pose)

//*****************************************
// 5 start ktw:PoseLocationIn part_b_8_pose
Declaration(NamedIndividual(:part_b_8_pose))
ClassAssertion(ktw:PoseLocationIn :part_b_8_pose)
ObjectPropertyAssertion(ktw:hasPhysicalLocation_RefObject
                        :part_b_8_pose :part_b_tray)
ObjectPropertyAssertion(ktw:hasPoseLocation_Point
                        :part_b_8_pose :part_b_8_point)

//*****************************************
// 6 start ktw:Point part_b_8_point
Declaration(NamedIndividual(:part_b_8_point))
ClassAssertion(ktw:Point :part_b_8_point)
DataPropertyAssertion(ktw:hasPoint_X :part_b_8_point
                      "0.240000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Y :part_b_8_point
                      "-0.120000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Z :part_b_8_point
                      "0.067500"^^xsd:decimal)
// 6 end ktw:Point
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_XAxis
                        :part_b_8_pose :part_b_8_x_axis)

//*****************************************
// 6 start ktw:Vector part_b_8_x_axis
Declaration(NamedIndividual(:part_b_8_x_axis))
ClassAssertion(ktw:Vector :part_b_8_x_axis)
DataPropertyAssertion(ktw:hasVector_I :part_b_8_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :part_b_8_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :part_b_8_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end ktw:Vector
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_ZAxis
                        :part_b_8_pose :part_b_8_z_axis)

//*****************************************
// 6 start ktw:Vector part_b_8_z_axis
Declaration(NamedIndividual(:part_b_8_z_axis))
ClassAssertion(ktw:Vector :part_b_8_z_axis)
DataPropertyAssertion(ktw:hasVector_I :part_b_8_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :part_b_8_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :part_b_8_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end ktw:Vector
//*****************************************

// 5 end ktw:PoseLocationIn
//*****************************************

ObjectPropertyAssertion(ktw:hasSkuObject_Sku
                        :part_b_8 :stock_keeping_unit_part_b)
DataPropertyAssertion(ktw:hasPart_SerialNumber :part_b_8
                      "b8"^^xsd:NMTOKEN)
// 4 end ktw:Part
//*****************************************

// 3 end ktw:PartsTray
//*****************************************

ObjectPropertyAssertion(ktw:hasKittingWorkstation_Object
                        :kitting_workstation_1 :part_c_tray)

//*****************************************
// 3 start ktw:PartsTray part_c_tray
Declaration(NamedIndividual(:part_c_tray))
ClassAssertion(ktw:PartsTray :part_c_tray)
ObjectPropertyAssertion(ktw:hasSolidObject_PrimaryLocation
                        :part_c_tray :part_c_tray_pose)

//*****************************************
// 4 start ktw:PoseOnlyLocation part_c_tray_pose
Declaration(NamedIndividual(:part_c_tray_pose))
ClassAssertion(ktw:PoseOnlyLocation :part_c_tray_pose)
ObjectPropertyAssertion(ktw:hasPhysicalLocation_RefObject
                        :part_c_tray_pose :kitting_workstation_1)
ObjectPropertyAssertion(ktw:hasPoseLocation_Point
                        :part_c_tray_pose :part_c_tray_point)

//*****************************************
// 5 start ktw:Point part_c_tray_point
Declaration(NamedIndividual(:part_c_tray_point))
ClassAssertion(ktw:Point :part_c_tray_point)
DataPropertyAssertion(ktw:hasPoint_X :part_c_tray_point
                      "6.500000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Y :part_c_tray_point
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Z :part_c_tray_point
                      "0.000000"^^xsd:decimal)
// 5 end ktw:Point
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_XAxis
                        :part_c_tray_pose :part_c_tray_x_axis)

//*****************************************
// 5 start ktw:Vector part_c_tray_x_axis
Declaration(NamedIndividual(:part_c_tray_x_axis))
ClassAssertion(ktw:Vector :part_c_tray_x_axis)
DataPropertyAssertion(ktw:hasVector_I :part_c_tray_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :part_c_tray_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :part_c_tray_x_axis
                      "0.000000"^^xsd:decimal)
// 5 end ktw:Vector
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_ZAxis
                        :part_c_tray_pose :part_c_tray_z_axis)

//*****************************************
// 5 start ktw:Vector part_c_tray_z_axis
Declaration(NamedIndividual(:part_c_tray_z_axis))
ClassAssertion(ktw:Vector :part_c_tray_z_axis)
DataPropertyAssertion(ktw:hasVector_I :part_c_tray_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :part_c_tray_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :part_c_tray_z_axis
                      "1.000000"^^xsd:decimal)
// 5 end ktw:Vector
//*****************************************

// 4 end ktw:PoseOnlyLocation
//*****************************************

ObjectPropertyAssertion(ktw:hasSkuObject_Sku
                        :part_c_tray :stock_keeping_unit_parts_tray)
DataPropertyAssertion(ktw:hasPartsVessel_SerialNumber :part_c_tray
                      "8"^^xsd:NMTOKEN)
ObjectPropertyAssertion(ktw:hasPartsVessel_PartSku
                        :part_c_tray :stock_keeping_unit_part_c)
DataPropertyAssertion(ktw:hasPartsVessel_PartQuantity :part_c_tray
                      "8"^^xsd:nonNegativeInteger)
ObjectPropertyAssertion(ktw:hasPartsVessel_Part
                        :part_c_tray :part_c_1)

//*****************************************
// 4 start ktw:Part part_c_1
Declaration(NamedIndividual(:part_c_1))
ClassAssertion(ktw:Part :part_c_1)
ObjectPropertyAssertion(ktw:hasSolidObject_PrimaryLocation
                        :part_c_1 :part_c_1_pose)

//*****************************************
// 5 start ktw:PoseLocationIn part_c_1_pose
Declaration(NamedIndividual(:part_c_1_pose))
ClassAssertion(ktw:PoseLocationIn :part_c_1_pose)
ObjectPropertyAssertion(ktw:hasPhysicalLocation_RefObject
                        :part_c_1_pose :part_c_tray)
ObjectPropertyAssertion(ktw:hasPoseLocation_Point
                        :part_c_1_pose :part_c_1_point)

//*****************************************
// 6 start ktw:Point part_c_1_point
Declaration(NamedIndividual(:part_c_1_point))
ClassAssertion(ktw:Point :part_c_1_point)
DataPropertyAssertion(ktw:hasPoint_X :part_c_1_point
                      "0.110000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Y :part_c_1_point
                      "0.216000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Z :part_c_1_point
                      "0.035000"^^xsd:decimal)
// 6 end ktw:Point
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_XAxis
                        :part_c_1_pose :part_c_1_x_axis)

//*****************************************
// 6 start ktw:Vector part_c_1_x_axis
Declaration(NamedIndividual(:part_c_1_x_axis))
ClassAssertion(ktw:Vector :part_c_1_x_axis)
DataPropertyAssertion(ktw:hasVector_I :part_c_1_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :part_c_1_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :part_c_1_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end ktw:Vector
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_ZAxis
                        :part_c_1_pose :part_c_1_z_axis)

//*****************************************
// 6 start ktw:Vector part_c_1_z_axis
Declaration(NamedIndividual(:part_c_1_z_axis))
ClassAssertion(ktw:Vector :part_c_1_z_axis)
DataPropertyAssertion(ktw:hasVector_I :part_c_1_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :part_c_1_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :part_c_1_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end ktw:Vector
//*****************************************

// 5 end ktw:PoseLocationIn
//*****************************************

ObjectPropertyAssertion(ktw:hasSkuObject_Sku
                        :part_c_1 :stock_keeping_unit_part_c)
DataPropertyAssertion(ktw:hasPart_SerialNumber :part_c_1
                      "c1"^^xsd:NMTOKEN)
// 4 end ktw:Part
//*****************************************

ObjectPropertyAssertion(ktw:hasPartsVessel_Part
                        :part_c_tray :part_c_2)

//*****************************************
// 4 start ktw:Part part_c_2
Declaration(NamedIndividual(:part_c_2))
ClassAssertion(ktw:Part :part_c_2)
ObjectPropertyAssertion(ktw:hasSolidObject_PrimaryLocation
                        :part_c_2 :part_c_2_pose)

//*****************************************
// 5 start ktw:PoseLocationIn part_c_2_pose
Declaration(NamedIndividual(:part_c_2_pose))
ClassAssertion(ktw:PoseLocationIn :part_c_2_pose)
ObjectPropertyAssertion(ktw:hasPhysicalLocation_RefObject
                        :part_c_2_pose :part_c_tray)
ObjectPropertyAssertion(ktw:hasPoseLocation_Point
                        :part_c_2_pose :part_c_2_point)

//*****************************************
// 6 start ktw:Point part_c_2_point
Declaration(NamedIndividual(:part_c_2_point))
ClassAssertion(ktw:Point :part_c_2_point)
DataPropertyAssertion(ktw:hasPoint_X :part_c_2_point
                      "0.330000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Y :part_c_2_point
                      "0.216000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Z :part_c_2_point
                      "0.035000"^^xsd:decimal)
// 6 end ktw:Point
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_XAxis
                        :part_c_2_pose :part_c_2_x_axis)

//*****************************************
// 6 start ktw:Vector part_c_2_x_axis
Declaration(NamedIndividual(:part_c_2_x_axis))
ClassAssertion(ktw:Vector :part_c_2_x_axis)
DataPropertyAssertion(ktw:hasVector_I :part_c_2_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :part_c_2_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :part_c_2_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end ktw:Vector
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_ZAxis
                        :part_c_2_pose :part_c_2_z_axis)

//*****************************************
// 6 start ktw:Vector part_c_2_z_axis
Declaration(NamedIndividual(:part_c_2_z_axis))
ClassAssertion(ktw:Vector :part_c_2_z_axis)
DataPropertyAssertion(ktw:hasVector_I :part_c_2_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :part_c_2_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :part_c_2_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end ktw:Vector
//*****************************************

// 5 end ktw:PoseLocationIn
//*****************************************

ObjectPropertyAssertion(ktw:hasSkuObject_Sku
                        :part_c_2 :stock_keeping_unit_part_c)
DataPropertyAssertion(ktw:hasPart_SerialNumber :part_c_2
                      "c2"^^xsd:NMTOKEN)
// 4 end ktw:Part
//*****************************************

ObjectPropertyAssertion(ktw:hasPartsVessel_Part
                        :part_c_tray :part_c_3)

//*****************************************
// 4 start ktw:Part part_c_3
Declaration(NamedIndividual(:part_c_3))
ClassAssertion(ktw:Part :part_c_3)
ObjectPropertyAssertion(ktw:hasSolidObject_PrimaryLocation
                        :part_c_3 :part_c_3_pose)

//*****************************************
// 5 start ktw:PoseLocationIn part_c_3_pose
Declaration(NamedIndividual(:part_c_3_pose))
ClassAssertion(ktw:PoseLocationIn :part_c_3_pose)
ObjectPropertyAssertion(ktw:hasPhysicalLocation_RefObject
                        :part_c_3_pose :part_c_tray)
ObjectPropertyAssertion(ktw:hasPoseLocation_Point
                        :part_c_3_pose :part_c_3_point)

//*****************************************
// 6 start ktw:Point part_c_3_point
Declaration(NamedIndividual(:part_c_3_point))
ClassAssertion(ktw:Point :part_c_3_point)
DataPropertyAssertion(ktw:hasPoint_X :part_c_3_point
                      "-0.110000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Y :part_c_3_point
                      "0.216000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Z :part_c_3_point
                      "0.035000"^^xsd:decimal)
// 6 end ktw:Point
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_XAxis
                        :part_c_3_pose :part_c_3_x_axis)

//*****************************************
// 6 start ktw:Vector part_c_3_x_axis
Declaration(NamedIndividual(:part_c_3_x_axis))
ClassAssertion(ktw:Vector :part_c_3_x_axis)
DataPropertyAssertion(ktw:hasVector_I :part_c_3_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :part_c_3_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :part_c_3_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end ktw:Vector
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_ZAxis
                        :part_c_3_pose :part_c_3_z_axis)

//*****************************************
// 6 start ktw:Vector part_c_3_z_axis
Declaration(NamedIndividual(:part_c_3_z_axis))
ClassAssertion(ktw:Vector :part_c_3_z_axis)
DataPropertyAssertion(ktw:hasVector_I :part_c_3_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :part_c_3_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :part_c_3_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end ktw:Vector
//*****************************************

// 5 end ktw:PoseLocationIn
//*****************************************

ObjectPropertyAssertion(ktw:hasSkuObject_Sku
                        :part_c_3 :stock_keeping_unit_part_c)
DataPropertyAssertion(ktw:hasPart_SerialNumber :part_c_3
                      "c3"^^xsd:NMTOKEN)
// 4 end ktw:Part
//*****************************************

ObjectPropertyAssertion(ktw:hasPartsVessel_Part
                        :part_c_tray :part_c_4)

//*****************************************
// 4 start ktw:Part part_c_4
Declaration(NamedIndividual(:part_c_4))
ClassAssertion(ktw:Part :part_c_4)
ObjectPropertyAssertion(ktw:hasSolidObject_PrimaryLocation
                        :part_c_4 :part_c_4_pose)

//*****************************************
// 5 start ktw:PoseLocationIn part_c_4_pose
Declaration(NamedIndividual(:part_c_4_pose))
ClassAssertion(ktw:PoseLocationIn :part_c_4_pose)
ObjectPropertyAssertion(ktw:hasPhysicalLocation_RefObject
                        :part_c_4_pose :part_c_tray)
ObjectPropertyAssertion(ktw:hasPoseLocation_Point
                        :part_c_4_pose :part_c_4_point)

//*****************************************
// 6 start ktw:Point part_c_4_point
Declaration(NamedIndividual(:part_c_4_point))
ClassAssertion(ktw:Point :part_c_4_point)
DataPropertyAssertion(ktw:hasPoint_X :part_c_4_point
                      "-0.330000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Y :part_c_4_point
                      "0.216000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Z :part_c_4_point
                      "0.035000"^^xsd:decimal)
// 6 end ktw:Point
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_XAxis
                        :part_c_4_pose :part_c_4_x_axis)

//*****************************************
// 6 start ktw:Vector part_c_4_x_axis
Declaration(NamedIndividual(:part_c_4_x_axis))
ClassAssertion(ktw:Vector :part_c_4_x_axis)
DataPropertyAssertion(ktw:hasVector_I :part_c_4_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :part_c_4_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :part_c_4_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end ktw:Vector
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_ZAxis
                        :part_c_4_pose :part_c_4_z_axis)

//*****************************************
// 6 start ktw:Vector part_c_4_z_axis
Declaration(NamedIndividual(:part_c_4_z_axis))
ClassAssertion(ktw:Vector :part_c_4_z_axis)
DataPropertyAssertion(ktw:hasVector_I :part_c_4_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :part_c_4_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :part_c_4_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end ktw:Vector
//*****************************************

// 5 end ktw:PoseLocationIn
//*****************************************

ObjectPropertyAssertion(ktw:hasSkuObject_Sku
                        :part_c_4 :stock_keeping_unit_part_c)
DataPropertyAssertion(ktw:hasPart_SerialNumber :part_c_4
                      "c4"^^xsd:NMTOKEN)
// 4 end ktw:Part
//*****************************************

ObjectPropertyAssertion(ktw:hasPartsVessel_Part
                        :part_c_tray :part_c_5)

//*****************************************
// 4 start ktw:Part part_c_5
Declaration(NamedIndividual(:part_c_5))
ClassAssertion(ktw:Part :part_c_5)
ObjectPropertyAssertion(ktw:hasSolidObject_PrimaryLocation
                        :part_c_5 :part_c_5_pose)

//*****************************************
// 5 start ktw:PoseLocationIn part_c_5_pose
Declaration(NamedIndividual(:part_c_5_pose))
ClassAssertion(ktw:PoseLocationIn :part_c_5_pose)
ObjectPropertyAssertion(ktw:hasPhysicalLocation_RefObject
                        :part_c_5_pose :part_c_tray)
ObjectPropertyAssertion(ktw:hasPoseLocation_Point
                        :part_c_5_pose :part_c_5_point)

//*****************************************
// 6 start ktw:Point part_c_5_point
Declaration(NamedIndividual(:part_c_5_point))
ClassAssertion(ktw:Point :part_c_5_point)
DataPropertyAssertion(ktw:hasPoint_X :part_c_5_point
                      "0.110000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Y :part_c_5_point
                      "-0.216000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Z :part_c_5_point
                      "0.035000"^^xsd:decimal)
// 6 end ktw:Point
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_XAxis
                        :part_c_5_pose :part_c_5_x_axis)

//*****************************************
// 6 start ktw:Vector part_c_5_x_axis
Declaration(NamedIndividual(:part_c_5_x_axis))
ClassAssertion(ktw:Vector :part_c_5_x_axis)
DataPropertyAssertion(ktw:hasVector_I :part_c_5_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :part_c_5_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :part_c_5_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end ktw:Vector
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_ZAxis
                        :part_c_5_pose :part_c_5_z_axis)

//*****************************************
// 6 start ktw:Vector part_c_5_z_axis
Declaration(NamedIndividual(:part_c_5_z_axis))
ClassAssertion(ktw:Vector :part_c_5_z_axis)
DataPropertyAssertion(ktw:hasVector_I :part_c_5_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :part_c_5_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :part_c_5_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end ktw:Vector
//*****************************************

// 5 end ktw:PoseLocationIn
//*****************************************

ObjectPropertyAssertion(ktw:hasSkuObject_Sku
                        :part_c_5 :stock_keeping_unit_part_c)
DataPropertyAssertion(ktw:hasPart_SerialNumber :part_c_5
                      "c5"^^xsd:NMTOKEN)
// 4 end ktw:Part
//*****************************************

ObjectPropertyAssertion(ktw:hasPartsVessel_Part
                        :part_c_tray :part_c_6)

//*****************************************
// 4 start ktw:Part part_c_6
Declaration(NamedIndividual(:part_c_6))
ClassAssertion(ktw:Part :part_c_6)
ObjectPropertyAssertion(ktw:hasSolidObject_PrimaryLocation
                        :part_c_6 :part_c_6_pose)

//*****************************************
// 5 start ktw:PoseLocationIn part_c_6_pose
Declaration(NamedIndividual(:part_c_6_pose))
ClassAssertion(ktw:PoseLocationIn :part_c_6_pose)
ObjectPropertyAssertion(ktw:hasPhysicalLocation_RefObject
                        :part_c_6_pose :part_c_tray)
ObjectPropertyAssertion(ktw:hasPoseLocation_Point
                        :part_c_6_pose :part_c_6_point)

//*****************************************
// 6 start ktw:Point part_c_6_point
Declaration(NamedIndividual(:part_c_6_point))
ClassAssertion(ktw:Point :part_c_6_point)
DataPropertyAssertion(ktw:hasPoint_X :part_c_6_point
                      "0.330000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Y :part_c_6_point
                      "-0.216000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Z :part_c_6_point
                      "0.035000"^^xsd:decimal)
// 6 end ktw:Point
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_XAxis
                        :part_c_6_pose :part_c_6_x_axis)

//*****************************************
// 6 start ktw:Vector part_c_6_x_axis
Declaration(NamedIndividual(:part_c_6_x_axis))
ClassAssertion(ktw:Vector :part_c_6_x_axis)
DataPropertyAssertion(ktw:hasVector_I :part_c_6_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :part_c_6_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :part_c_6_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end ktw:Vector
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_ZAxis
                        :part_c_6_pose :part_c_6_z_axis)

//*****************************************
// 6 start ktw:Vector part_c_6_z_axis
Declaration(NamedIndividual(:part_c_6_z_axis))
ClassAssertion(ktw:Vector :part_c_6_z_axis)
DataPropertyAssertion(ktw:hasVector_I :part_c_6_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :part_c_6_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :part_c_6_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end ktw:Vector
//*****************************************

// 5 end ktw:PoseLocationIn
//*****************************************

ObjectPropertyAssertion(ktw:hasSkuObject_Sku
                        :part_c_6 :stock_keeping_unit_part_c)
DataPropertyAssertion(ktw:hasPart_SerialNumber :part_c_6
                      "c6"^^xsd:NMTOKEN)
// 4 end ktw:Part
//*****************************************

ObjectPropertyAssertion(ktw:hasPartsVessel_Part
                        :part_c_tray :part_c_7)

//*****************************************
// 4 start ktw:Part part_c_7
Declaration(NamedIndividual(:part_c_7))
ClassAssertion(ktw:Part :part_c_7)
ObjectPropertyAssertion(ktw:hasSolidObject_PrimaryLocation
                        :part_c_7 :part_c_7_pose)

//*****************************************
// 5 start ktw:PoseLocationIn part_c_7_pose
Declaration(NamedIndividual(:part_c_7_pose))
ClassAssertion(ktw:PoseLocationIn :part_c_7_pose)
ObjectPropertyAssertion(ktw:hasPhysicalLocation_RefObject
                        :part_c_7_pose :part_c_tray)
ObjectPropertyAssertion(ktw:hasPoseLocation_Point
                        :part_c_7_pose :part_c_7_point)

//*****************************************
// 6 start ktw:Point part_c_7_point
Declaration(NamedIndividual(:part_c_7_point))
ClassAssertion(ktw:Point :part_c_7_point)
DataPropertyAssertion(ktw:hasPoint_X :part_c_7_point
                      "-0.110000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Y :part_c_7_point
                      "-0.216000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Z :part_c_7_point
                      "0.035000"^^xsd:decimal)
// 6 end ktw:Point
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_XAxis
                        :part_c_7_pose :part_c_7_x_axis)

//*****************************************
// 6 start ktw:Vector part_c_7_x_axis
Declaration(NamedIndividual(:part_c_7_x_axis))
ClassAssertion(ktw:Vector :part_c_7_x_axis)
DataPropertyAssertion(ktw:hasVector_I :part_c_7_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :part_c_7_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :part_c_7_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end ktw:Vector
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_ZAxis
                        :part_c_7_pose :part_c_7_z_axis)

//*****************************************
// 6 start ktw:Vector part_c_7_z_axis
Declaration(NamedIndividual(:part_c_7_z_axis))
ClassAssertion(ktw:Vector :part_c_7_z_axis)
DataPropertyAssertion(ktw:hasVector_I :part_c_7_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :part_c_7_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :part_c_7_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end ktw:Vector
//*****************************************

// 5 end ktw:PoseLocationIn
//*****************************************

ObjectPropertyAssertion(ktw:hasSkuObject_Sku
                        :part_c_7 :stock_keeping_unit_part_c)
DataPropertyAssertion(ktw:hasPart_SerialNumber :part_c_7
                      "c7"^^xsd:NMTOKEN)
// 4 end ktw:Part
//*****************************************

ObjectPropertyAssertion(ktw:hasPartsVessel_Part
                        :part_c_tray :part_c_8)

//*****************************************
// 4 start ktw:Part part_c_8
Declaration(NamedIndividual(:part_c_8))
ClassAssertion(ktw:Part :part_c_8)
ObjectPropertyAssertion(ktw:hasSolidObject_PrimaryLocation
                        :part_c_8 :part_c_8_pose)

//*****************************************
// 5 start ktw:PoseLocationIn part_c_8_pose
Declaration(NamedIndividual(:part_c_8_pose))
ClassAssertion(ktw:PoseLocationIn :part_c_8_pose)
ObjectPropertyAssertion(ktw:hasPhysicalLocation_RefObject
                        :part_c_8_pose :part_c_tray)
ObjectPropertyAssertion(ktw:hasPoseLocation_Point
                        :part_c_8_pose :part_c_8_point)

//*****************************************
// 6 start ktw:Point part_c_8_point
Declaration(NamedIndividual(:part_c_8_point))
ClassAssertion(ktw:Point :part_c_8_point)
DataPropertyAssertion(ktw:hasPoint_X :part_c_8_point
                      "-0.330000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Y :part_c_8_point
                      "-0.216000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Z :part_c_8_point
                      "0.035000"^^xsd:decimal)
// 6 end ktw:Point
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_XAxis
                        :part_c_8_pose :part_c_8_x_axis)

//*****************************************
// 6 start ktw:Vector part_c_8_x_axis
Declaration(NamedIndividual(:part_c_8_x_axis))
ClassAssertion(ktw:Vector :part_c_8_x_axis)
DataPropertyAssertion(ktw:hasVector_I :part_c_8_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :part_c_8_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :part_c_8_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end ktw:Vector
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_ZAxis
                        :part_c_8_pose :part_c_8_z_axis)

//*****************************************
// 6 start ktw:Vector part_c_8_z_axis
Declaration(NamedIndividual(:part_c_8_z_axis))
ClassAssertion(ktw:Vector :part_c_8_z_axis)
DataPropertyAssertion(ktw:hasVector_I :part_c_8_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :part_c_8_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :part_c_8_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end ktw:Vector
//*****************************************

// 5 end ktw:PoseLocationIn
//*****************************************

ObjectPropertyAssertion(ktw:hasSkuObject_Sku
                        :part_c_8 :stock_keeping_unit_part_c)
DataPropertyAssertion(ktw:hasPart_SerialNumber :part_c_8
                      "c8"^^xsd:NMTOKEN)
// 4 end ktw:Part
//*****************************************

// 3 end ktw:PartsTray
//*****************************************

ObjectPropertyAssertion(ktw:hasKittingWorkstation_Object
                        :kitting_workstation_1 :work_table_1)

//*****************************************
// 3 start ktw:WorkTable work_table_1
Declaration(NamedIndividual(:work_table_1))
ClassAssertion(ktw:WorkTable :work_table_1)
ObjectPropertyAssertion(ktw:hasSolidObject_PrimaryLocation
                        :work_table_1 :work_table_pose)

//*****************************************
// 4 start ktw:PoseOnlyLocation work_table_pose
Declaration(NamedIndividual(:work_table_pose))
ClassAssertion(ktw:PoseOnlyLocation :work_table_pose)
ObjectPropertyAssertion(ktw:hasPhysicalLocation_RefObject
                        :work_table_pose :kitting_workstation_1)
ObjectPropertyAssertion(ktw:hasPoseLocation_Point
                        :work_table_pose :work_table_point)

//*****************************************
// 5 start ktw:Point work_table_point
Declaration(NamedIndividual(:work_table_point))
ClassAssertion(ktw:Point :work_table_point)
DataPropertyAssertion(ktw:hasPoint_X :work_table_point
                      "3.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Y :work_table_point
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Z :work_table_point
                      "0.000000"^^xsd:decimal)
// 5 end ktw:Point
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_XAxis
                        :work_table_pose :work_table_x_axis)

//*****************************************
// 5 start ktw:Vector work_table_x_axis
Declaration(NamedIndividual(:work_table_x_axis))
ClassAssertion(ktw:Vector :work_table_x_axis)
DataPropertyAssertion(ktw:hasVector_I :work_table_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :work_table_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :work_table_x_axis
                      "0.000000"^^xsd:decimal)
// 5 end ktw:Vector
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_ZAxis
                        :work_table_pose :work_table_z_axis)

//*****************************************
// 5 start ktw:Vector work_table_z_axis
Declaration(NamedIndividual(:work_table_z_axis))
ClassAssertion(ktw:Vector :work_table_z_axis)
DataPropertyAssertion(ktw:hasVector_I :work_table_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :work_table_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :work_table_z_axis
                      "1.000000"^^xsd:decimal)
// 5 end ktw:Vector
//*****************************************

// 4 end ktw:PoseOnlyLocation
//*****************************************

ObjectPropertyAssertion(ktw:hasNoSkuObject_InternalShape
                        :work_table_1 :shape_work_table)

//*****************************************
// 4 start ktw:CylindricalShape shape_work_table
Declaration(NamedIndividual(:shape_work_table))
ClassAssertion(ktw:CylindricalShape :shape_work_table)
DataPropertyAssertion(ktw:hasShapeDesign_Description :shape_work_table
                      "Shape of the work table"^^xsd:string)
DataPropertyAssertion(ktw:hasCylindricalShape_Diameter :shape_work_table
                      "1.600000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasCylindricalShape_Height :shape_work_table
                      "0.500000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasCylindricalShape_HasTop :shape_work_table
                      "true"^^xsd:boolean)
// 4 end ktw:CylindricalShape
//*****************************************

// 3 end ktw:WorkTable
//*****************************************

ObjectPropertyAssertion(ktw:hasKittingWorkstation_Robot
                        :kitting_workstation_1 :robot_1)

//*****************************************
// 3 start ktw:Robot robot_1
Declaration(NamedIndividual(:robot_1))
ClassAssertion(ktw:Robot :robot_1)
ObjectPropertyAssertion(ktw:hasSolidObject_PrimaryLocation
                        :robot_1 :robot_pose)

//*****************************************
// 4 start ktw:PoseOnlyLocation robot_pose
Declaration(NamedIndividual(:robot_pose))
ClassAssertion(ktw:PoseOnlyLocation :robot_pose)
ObjectPropertyAssertion(ktw:hasPhysicalLocation_RefObject
                        :robot_pose :kitting_workstation_1)
ObjectPropertyAssertion(ktw:hasPoseLocation_Point
                        :robot_pose :robot_point)

//*****************************************
// 5 start ktw:Point robot_point
Declaration(NamedIndividual(:robot_point))
ClassAssertion(ktw:Point :robot_point)
DataPropertyAssertion(ktw:hasPoint_X :robot_point
                      "3.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Y :robot_point
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Z :robot_point
                      "2.000000"^^xsd:decimal)
// 5 end ktw:Point
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_XAxis
                        :robot_pose :robot_x_axis)

//*****************************************
// 5 start ktw:Vector robot_x_axis
Declaration(NamedIndividual(:robot_x_axis))
ClassAssertion(ktw:Vector :robot_x_axis)
DataPropertyAssertion(ktw:hasVector_I :robot_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :robot_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :robot_x_axis
                      "0.000000"^^xsd:decimal)
// 5 end ktw:Vector
//*****************************************

ObjectPropertyAssertion(ktw:hasPoseLocation_ZAxis
                        :robot_pose :robot_z_axis)

//*****************************************
// 5 start ktw:Vector robot_z_axis
Declaration(NamedIndividual(:robot_z_axis))
ClassAssertion(ktw:Vector :robot_z_axis)
DataPropertyAssertion(ktw:hasVector_I :robot_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_J :robot_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVector_K :robot_z_axis
                      "1.000000"^^xsd:decimal)
// 5 end ktw:Vector
//*****************************************

// 4 end ktw:PoseOnlyLocation
//*****************************************

DataPropertyAssertion(ktw:hasRobot_Description :robot_1
                      "this is the robot"^^xsd:string)
ObjectPropertyAssertion(ktw:hasRobot_EndEffector
                        :robot_1 :tray_gripper)

//*****************************************
// 4 start ktw:VacuumEffectorSingleCup tray_gripper
Declaration(NamedIndividual(:tray_gripper))
ClassAssertion(ktw:VacuumEffectorSingleCup :tray_gripper)
ObjectPropertyAssertion(ktw:hasSolidObject_PrimaryLocation
                        :tray_gripper :relative_location_on_1)

//*****************************************
// 5 start ktw:RelativeLocationOn relative_location_on_1
Declaration(NamedIndividual(:relative_location_on_1))
ClassAssertion(ktw:RelativeLocationOn :relative_location_on_1)
ObjectPropertyAssertion(ktw:hasPhysicalLocation_RefObject
                        :relative_location_on_1 :robot_1)
DataPropertyAssertion(ktw:hasRelativeLocation_Description :relative_location_on_1
                      "The tray_gripper is on robot_1"^^xsd:string)
// 5 end ktw:RelativeLocationOn
//*****************************************

DataPropertyAssertion(ktw:hasEndEffector_Description :tray_gripper
                      "large single cup vacuum effector"^^xsd:string)
DataPropertyAssertion(ktw:hasEndEffector_Weight :tray_gripper
                      "0.040000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasEndEffector_MaximumLoadWeight :tray_gripper
                      "0.500000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVacuumEffector_CupDiameter :tray_gripper
                      "0.040000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasVacuumEffector_Length :tray_gripper
                      "0.100000"^^xsd:decimal)
// 4 end ktw:VacuumEffectorSingleCup
//*****************************************

DataPropertyAssertion(ktw:hasRobot_MaximumLoadWeight :robot_1
                      "7.000000"^^xsd:decimal)
ObjectPropertyAssertion(ktw:hasRobot_WorkVolume
                        :robot_1 :box_volume_1)

//*****************************************
// 4 start ktw:BoxVolume box_volume_1
Declaration(NamedIndividual(:box_volume_1))
ClassAssertion(ktw:BoxVolume :box_volume_1)
ObjectPropertyAssertion(ktw:hasBoxVolume_MaximumPoint
                        :box_volume_1 :point_max)

//*****************************************
// 5 start ktw:Point point_max
Declaration(NamedIndividual(:point_max))
ClassAssertion(ktw:Point :point_max)
DataPropertyAssertion(ktw:hasPoint_X :point_max
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Y :point_max
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Z :point_max
                      "2.000000"^^xsd:decimal)
// 5 end ktw:Point
//*****************************************

ObjectPropertyAssertion(ktw:hasBoxVolume_MinimumPoint
                        :box_volume_1 :point_min)

//*****************************************
// 5 start ktw:Point point_min
Declaration(NamedIndividual(:point_min))
ClassAssertion(ktw:Point :point_min)
DataPropertyAssertion(ktw:hasPoint_X :point_min
                      "-1.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Y :point_min
                      "-1.000000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasPoint_Z :point_min
                      "0.000000"^^xsd:decimal)
// 5 end ktw:Point
//*****************************************

// 4 end ktw:BoxVolume
//*****************************************

// 3 end ktw:Robot
//*****************************************

ObjectPropertyAssertion(ktw:hasKittingWorkstation_Sku
                        :kitting_workstation_1 :stock_keeping_unit_part_a)

//*****************************************
// 3 start ktw:StockKeepingUnit stock_keeping_unit_part_a
Declaration(NamedIndividual(:stock_keeping_unit_part_a))
ClassAssertion(ktw:StockKeepingUnit :stock_keeping_unit_part_a)
DataPropertyAssertion(ktw:hasStockKeepingUnit_Description :stock_keeping_unit_part_a
                      "SKU for Part A"^^xsd:string)
ObjectPropertyAssertion(ktw:hasStockKeepingUnit_InternalShape
                        :stock_keeping_unit_part_a :shape_part_a)

//*****************************************
// 4 start ktw:BoxyShape shape_part_a
Declaration(NamedIndividual(:shape_part_a))
ClassAssertion(ktw:BoxyShape :shape_part_a)
DataPropertyAssertion(ktw:hasShapeDesign_Description :shape_part_a
                      "Shape of PartA"^^xsd:string)
DataPropertyAssertion(ktw:hasBoxyShape_Length :shape_part_a
                      "0.100000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasBoxyShape_Width :shape_part_a
                      "0.080000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasBoxyShape_Height :shape_part_a
                      "0.150000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasBoxyShape_HasTop :shape_part_a
                      "true"^^xsd:boolean)
// 4 end ktw:BoxyShape
//*****************************************

DataPropertyAssertion(ktw:hasStockKeepingUnit_Weight :stock_keeping_unit_part_a
                      "0.180000"^^xsd:decimal)
ObjectPropertyAssertion(ktw:hasStockKeepingUnit_EndEffector
                        :stock_keeping_unit_part_a :part_gripper)
// 3 end ktw:StockKeepingUnit
//*****************************************

ObjectPropertyAssertion(ktw:hasKittingWorkstation_Sku
                        :kitting_workstation_1 :stock_keeping_unit_part_b)

//*****************************************
// 3 start ktw:StockKeepingUnit stock_keeping_unit_part_b
Declaration(NamedIndividual(:stock_keeping_unit_part_b))
ClassAssertion(ktw:StockKeepingUnit :stock_keeping_unit_part_b)
DataPropertyAssertion(ktw:hasStockKeepingUnit_Description :stock_keeping_unit_part_b
                      "SKU for Part B"^^xsd:string)
ObjectPropertyAssertion(ktw:hasStockKeepingUnit_InternalShape
                        :stock_keeping_unit_part_b :shape_part_b)

//*****************************************
// 4 start ktw:BoxyShape shape_part_b
Declaration(NamedIndividual(:shape_part_b))
ClassAssertion(ktw:BoxyShape :shape_part_b)
DataPropertyAssertion(ktw:hasShapeDesign_Description :shape_part_b
                      "Shape of PartB"^^xsd:string)
DataPropertyAssertion(ktw:hasBoxyShape_Length :shape_part_b
                      "0.120000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasBoxyShape_Width :shape_part_b
                      "0.080000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasBoxyShape_Height :shape_part_b
                      "0.150000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasBoxyShape_HasTop :shape_part_b
                      "true"^^xsd:boolean)
// 4 end ktw:BoxyShape
//*****************************************

DataPropertyAssertion(ktw:hasStockKeepingUnit_Weight :stock_keeping_unit_part_b
                      "0.180000"^^xsd:decimal)
ObjectPropertyAssertion(ktw:hasStockKeepingUnit_EndEffector
                        :stock_keeping_unit_part_b :part_gripper)
// 3 end ktw:StockKeepingUnit
//*****************************************

ObjectPropertyAssertion(ktw:hasKittingWorkstation_Sku
                        :kitting_workstation_1 :stock_keeping_unit_part_c)

//*****************************************
// 3 start ktw:StockKeepingUnit stock_keeping_unit_part_c
Declaration(NamedIndividual(:stock_keeping_unit_part_c))
ClassAssertion(ktw:StockKeepingUnit :stock_keeping_unit_part_c)
DataPropertyAssertion(ktw:hasStockKeepingUnit_Description :stock_keeping_unit_part_c
                      "SKU for Part C"^^xsd:string)
ObjectPropertyAssertion(ktw:hasStockKeepingUnit_InternalShape
                        :stock_keeping_unit_part_c :shape_part_c)

//*****************************************
// 4 start ktw:BoxyShape shape_part_c
Declaration(NamedIndividual(:shape_part_c))
ClassAssertion(ktw:BoxyShape :shape_part_c)
DataPropertyAssertion(ktw:hasShapeDesign_Description :shape_part_c
                      "Shape of PartC"^^xsd:string)
DataPropertyAssertion(ktw:hasBoxyShape_Length :shape_part_c
                      "0.150000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasBoxyShape_Width :shape_part_c
                      "0.080000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasBoxyShape_Height :shape_part_c
                      "0.150000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasBoxyShape_HasTop :shape_part_c
                      "true"^^xsd:boolean)
// 4 end ktw:BoxyShape
//*****************************************

DataPropertyAssertion(ktw:hasStockKeepingUnit_Weight :stock_keeping_unit_part_c
                      "0.180000"^^xsd:decimal)
ObjectPropertyAssertion(ktw:hasStockKeepingUnit_EndEffector
                        :stock_keeping_unit_part_c :part_gripper)
// 3 end ktw:StockKeepingUnit
//*****************************************

ObjectPropertyAssertion(ktw:hasKittingWorkstation_Sku
                        :kitting_workstation_1 :stock_keeping_unit_kit_tray)

//*****************************************
// 3 start ktw:StockKeepingUnit stock_keeping_unit_kit_tray
Declaration(NamedIndividual(:stock_keeping_unit_kit_tray))
ClassAssertion(ktw:StockKeepingUnit :stock_keeping_unit_kit_tray)
DataPropertyAssertion(ktw:hasStockKeepingUnit_Description :stock_keeping_unit_kit_tray
                      "SKU for KitTrays"^^xsd:string)
ObjectPropertyAssertion(ktw:hasStockKeepingUnit_InternalShape
                        :stock_keeping_unit_kit_tray :shape_kit_tray)

//*****************************************
// 4 start ktw:BoxyShape shape_kit_tray
Declaration(NamedIndividual(:shape_kit_tray))
ClassAssertion(ktw:BoxyShape :shape_kit_tray)
DataPropertyAssertion(ktw:hasShapeDesign_Description :shape_kit_tray
                      "Shape of KitTrays"^^xsd:string)
DataPropertyAssertion(ktw:hasBoxyShape_Length :shape_kit_tray
                      "0.500000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasBoxyShape_Width :shape_kit_tray
                      "0.300000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasBoxyShape_Height :shape_kit_tray
                      "0.150000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasBoxyShape_HasTop :shape_kit_tray
                      "false"^^xsd:boolean)
// 4 end ktw:BoxyShape
//*****************************************

DataPropertyAssertion(ktw:hasStockKeepingUnit_Weight :stock_keeping_unit_kit_tray
                      "0.200000"^^xsd:decimal)
ObjectPropertyAssertion(ktw:hasStockKeepingUnit_EndEffector
                        :stock_keeping_unit_kit_tray :tray_gripper)
// 3 end ktw:StockKeepingUnit
//*****************************************

ObjectPropertyAssertion(ktw:hasKittingWorkstation_Sku
                        :kitting_workstation_1 :stock_keeping_unit_kit_box)

//*****************************************
// 3 start ktw:StockKeepingUnit stock_keeping_unit_kit_box
Declaration(NamedIndividual(:stock_keeping_unit_kit_box))
ClassAssertion(ktw:StockKeepingUnit :stock_keeping_unit_kit_box)
DataPropertyAssertion(ktw:hasStockKeepingUnit_Description :stock_keeping_unit_kit_box
                      "SKU for Boxes for Kits and KitTrays"^^xsd:string)
ObjectPropertyAssertion(ktw:hasStockKeepingUnit_InternalShape
                        :stock_keeping_unit_kit_box :shape_kit_box)

//*****************************************
// 4 start ktw:BoxyShape shape_kit_box
Declaration(NamedIndividual(:shape_kit_box))
ClassAssertion(ktw:BoxyShape :shape_kit_box)
DataPropertyAssertion(ktw:hasShapeDesign_Description :shape_kit_box
                      "Shape of boxes to hold kits and kit trays"^^xsd:string)
DataPropertyAssertion(ktw:hasBoxyShape_Length :shape_kit_box
                      "0.900000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasBoxyShape_Width :shape_kit_box
                      "0.700000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasBoxyShape_Height :shape_kit_box
                      "0.800000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasBoxyShape_HasTop :shape_kit_box
                      "false"^^xsd:boolean)
// 4 end ktw:BoxyShape
//*****************************************

DataPropertyAssertion(ktw:hasStockKeepingUnit_Weight :stock_keeping_unit_kit_box
                      "1.200000"^^xsd:decimal)
// 3 end ktw:StockKeepingUnit
//*****************************************

ObjectPropertyAssertion(ktw:hasKittingWorkstation_Sku
                        :kitting_workstation_1 :stock_keeping_unit_parts_tray)

//*****************************************
// 3 start ktw:StockKeepingUnit stock_keeping_unit_parts_tray
Declaration(NamedIndividual(:stock_keeping_unit_parts_tray))
ClassAssertion(ktw:StockKeepingUnit :stock_keeping_unit_parts_tray)
DataPropertyAssertion(ktw:hasStockKeepingUnit_Description :stock_keeping_unit_parts_tray
                      "SKU for PartsTrays"^^xsd:string)
ObjectPropertyAssertion(ktw:hasStockKeepingUnit_InternalShape
                        :stock_keeping_unit_parts_tray :shape_parts_tray)

//*****************************************
// 4 start ktw:BoxyShape shape_parts_tray
Declaration(NamedIndividual(:shape_parts_tray))
ClassAssertion(ktw:BoxyShape :shape_parts_tray)
DataPropertyAssertion(ktw:hasShapeDesign_Description :shape_parts_tray
                      "Shape of PartsTrays"^^xsd:string)
DataPropertyAssertion(ktw:hasBoxyShape_Length :shape_parts_tray
                      "0.600000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasBoxyShape_Width :shape_parts_tray
                      "0.300000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasBoxyShape_Height :shape_parts_tray
                      "0.200000"^^xsd:decimal)
DataPropertyAssertion(ktw:hasBoxyShape_HasTop :shape_parts_tray
                      "false"^^xsd:boolean)
// 4 end ktw:BoxyShape
//*****************************************

DataPropertyAssertion(ktw:hasStockKeepingUnit_Weight :stock_keeping_unit_parts_tray
                      "0.200000"^^xsd:decimal)
ObjectPropertyAssertion(ktw:hasStockKeepingUnit_EndEffector
                        :stock_keeping_unit_parts_tray :tray_gripper)
// 3 end ktw:StockKeepingUnit
//*****************************************

DataPropertyAssertion(ktw:hasKittingWorkstation_WeightUnit :kitting_workstation_1
                      "kilogram"^^xsd:NMTOKEN)
// 2 end ktw:KittingWorkstation
//*****************************************

ObjectPropertyAssertion(soap:hasSOAP_Domain
                        :soap :kiting-domain)

//*****************************************
// 2 start soap:Domain kiting-domain
Declaration(NamedIndividual(:kiting-domain))
ClassAssertion(soap:Domain :kiting-domain)
DataPropertyAssertion(soap:hasDomain_Requirement :kiting-domain
                      "strips"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasDomain_Requirement :kiting-domain
                      "typing"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasDomain_Requirement :kiting-domain
                      "action-costs"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasDomain_Requirement :kiting-domain
                      "fluents"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasDomain_Variable :kiting-domain
                      "EndEffector"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasDomain_Variable :kiting-domain
                      "EndEffectorHolder"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasDomain_Variable :kiting-domain
                      "Kit"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasDomain_Variable :kiting-domain
                      "KitTray"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasDomain_Variable :kiting-domain
                      "LargeBoxWithEmptyKitTrays"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasDomain_Variable :kiting-domain
                      "LargeBoxWithKits"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasDomain_Variable :kiting-domain
                      "Part"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasDomain_Variable :kiting-domain
                      "PartsTray"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasDomain_Variable :kiting-domain
                      "EndEffectorChangingStation"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasDomain_Variable :kiting-domain
                      "Robot"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasDomain_Variable :kiting-domain
                      "WorkTable"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasDomain_Predicate
                        :kiting-domain :endeffector-location-robot)

//*****************************************
// 3 start soap:Predicate endeffector-location-robot
Declaration(NamedIndividual(:endeffector-location-robot))
ClassAssertion(soap:Predicate :endeffector-location-robot)
DataPropertyAssertion(soap:hasPredicate_Description :endeffector-location-robot
                      "TRUE iff ?endeffector is attached to ?robot"^^xsd:string)
ObjectPropertyAssertion(soap:hasPredicate_PredicateGroupElement
                        :endeffector-location-robot :endeffector-location-robot_group1)

//*****************************************
// 4 start soap:PredicateGroupElement endeffector-location-robot_group1
Declaration(NamedIndividual(:endeffector-location-robot_group1))
ClassAssertion(soap:PredicateGroupElement :endeffector-location-robot_group1)
DataPropertyAssertion(soap:hasPredicateGroupElement_ReferenceName :endeffector-location-robot_group1
                      "EndEffector"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_TargetName :endeffector-location-robot_group1
                      "Robot"^^xsd:NMTOKEN)
// 4 end soap:PredicateGroupElement
//*****************************************

// 3 end soap:Predicate
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_Predicate
                        :kiting-domain :endeffector-location-endeffectorholder)

//*****************************************
// 3 start soap:Predicate endeffector-location-endeffectorholder
Declaration(NamedIndividual(:endeffector-location-endeffectorholder))
ClassAssertion(soap:Predicate :endeffector-location-endeffectorholder)
DataPropertyAssertion(soap:hasPredicate_Description :endeffector-location-endeffectorholder
                      "TRUE iff ?endeffector is in ?endeffectorholder"^^xsd:string)
ObjectPropertyAssertion(soap:hasPredicate_PredicateGroupElement
                        :endeffector-location-endeffectorholder :endeffector-location-endeffectorholder_group1)

//*****************************************
// 4 start soap:PredicateGroupElement endeffector-location-endeffectorholder_group1
Declaration(NamedIndividual(:endeffector-location-endeffectorholder_group1))
ClassAssertion(soap:PredicateGroupElement :endeffector-location-endeffectorholder_group1)
DataPropertyAssertion(soap:hasPredicateGroupElement_ReferenceName :endeffector-location-endeffectorholder_group1
                      "Part"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_TargetName :endeffector-location-endeffectorholder_group1
                      "Robot"^^xsd:NMTOKEN)
// 4 end soap:PredicateGroupElement
//*****************************************

// 3 end soap:Predicate
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_Predicate
                        :kiting-domain :robot-with-endeffector)

//*****************************************
// 3 start soap:Predicate robot-with-endeffector
Declaration(NamedIndividual(:robot-with-endeffector))
ClassAssertion(soap:Predicate :robot-with-endeffector)
DataPropertyAssertion(soap:hasPredicate_Description :robot-with-endeffector
                      ";TRUE iff ?robot is equipped with ?endeffector"^^xsd:string)
ObjectPropertyAssertion(soap:hasPredicate_PredicateGroupElement
                        :robot-with-endeffector :robot-with-endeffector_group1)

//*****************************************
// 4 start soap:PredicateGroupElement robot-with-endeffector_group1
Declaration(NamedIndividual(:robot-with-endeffector_group1))
ClassAssertion(soap:PredicateGroupElement :robot-with-endeffector_group1)
DataPropertyAssertion(soap:hasPredicateGroupElement_ReferenceName :robot-with-endeffector_group1
                      "Robot"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_TargetName :robot-with-endeffector_group1
                      "EndEffector"^^xsd:NMTOKEN)
// 4 end soap:PredicateGroupElement
//*****************************************

// 3 end soap:Predicate
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_Predicate
                        :kiting-domain :robot-with-no-endeffector)

//*****************************************
// 3 start soap:Predicate robot-with-no-endeffector
Declaration(NamedIndividual(:robot-with-no-endeffector))
ClassAssertion(soap:Predicate :robot-with-no-endeffector)
DataPropertyAssertion(soap:hasPredicate_Description :robot-with-no-endeffector
                      ";TRUE iff ?robot is not equipped with ?endeffector"^^xsd:string)
ObjectPropertyAssertion(soap:hasPredicate_PredicateGroupElement
                        :robot-with-no-endeffector :robot-with-no-endeffector_group1)

//*****************************************
// 4 start soap:PredicateGroupElement robot-with-no-endeffector_group1
Declaration(NamedIndividual(:robot-with-no-endeffector_group1))
ClassAssertion(soap:PredicateGroupElement :robot-with-no-endeffector_group1)
DataPropertyAssertion(soap:hasPredicateGroupElement_ReferenceName :robot-with-no-endeffector_group1
                      "Robot"^^xsd:NMTOKEN)
// 4 end soap:PredicateGroupElement
//*****************************************

// 3 end soap:Predicate
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_Predicate
                        :kiting-domain :on-worktable-kit)

//*****************************************
// 3 start soap:Predicate on-worktable-kit
Declaration(NamedIndividual(:on-worktable-kit))
ClassAssertion(soap:Predicate :on-worktable-kit)
DataPropertyAssertion(soap:hasPredicate_Description :on-worktable-kit
                      ";TRUE iff ?kit is on ?worktable"^^xsd:string)
ObjectPropertyAssertion(soap:hasPredicate_PredicateGroupElement
                        :on-worktable-kit :on-worktable-kit_group1)

//*****************************************
// 4 start soap:PredicateGroupElement on-worktable-kit_group1
Declaration(NamedIndividual(:on-worktable-kit_group1))
ClassAssertion(soap:PredicateGroupElement :on-worktable-kit_group1)
DataPropertyAssertion(soap:hasPredicateGroupElement_ReferenceName :on-worktable-kit_group1
                      "Worktable"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_TargetName :on-worktable-kit_group1
                      "Kit"^^xsd:NMTOKEN)
// 4 end soap:PredicateGroupElement
//*****************************************

// 3 end soap:Predicate
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_Predicate
                        :kiting-domain :on-worktable-kittray)

//*****************************************
// 3 start soap:Predicate on-worktable-kittray
Declaration(NamedIndividual(:on-worktable-kittray))
ClassAssertion(soap:Predicate :on-worktable-kittray)
DataPropertyAssertion(soap:hasPredicate_Description :on-worktable-kittray
                      ";TRUE iff ?kittray is on ?worktable"^^xsd:string)
ObjectPropertyAssertion(soap:hasPredicate_PredicateGroupElement
                        :on-worktable-kittray :on-worktable-kittray_group1)

//*****************************************
// 4 start soap:PredicateGroupElement on-worktable-kittray_group1
Declaration(NamedIndividual(:on-worktable-kittray_group1))
ClassAssertion(soap:PredicateGroupElement :on-worktable-kittray_group1)
DataPropertyAssertion(soap:hasPredicateGroupElement_ReferenceName :on-worktable-kittray_group1
                      "Worktable"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_TargetName :on-worktable-kittray_group1
                      "KitTray"^^xsd:NMTOKEN)
// 4 end soap:PredicateGroupElement
//*****************************************

// 3 end soap:Predicate
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_Predicate
                        :kiting-domain :worktable-empty)

//*****************************************
// 3 start soap:Predicate worktable-empty
Declaration(NamedIndividual(:worktable-empty))
ClassAssertion(soap:Predicate :worktable-empty)
DataPropertyAssertion(soap:hasPredicate_Description :worktable-empty
                      ";TRUE iff ?worktable is empty (nothing on top of it)"^^xsd:string)
ObjectPropertyAssertion(soap:hasPredicate_PredicateGroupElement
                        :worktable-empty :worktable-empty_group1)

//*****************************************
// 4 start soap:PredicateGroupElement worktable-empty_group1
Declaration(NamedIndividual(:worktable-empty_group1))
ClassAssertion(soap:PredicateGroupElement :worktable-empty_group1)
DataPropertyAssertion(soap:hasPredicateGroupElement_ReferenceName :worktable-empty_group1
                      "Worktable"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasPredicateGroupElement_StateRelation
                        :worktable-empty_group1 :InContactWith)
// 4 end soap:PredicateGroupElement
//*****************************************

// 3 end soap:Predicate
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_Predicate
                        :kiting-domain :kit-location-lbwk)

//*****************************************
// 3 start soap:Predicate kit-location-lbwk
Declaration(NamedIndividual(:kit-location-lbwk))
ClassAssertion(soap:Predicate :kit-location-lbwk)
DataPropertyAssertion(soap:hasPredicate_Description :kit-location-lbwk
                      ";TRUE iff ?kit is in ?largeboxwithkits"^^xsd:string)
ObjectPropertyAssertion(soap:hasPredicate_PredicateGroupElement
                        :kit-location-lbwk :kit-location-lbwk_group1)

//*****************************************
// 4 start soap:PredicateGroupElement kit-location-lbwk_group1
Declaration(NamedIndividual(:kit-location-lbwk_group1))
ClassAssertion(soap:PredicateGroupElement :kit-location-lbwk_group1)
DataPropertyAssertion(soap:hasPredicateGroupElement_ReferenceName :kit-location-lbwk_group1
                      "Kit"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_TargetName :kit-location-lbwk_group1
                      "LargeBoxWithKits"^^xsd:NMTOKEN)
// 4 end soap:PredicateGroupElement
//*****************************************

// 3 end soap:Predicate
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_Predicate
                        :kiting-domain :kit-location-worktable)

//*****************************************
// 3 start soap:Predicate kit-location-worktable
Declaration(NamedIndividual(:kit-location-worktable))
ClassAssertion(soap:Predicate :kit-location-worktable)
DataPropertyAssertion(soap:hasPredicate_Description :kit-location-worktable
                      ";TRUE iff ?kit is on ?worktable"^^xsd:string)
ObjectPropertyAssertion(soap:hasPredicate_PredicateGroupElement
                        :kit-location-worktable :kit-location-worktable_group1)

//*****************************************
// 4 start soap:PredicateGroupElement kit-location-worktable_group1
Declaration(NamedIndividual(:kit-location-worktable_group1))
ClassAssertion(soap:PredicateGroupElement :kit-location-worktable_group1)
DataPropertyAssertion(soap:hasPredicateGroupElement_ReferenceName :kit-location-worktable_group1
                      "Kit"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_TargetName :kit-location-worktable_group1
                      "WorkTable"^^xsd:NMTOKEN)
// 4 end soap:PredicateGroupElement
//*****************************************

// 3 end soap:Predicate
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_Predicate
                        :kiting-domain :kit-location-robot)

//*****************************************
// 3 start soap:Predicate kit-location-robot
Declaration(NamedIndividual(:kit-location-robot))
ClassAssertion(soap:Predicate :kit-location-robot)
DataPropertyAssertion(soap:hasPredicate_Description :kit-location-robot
                      ";TRUE iff ?kit is being held by ?robot"^^xsd:string)
ObjectPropertyAssertion(soap:hasPredicate_PredicateGroupElement
                        :kit-location-robot :kit-location-robot_group1)

//*****************************************
// 4 start soap:PredicateGroupElement kit-location-robot_group1
Declaration(NamedIndividual(:kit-location-robot_group1))
ClassAssertion(soap:PredicateGroupElement :kit-location-robot_group1)
DataPropertyAssertion(soap:hasPredicateGroupElement_ReferenceName :kit-location-robot_group1
                      "Kit"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_TargetName :kit-location-robot_group1
                      "Robot"^^xsd:NMTOKEN)
// 4 end soap:PredicateGroupElement
//*****************************************

// 3 end soap:Predicate
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_Predicate
                        :kiting-domain :kittray-location-lbwekt)

//*****************************************
// 3 start soap:Predicate kittray-location-lbwekt
Declaration(NamedIndividual(:kittray-location-lbwekt))
ClassAssertion(soap:Predicate :kittray-location-lbwekt)
DataPropertyAssertion(soap:hasPredicate_Description :kittray-location-lbwekt
                      ";TRUE iff ?kittray is in ?largeboxwithemptykittrays"^^xsd:string)
ObjectPropertyAssertion(soap:hasPredicate_PredicateGroupElement
                        :kittray-location-lbwekt :kittray-location-lbwekt_group1)

//*****************************************
// 4 start soap:PredicateGroupElement kittray-location-lbwekt_group1
Declaration(NamedIndividual(:kittray-location-lbwekt_group1))
ClassAssertion(soap:PredicateGroupElement :kittray-location-lbwekt_group1)
DataPropertyAssertion(soap:hasPredicateGroupElement_ReferenceName :kittray-location-lbwekt_group1
                      "KitTray"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_TargetName :kittray-location-lbwekt_group1
                      "LargeBoxWithEmptyKitTrays"^^xsd:NMTOKEN)
// 4 end soap:PredicateGroupElement
//*****************************************

// 3 end soap:Predicate
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_Predicate
                        :kiting-domain :kittray-location-robot)

//*****************************************
// 3 start soap:Predicate kittray-location-robot
Declaration(NamedIndividual(:kittray-location-robot))
ClassAssertion(soap:Predicate :kittray-location-robot)
DataPropertyAssertion(soap:hasPredicate_Description :kittray-location-robot
                      ";TRUE iff ?kittray is being held by ?robot"^^xsd:string)
ObjectPropertyAssertion(soap:hasPredicate_PredicateGroupElement
                        :kittray-location-robot :kittray-location-robot_group1)

//*****************************************
// 4 start soap:PredicateGroupElement kittray-location-robot_group1
Declaration(NamedIndividual(:kittray-location-robot_group1))
ClassAssertion(soap:PredicateGroupElement :kittray-location-robot_group1)
DataPropertyAssertion(soap:hasPredicateGroupElement_ReferenceName :kittray-location-robot_group1
                      "KitTray"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_TargetName :kittray-location-robot_group1
                      "Robot"^^xsd:NMTOKEN)
// 4 end soap:PredicateGroupElement
//*****************************************

// 3 end soap:Predicate
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_Predicate
                        :kiting-domain :kittray-location-worktable)

//*****************************************
// 3 start soap:Predicate kittray-location-worktable
Declaration(NamedIndividual(:kittray-location-worktable))
ClassAssertion(soap:Predicate :kittray-location-worktable)
DataPropertyAssertion(soap:hasPredicate_Description :kittray-location-worktable
                      ";TRUE iff ?kittray is on ?worktable"^^xsd:string)
ObjectPropertyAssertion(soap:hasPredicate_PredicateGroupElement
                        :kittray-location-worktable :kittray-location-worktable_group1)

//*****************************************
// 4 start soap:PredicateGroupElement kittray-location-worktable_group1
Declaration(NamedIndividual(:kittray-location-worktable_group1))
ClassAssertion(soap:PredicateGroupElement :kittray-location-worktable_group1)
DataPropertyAssertion(soap:hasPredicateGroupElement_ReferenceName :kittray-location-worktable_group1
                      "KitTray"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_TargetName :kittray-location-worktable_group1
                      "WorkTable"^^xsd:NMTOKEN)
// 4 end soap:PredicateGroupElement
//*****************************************

// 3 end soap:Predicate
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_Predicate
                        :kiting-domain :part-location-partstray)

//*****************************************
// 3 start soap:Predicate part-location-partstray
Declaration(NamedIndividual(:part-location-partstray))
ClassAssertion(soap:Predicate :part-location-partstray)
DataPropertyAssertion(soap:hasPredicate_Description :part-location-partstray
                      ";TRUE iff ?part is in ?partstray"^^xsd:string)
ObjectPropertyAssertion(soap:hasPredicate_PredicateGroupElement
                        :part-location-partstray :part-location-partstray_group1)

//*****************************************
// 4 start soap:PredicateGroupElement part-location-partstray_group1
Declaration(NamedIndividual(:part-location-partstray_group1))
ClassAssertion(soap:PredicateGroupElement :part-location-partstray_group1)
DataPropertyAssertion(soap:hasPredicateGroupElement_ReferenceName :part-location-partstray_group1
                      "Part"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_TargetName :part-location-partstray_group1
                      "PartsTray"^^xsd:NMTOKEN)
// 4 end soap:PredicateGroupElement
//*****************************************

// 3 end soap:Predicate
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_Predicate
                        :kiting-domain :part-location-kit)

//*****************************************
// 3 start soap:Predicate part-location-kit
Declaration(NamedIndividual(:part-location-kit))
ClassAssertion(soap:Predicate :part-location-kit)
DataPropertyAssertion(soap:hasPredicate_Description :part-location-kit
                      ";TRUE iff ?part is in ?kit"^^xsd:string)
ObjectPropertyAssertion(soap:hasPredicate_PredicateGroupElement
                        :part-location-kit :part-location-kit_group1)

//*****************************************
// 4 start soap:PredicateGroupElement part-location-kit_group1
Declaration(NamedIndividual(:part-location-kit_group1))
ClassAssertion(soap:PredicateGroupElement :part-location-kit_group1)
DataPropertyAssertion(soap:hasPredicateGroupElement_ReferenceName :part-location-kit_group1
                      "Part"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_TargetName :part-location-kit_group1
                      "Kit"^^xsd:NMTOKEN)
// 4 end soap:PredicateGroupElement
//*****************************************

// 3 end soap:Predicate
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_Predicate
                        :kiting-domain :part-location-robot)

//*****************************************
// 3 start soap:Predicate part-location-robot
Declaration(NamedIndividual(:part-location-robot))
ClassAssertion(soap:Predicate :part-location-robot)
DataPropertyAssertion(soap:hasPredicate_Description :part-location-robot
                      ";TRUE iff ?part is being held by ?robot"^^xsd:string)
ObjectPropertyAssertion(soap:hasPredicate_PredicateGroupElement
                        :part-location-robot :part-location-robot_group1)

//*****************************************
// 4 start soap:PredicateGroupElement part-location-robot_group1
Declaration(NamedIndividual(:part-location-robot_group1))
ClassAssertion(soap:PredicateGroupElement :part-location-robot_group1)
DataPropertyAssertion(soap:hasPredicateGroupElement_ReferenceName :part-location-robot_group1
                      "EndEffector"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_TargetName :part-location-robot_group1
                      "Part"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasPredicateGroupElement_StateRelation
                        :part-location-robot_group1 :InContactWith)
// 4 end soap:PredicateGroupElement
//*****************************************

ObjectPropertyAssertion(soap:hasPredicate_PredicateGroupElement
                        :part-location-robot :part-location-robot_group2)

//*****************************************
// 4 start soap:PredicateGroupElement part-location-robot_group2
Declaration(NamedIndividual(:part-location-robot_group2))
ClassAssertion(soap:PredicateGroupElement :part-location-robot_group2)
DataPropertyAssertion(soap:hasPredicateGroupElement_ReferenceName :part-location-robot_group2
                      "Robot"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_TargetName :part-location-robot_group2
                      "EndEffector"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasPredicateGroupElement_StateRelation
                        :part-location-robot_group2 :InContactWith)
// 4 end soap:PredicateGroupElement
//*****************************************

// 3 end soap:Predicate
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_Predicate
                        :kiting-domain :robot-holds-kittray)

//*****************************************
// 3 start soap:Predicate robot-holds-kittray
Declaration(NamedIndividual(:robot-holds-kittray))
ClassAssertion(soap:Predicate :robot-holds-kittray)
DataPropertyAssertion(soap:hasPredicate_Description :robot-holds-kittray
                      ";TRUE iff ?robot is holding ?kittray"^^xsd:string)
ObjectPropertyAssertion(soap:hasPredicate_PredicateGroupElement
                        :robot-holds-kittray :robot-holds-kittray_group1)

//*****************************************
// 4 start soap:PredicateGroupElement robot-holds-kittray_group1
Declaration(NamedIndividual(:robot-holds-kittray_group1))
ClassAssertion(soap:PredicateGroupElement :robot-holds-kittray_group1)
DataPropertyAssertion(soap:hasPredicateGroupElement_ReferenceName :robot-holds-kittray_group1
                      "Robot"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_TargetName :robot-holds-kittray_group1
                      "KitTray"^^xsd:NMTOKEN)
// 4 end soap:PredicateGroupElement
//*****************************************

// 3 end soap:Predicate
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_Predicate
                        :kiting-domain :robot-holds-kit)

//*****************************************
// 3 start soap:Predicate robot-holds-kit
Declaration(NamedIndividual(:robot-holds-kit))
ClassAssertion(soap:Predicate :robot-holds-kit)
DataPropertyAssertion(soap:hasPredicate_Description :robot-holds-kit
                      ";TRUE iff ?robot is holding ?kit"^^xsd:string)
ObjectPropertyAssertion(soap:hasPredicate_PredicateGroupElement
                        :robot-holds-kit :robot-holds-kit_group1)

//*****************************************
// 4 start soap:PredicateGroupElement robot-holds-kit_group1
Declaration(NamedIndividual(:robot-holds-kit_group1))
ClassAssertion(soap:PredicateGroupElement :robot-holds-kit_group1)
DataPropertyAssertion(soap:hasPredicateGroupElement_ReferenceName :robot-holds-kit_group1
                      "Robot"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_TargetName :robot-holds-kit_group1
                      "Kit"^^xsd:NMTOKEN)
// 4 end soap:PredicateGroupElement
//*****************************************

// 3 end soap:Predicate
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_Predicate
                        :kiting-domain :robot-holds-part)

//*****************************************
// 3 start soap:Predicate robot-holds-part
Declaration(NamedIndividual(:robot-holds-part))
ClassAssertion(soap:Predicate :robot-holds-part)
DataPropertyAssertion(soap:hasPredicate_Description :robot-holds-part
                      ";TRUE iff ?robot is holding ?part"^^xsd:string)
ObjectPropertyAssertion(soap:hasPredicate_PredicateGroupElement
                        :robot-holds-part :robot-holds-part_group1)

//*****************************************
// 4 start soap:PredicateGroupElement robot-holds-part_group1
Declaration(NamedIndividual(:robot-holds-part_group1))
ClassAssertion(soap:PredicateGroupElement :robot-holds-part_group1)
DataPropertyAssertion(soap:hasPredicateGroupElement_ReferenceName :robot-holds-part_group1
                      "Robot"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_TargetName :robot-holds-part_group1
                      "EndEffector"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasPredicateGroupElement_StateRelation
                        :robot-holds-part_group1 :InContactWith)
// 4 end soap:PredicateGroupElement
//*****************************************

ObjectPropertyAssertion(soap:hasPredicate_PredicateGroupElement
                        :robot-holds-part :robot-holds-part_group2)

//*****************************************
// 4 start soap:PredicateGroupElement robot-holds-part_group2
Declaration(NamedIndividual(:robot-holds-part_group2))
ClassAssertion(soap:PredicateGroupElement :robot-holds-part_group2)
DataPropertyAssertion(soap:hasPredicateGroupElement_ReferenceName :robot-holds-part_group2
                      "EndEffector"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_TargetName :robot-holds-part_group2
                      "Part"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasPredicateGroupElement_StateRelation
                        :robot-holds-part_group2 :InContactWith)
// 4 end soap:PredicateGroupElement
//*****************************************

// 3 end soap:Predicate
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_Predicate
                        :kiting-domain :robot-empty)

//*****************************************
// 3 start soap:Predicate robot-empty
Declaration(NamedIndividual(:robot-empty))
ClassAssertion(soap:Predicate :robot-empty)
DataPropertyAssertion(soap:hasPredicate_Description :robot-empty
                      ";TRUE iff ?robot is not holding anything"^^xsd:string)
ObjectPropertyAssertion(soap:hasPredicate_PredicateGroupElement
                        :robot-empty :robot-empty_group1)

//*****************************************
// 4 start soap:PredicateGroupElement robot-empty_group1
Declaration(NamedIndividual(:robot-empty_group1))
ClassAssertion(soap:PredicateGroupElement :robot-empty_group1)
DataPropertyAssertion(soap:hasPredicateGroupElement_ReferenceName :robot-empty_group1
                      "Robot"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasPredicateGroupElement_StateRelation
                        :robot-empty_group1 :InContactWith)
// 4 end soap:PredicateGroupElement
//*****************************************

// 3 end soap:Predicate
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_Predicate
                        :kiting-domain :lbwk-not-full)

//*****************************************
// 3 start soap:Predicate lbwk-not-full
Declaration(NamedIndividual(:lbwk-not-full))
ClassAssertion(soap:Predicate :lbwk-not-full)
DataPropertyAssertion(soap:hasPredicate_Description :lbwk-not-full
                      ";TRUE iff ?larboxwithkits is not full"^^xsd:string)
ObjectPropertyAssertion(soap:hasPredicate_PredicateGroupElement
                        :lbwk-not-full :lbwk-not-full_group1)

//*****************************************
// 4 start soap:PredicateGroupElement lbwk-not-full_group1
Declaration(NamedIndividual(:lbwk-not-full_group1))
ClassAssertion(soap:PredicateGroupElement :lbwk-not-full_group1)
DataPropertyAssertion(soap:hasPredicateGroupElement_ReferenceName :lbwk-not-full_group1
                      "LargeBoxWithKits"^^xsd:NMTOKEN)
// 4 end soap:PredicateGroupElement
//*****************************************

// 3 end soap:Predicate
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_Predicate
                        :kiting-domain :lbwekt-not-empty)

//*****************************************
// 3 start soap:Predicate lbwekt-not-empty
Declaration(NamedIndividual(:lbwekt-not-empty))
ClassAssertion(soap:Predicate :lbwekt-not-empty)
DataPropertyAssertion(soap:hasPredicate_Description :lbwekt-not-empty
                      ";TRUE iff ?largeboxwithemptykittrays is not empty"^^xsd:string)
ObjectPropertyAssertion(soap:hasPredicate_PredicateGroupElement
                        :lbwekt-not-empty :lbwekt-not-empty_group1)

//*****************************************
// 4 start soap:PredicateGroupElement lbwekt-not-empty_group1
Declaration(NamedIndividual(:lbwekt-not-empty_group1))
ClassAssertion(soap:PredicateGroupElement :lbwekt-not-empty_group1)
DataPropertyAssertion(soap:hasPredicateGroupElement_ReferenceName :lbwekt-not-empty_group1
                      "LargeBoxWithEmptyKitTrays"^^xsd:NMTOKEN)
// 4 end soap:PredicateGroupElement
//*****************************************

// 3 end soap:Predicate
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_Predicate
                        :kiting-domain :partstray-not-empty)

//*****************************************
// 3 start soap:Predicate partstray-not-empty
Declaration(NamedIndividual(:partstray-not-empty))
ClassAssertion(soap:Predicate :partstray-not-empty)
DataPropertyAssertion(soap:hasPredicate_Description :partstray-not-empty
                      ";TRUE iff ?partstray is not empty"^^xsd:string)
ObjectPropertyAssertion(soap:hasPredicate_PredicateGroupElement
                        :partstray-not-empty :partstray-not-empty_group1)

//*****************************************
// 4 start soap:PredicateGroupElement partstray-not-empty_group1
Declaration(NamedIndividual(:partstray-not-empty_group1))
ClassAssertion(soap:PredicateGroupElement :partstray-not-empty_group1)
DataPropertyAssertion(soap:hasPredicateGroupElement_ReferenceName :partstray-not-empty_group1
                      "PartsTray"^^xsd:NMTOKEN)
// 4 end soap:PredicateGroupElement
//*****************************************

// 3 end soap:Predicate
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_Predicate
                        :kiting-domain :endeffector-type-kittray)

//*****************************************
// 3 start soap:Predicate endeffector-type-kittray
Declaration(NamedIndividual(:endeffector-type-kittray))
ClassAssertion(soap:Predicate :endeffector-type-kittray)
DataPropertyAssertion(soap:hasPredicate_Description :endeffector-type-kittray
                      ";TRUE iff ?endeffector is capable of holding ?kittray	"^^xsd:string)
ObjectPropertyAssertion(soap:hasPredicate_PredicateGroupElement
                        :endeffector-type-kittray :endeffector-type-kittray_group1)

//*****************************************
// 4 start soap:PredicateGroupElement endeffector-type-kittray_group1
Declaration(NamedIndividual(:endeffector-type-kittray_group1))
ClassAssertion(soap:PredicateGroupElement :endeffector-type-kittray_group1)
DataPropertyAssertion(soap:hasPredicateGroupElement_ReferenceName :endeffector-type-kittray_group1
                      "EndEffector"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_TargetName :endeffector-type-kittray_group1
                      "KitTray"^^xsd:NMTOKEN)
// 4 end soap:PredicateGroupElement
//*****************************************

// 3 end soap:Predicate
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_Predicate
                        :kiting-domain :endeffector-type-kit)

//*****************************************
// 3 start soap:Predicate endeffector-type-kit
Declaration(NamedIndividual(:endeffector-type-kit))
ClassAssertion(soap:Predicate :endeffector-type-kit)
DataPropertyAssertion(soap:hasPredicate_Description :endeffector-type-kit
                      ";TRUE iff ?endeffector is capable of holding ?kit"^^xsd:string)
ObjectPropertyAssertion(soap:hasPredicate_PredicateGroupElement
                        :endeffector-type-kit :endeffector-type-kit_group1)

//*****************************************
// 4 start soap:PredicateGroupElement endeffector-type-kit_group1
Declaration(NamedIndividual(:endeffector-type-kit_group1))
ClassAssertion(soap:PredicateGroupElement :endeffector-type-kit_group1)
DataPropertyAssertion(soap:hasPredicateGroupElement_ReferenceName :endeffector-type-kit_group1
                      "EndEffector"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_TargetName :endeffector-type-kit_group1
                      "Kit"^^xsd:NMTOKEN)
// 4 end soap:PredicateGroupElement
//*****************************************

// 3 end soap:Predicate
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_Predicate
                        :kiting-domain :endeffector-type-part)

//*****************************************
// 3 start soap:Predicate endeffector-type-part
Declaration(NamedIndividual(:endeffector-type-part))
ClassAssertion(soap:Predicate :endeffector-type-part)
DataPropertyAssertion(soap:hasPredicate_Description :endeffector-type-part
                      ";TRUE iff ?endeffecor is capable of holding ?part"^^xsd:string)
ObjectPropertyAssertion(soap:hasPredicate_PredicateGroupElement
                        :endeffector-type-part :endeffector-type-part_group1)

//*****************************************
// 4 start soap:PredicateGroupElement endeffector-type-part_group1
Declaration(NamedIndividual(:endeffector-type-part_group1))
ClassAssertion(soap:PredicateGroupElement :endeffector-type-part_group1)
DataPropertyAssertion(soap:hasPredicateGroupElement_ReferenceName :endeffector-type-part_group1
                      "EndEffector"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_TargetName :endeffector-type-part_group1
                      "Part"^^xsd:NMTOKEN)
// 4 end soap:PredicateGroupElement
//*****************************************

// 3 end soap:Predicate
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_Predicate
                        :kiting-domain :endeffectorholder-holds-endeffector)

//*****************************************
// 3 start soap:Predicate endeffectorholder-holds-endeffector
Declaration(NamedIndividual(:endeffectorholder-holds-endeffector))
ClassAssertion(soap:Predicate :endeffectorholder-holds-endeffector)
DataPropertyAssertion(soap:hasPredicate_Description :endeffectorholder-holds-endeffector
                      ";TRUE iff ?endeffectorholder is holding endeffecor"^^xsd:string)
ObjectPropertyAssertion(soap:hasPredicate_PredicateGroupElement
                        :endeffectorholder-holds-endeffector :endeffectorholder-holds-endeffector_group1)

//*****************************************
// 4 start soap:PredicateGroupElement endeffectorholder-holds-endeffector_group1
Declaration(NamedIndividual(:endeffectorholder-holds-endeffector_group1))
ClassAssertion(soap:PredicateGroupElement :endeffectorholder-holds-endeffector_group1)
DataPropertyAssertion(soap:hasPredicateGroupElement_ReferenceName :endeffectorholder-holds-endeffector_group1
                      "EndEffectorHolder"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_TargetName :endeffectorholder-holds-endeffector_group1
                      "EndEffector"^^xsd:NMTOKEN)
// 4 end soap:PredicateGroupElement
//*****************************************

// 3 end soap:Predicate
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_Predicate
                        :kiting-domain :endeffectorholder-empty)

//*****************************************
// 3 start soap:Predicate endeffectorholder-empty
Declaration(NamedIndividual(:endeffectorholder-empty))
ClassAssertion(soap:Predicate :endeffectorholder-empty)
DataPropertyAssertion(soap:hasPredicate_Description :endeffectorholder-empty
                      ";TRUE iff ?endeffectorholder is empty (?endeffectorholder does not hold an endeffector)"^^xsd:string)
ObjectPropertyAssertion(soap:hasPredicate_PredicateGroupElement
                        :endeffectorholder-empty :endeffectorholder-empty_group1)

//*****************************************
// 4 start soap:PredicateGroupElement endeffectorholder-empty_group1
Declaration(NamedIndividual(:endeffectorholder-empty_group1))
ClassAssertion(soap:PredicateGroupElement :endeffectorholder-empty_group1)
DataPropertyAssertion(soap:hasPredicateGroupElement_ReferenceName :endeffectorholder-empty_group1
                      "EndEffectorHolder"^^xsd:NMTOKEN)
// 4 end soap:PredicateGroupElement
//*****************************************

// 3 end soap:Predicate
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_Predicate
                        :kiting-domain :endeffectorholder-location)

//*****************************************
// 3 start soap:Predicate endeffectorholder-location
Declaration(NamedIndividual(:endeffectorholder-location))
ClassAssertion(soap:Predicate :endeffectorholder-location)
DataPropertyAssertion(soap:hasPredicate_Description :endeffectorholder-location
                      ";TRUE iff ?endeffectorholder is in ?endeffectorchangingstation"^^xsd:string)
ObjectPropertyAssertion(soap:hasPredicate_PredicateGroupElement
                        :endeffectorholder-location :endeffectorholder-location_group1)

//*****************************************
// 4 start soap:PredicateGroupElement endeffectorholder-location_group1
Declaration(NamedIndividual(:endeffectorholder-location_group1))
ClassAssertion(soap:PredicateGroupElement :endeffectorholder-location_group1)
DataPropertyAssertion(soap:hasPredicateGroupElement_ReferenceName :endeffectorholder-location_group1
                      "EndEffectorHolder"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_TargetName :endeffectorholder-location_group1
                      "EndEffectorChangingStation"^^xsd:NMTOKEN)
// 4 end soap:PredicateGroupElement
//*****************************************

// 3 end soap:Predicate
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_Predicate
                        :kiting-domain :endeffectorchangingstation-contains-endeffectorholder)

//*****************************************
// 3 start soap:Predicate endeffectorchangingstation-contains-endeffectorholder
Declaration(NamedIndividual(:endeffectorchangingstation-contains-endeffectorholder))
ClassAssertion(soap:Predicate :endeffectorchangingstation-contains-endeffectorholder)
DataPropertyAssertion(soap:hasPredicate_Description :endeffectorchangingstation-contains-endeffectorholder
                      ";TRUE iff ?endeffectorchangingstation contains ?endeffectorholder"^^xsd:string)
ObjectPropertyAssertion(soap:hasPredicate_PredicateGroupElement
                        :endeffectorchangingstation-contains-endeffectorholder :endeffectorchangingstation-contains-endeffectorholder_group1)

//*****************************************
// 4 start soap:PredicateGroupElement endeffectorchangingstation-contains-endeffectorholder_group1
Declaration(NamedIndividual(:endeffectorchangingstation-contains-endeffectorholder_group1))
ClassAssertion(soap:PredicateGroupElement :endeffectorchangingstation-contains-endeffectorholder_group1)
DataPropertyAssertion(soap:hasPredicateGroupElement_ReferenceName :endeffectorchangingstation-contains-endeffectorholder_group1
                      "EndEffectorChangingStation"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_TargetName :endeffectorchangingstation-contains-endeffectorholder_group1
                      "EndEffectorHolder"^^xsd:NMTOKEN)
// 4 end soap:PredicateGroupElement
//*****************************************

// 3 end soap:Predicate
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_Predicate
                        :kiting-domain :found-part)

//*****************************************
// 3 start soap:Predicate found-part
Declaration(NamedIndividual(:found-part))
ClassAssertion(soap:Predicate :found-part)
DataPropertyAssertion(soap:hasPredicate_Description :found-part
                      ";TRUE if ?part is found in ?partstray"^^xsd:string)
ObjectPropertyAssertion(soap:hasPredicate_PredicateGroupElement
                        :found-part :found-part_group1)

//*****************************************
// 4 start soap:PredicateGroupElement found-part_group1
Declaration(NamedIndividual(:found-part_group1))
ClassAssertion(soap:PredicateGroupElement :found-part_group1)
DataPropertyAssertion(soap:hasPredicateGroupElement_ReferenceName :found-part_group1
                      "Part"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_TargetName :found-part_group1
                      "PartsTray"^^xsd:NMTOKEN)
// 4 end soap:PredicateGroupElement
//*****************************************

// 3 end soap:Predicate
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_Predicate
                        :kiting-domain :origin-part)

//*****************************************
// 3 start soap:Predicate origin-part
Declaration(NamedIndividual(:origin-part))
ClassAssertion(soap:Predicate :origin-part)
DataPropertyAssertion(soap:hasPredicate_Description :origin-part
                      ";TRUE if ?part is from ?partstray"^^xsd:string)
ObjectPropertyAssertion(soap:hasPredicate_PredicateGroupElement
                        :origin-part :origin-part_group1)

//*****************************************
// 4 start soap:PredicateGroupElement origin-part_group1
Declaration(NamedIndividual(:origin-part_group1))
ClassAssertion(soap:PredicateGroupElement :origin-part_group1)
DataPropertyAssertion(soap:hasPredicateGroupElement_ReferenceName :origin-part_group1
                      "Part"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_TargetName :origin-part_group1
                      "PartsTray"^^xsd:NMTOKEN)
// 4 end soap:PredicateGroupElement
//*****************************************

// 3 end soap:Predicate
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_Function
                        :kiting-domain :quantity-partstray)

//*****************************************
// 3 start soap:Function quantity-partstray
Declaration(NamedIndividual(:quantity-partstray))
ClassAssertion(soap:Function :quantity-partstray)
DataPropertyAssertion(soap:hasFunction_Description :quantity-partstray
                      ";Quantity of parts in ?partstray (quantity set in the init section in the problem file)"^^xsd:string)
DataPropertyAssertion(soap:hasFunction_ReferenceName :quantity-partstray
                      "PartsTray"^^xsd:NMTOKEN)
// 3 end soap:Function
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_Function
                        :kiting-domain :quantity-kit)

//*****************************************
// 3 start soap:Function quantity-kit
Declaration(NamedIndividual(:quantity-kit))
ClassAssertion(soap:Function :quantity-kit)
DataPropertyAssertion(soap:hasFunction_Description :quantity-kit
                      ";Quantity of parts from ?partstray that is in ?kit"^^xsd:string)
DataPropertyAssertion(soap:hasFunction_ReferenceName :quantity-kit
                      "Kit"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasFunction_TargetName :quantity-kit
                      "PartsTray"^^xsd:NMTOKEN)
// 3 end soap:Function
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_Function
                        :kiting-domain :capacity-kit)

//*****************************************
// 3 start soap:Function capacity-kit
Declaration(NamedIndividual(:capacity-kit))
ClassAssertion(soap:Function :capacity-kit)
DataPropertyAssertion(soap:hasFunction_Description :capacity-kit
                      ";Quantity of parts in ?partstray (quantity set in the init section in the problem file)"^^xsd:string)
DataPropertyAssertion(soap:hasFunction_ReferenceName :capacity-kit
                      "Kit"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasFunction_TargetName :capacity-kit
                      "PartsTray"^^xsd:NMTOKEN)
// 3 end soap:Function
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_AttachEndEffector
                        :kiting-domain :attach-endeffector)

//*****************************************
// 3 start soap:AttachEndEffector attach-endeffector
Declaration(NamedIndividual(:attach-endeffector))
ClassAssertion(soap:AttachEndEffector :attach-endeffector)
DataPropertyAssertion(soap:hasAttachEndEffector_RobotParameter :attach-endeffector
                      "Robot"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasAttachEndEffector_EndEffectorParameter :attach-endeffector
                      "Part"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasAttachEndEffector_EndEffectorHolderParameter :attach-endeffector
                      "PartsTray"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasAttachEndEffector_EndEffectorChangingStationParameter :attach-endeffector
                      "EndEffector"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasAttachEndEffector_Precondition
                        :attach-endeffector :attach-endeffector_precondition)

//*****************************************
// 4 start soap:Precondition attach-endeffector_precondition
Declaration(NamedIndividual(:attach-endeffector_precondition))
ClassAssertion(soap:Precondition :attach-endeffector_precondition)
ObjectPropertyAssertion(soap:hasPrecondition_Predicate
                        :attach-endeffector_precondition :endeffector-location-endeffectorholder)
ObjectPropertyAssertion(soap:hasPrecondition_Predicate
                        :attach-endeffector_precondition :robot-with-no-endeffector)
ObjectPropertyAssertion(soap:hasPrecondition_Predicate
                        :attach-endeffector_precondition :endeffectorholder-holds-endeffector)
ObjectPropertyAssertion(soap:hasPrecondition_Predicate
                        :attach-endeffector_precondition :endeffectorholder-location)
ObjectPropertyAssertion(soap:hasPrecondition_Predicate
                        :attach-endeffector_precondition :endeffectorchangingstation-contains-endeffectorholder)
// 4 end soap:Precondition
//*****************************************

ObjectPropertyAssertion(soap:hasAttachEndEffector_Effect
                        :attach-endeffector :attach-endeffector_effect)

//*****************************************
// 4 start soap:Effect attach-endeffector_effect
Declaration(NamedIndividual(:attach-endeffector_effect))
ClassAssertion(soap:Effect :attach-endeffector_effect)
ObjectPropertyAssertion(soap:hasEffect_Predicate
                        :attach-endeffector_effect :robot-empty)
ObjectPropertyAssertion(soap:hasEffect_Predicate
                        :attach-endeffector_effect :endeffector-location-robot)
ObjectPropertyAssertion(soap:hasEffect_Predicate
                        :attach-endeffector_effect :robot-with-endeffector)
ObjectPropertyAssertion(soap:hasEffect_Predicate
                        :attach-endeffector_effect :endeffectorholder-empty)
ObjectPropertyAssertion(soap:hasEffect_NotPredicate
                        :attach-endeffector_effect :endeffector-location-endeffectorholder)
ObjectPropertyAssertion(soap:hasEffect_NotPredicate
                        :attach-endeffector_effect :endeffectorholder-holds-endeffector)
ObjectPropertyAssertion(soap:hasEffect_NotPredicate
                        :attach-endeffector_effect :robot-with-no-endeffector)
// 4 end soap:Effect
//*****************************************

// 3 end soap:AttachEndEffector
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_CreateKit
                        :kiting-domain :create-kit)

//*****************************************
// 3 start soap:CreateKit create-kit
Declaration(NamedIndividual(:create-kit))
ClassAssertion(soap:CreateKit :create-kit)
DataPropertyAssertion(soap:hasCreateKit_KitParameter :create-kit
                      "Kit"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasCreateKit_KitTrayParameter :create-kit
                      "KitTray"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasCreateKit_WorkTableParameter :create-kit
                      "WorkTable"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasCreateKit_Precondition
                        :create-kit :create-kit_precondition)

//*****************************************
// 4 start soap:Precondition create-kit_precondition
Declaration(NamedIndividual(:create-kit_precondition))
ClassAssertion(soap:Precondition :create-kit_precondition)
ObjectPropertyAssertion(soap:hasPrecondition_Predicate
                        :create-kit_precondition :on-worktable-kittray)
// 4 end soap:Precondition
//*****************************************

ObjectPropertyAssertion(soap:hasCreateKit_Effect
                        :create-kit :create-kit_effect)

//*****************************************
// 4 start soap:Effect create-kit_effect
Declaration(NamedIndividual(:create-kit_effect))
ClassAssertion(soap:Effect :create-kit_effect)
ObjectPropertyAssertion(soap:hasEffect_Predicate
                        :create-kit_effect :on-worktable-kit)
ObjectPropertyAssertion(soap:hasEffect_Predicate
                        :create-kit_effect :kit-location-worktable)
ObjectPropertyAssertion(soap:hasEffect_NotPredicate
                        :create-kit_effect :on-worktable-kittray)
// 4 end soap:Effect
//*****************************************

// 3 end soap:CreateKit
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_DetachEndEffector
                        :kiting-domain :detach-endeffector)

//*****************************************
// 3 start soap:DetachEndEffector detach-endeffector
Declaration(NamedIndividual(:detach-endeffector))
ClassAssertion(soap:DetachEndEffector :detach-endeffector)
DataPropertyAssertion(soap:hasDetachEndEffector_RobotParameter :detach-endeffector
                      "Robot"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasDetachEndEffector_EndEffectorParameter :detach-endeffector
                      "Part"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasDetachEndEffector_EndEffectorHolderParameter :detach-endeffector
                      "PartsTray"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasDetachEndEffector_EndEffectorChangingStationParameter :detach-endeffector
                      "EndEffector"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasDetachEndEffector_Precondition
                        :detach-endeffector :detach-endeffector_precondition)

//*****************************************
// 4 start soap:Precondition detach-endeffector_precondition
Declaration(NamedIndividual(:detach-endeffector_precondition))
ClassAssertion(soap:Precondition :detach-endeffector_precondition)
ObjectPropertyAssertion(soap:hasPrecondition_Predicate
                        :detach-endeffector_precondition :endeffector-location-robot)
ObjectPropertyAssertion(soap:hasPrecondition_Predicate
                        :detach-endeffector_precondition :robot-with-endeffector)
ObjectPropertyAssertion(soap:hasPrecondition_Predicate
                        :detach-endeffector_precondition :robot-empty)
ObjectPropertyAssertion(soap:hasPrecondition_Predicate
                        :detach-endeffector_precondition :endeffectorholder-location)
ObjectPropertyAssertion(soap:hasPrecondition_Predicate
                        :detach-endeffector_precondition :endeffectorchangingstation-contains-endeffectorholder)
ObjectPropertyAssertion(soap:hasPrecondition_Predicate
                        :detach-endeffector_precondition :endeffectorholder-empty)
// 4 end soap:Precondition
//*****************************************

ObjectPropertyAssertion(soap:hasDetachEndEffector_Effect
                        :detach-endeffector :detach-endeffector_effect)

//*****************************************
// 4 start soap:Effect detach-endeffector_effect
Declaration(NamedIndividual(:detach-endeffector_effect))
ClassAssertion(soap:Effect :detach-endeffector_effect)
ObjectPropertyAssertion(soap:hasEffect_Predicate
                        :detach-endeffector_effect :endeffector-location-endeffectorholder)
ObjectPropertyAssertion(soap:hasEffect_Predicate
                        :detach-endeffector_effect :endeffectorholder-holds-endeffector)
ObjectPropertyAssertion(soap:hasEffect_Predicate
                        :detach-endeffector_effect :robot-with-no-endeffector)
ObjectPropertyAssertion(soap:hasEffect_NotPredicate
                        :detach-endeffector_effect :endeffector-location-robot)
ObjectPropertyAssertion(soap:hasEffect_NotPredicate
                        :detach-endeffector_effect :robot-with-endeffector)
ObjectPropertyAssertion(soap:hasEffect_NotPredicate
                        :detach-endeffector_effect :endeffectorholder-empty)
// 4 end soap:Effect
//*****************************************

// 3 end soap:DetachEndEffector
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_TakePart
                        :kiting-domain :take-part)

//*****************************************
// 3 start soap:TakePart take-part
Declaration(NamedIndividual(:take-part))
ClassAssertion(soap:TakePart :take-part)
DataPropertyAssertion(soap:hasTakePart_RobotParameter :take-part
                      "Robot"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasTakePart_PartParameter :take-part
                      "Part"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasTakePart_PartsTrayParameter :take-part
                      "PartsTray"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasTakePart_EndEffectorParameter :take-part
                      "EndEffector"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasTakePart_Precondition
                        :take-part :take-part_precondition)

//*****************************************
// 4 start soap:Precondition take-part_precondition
Declaration(NamedIndividual(:take-part_precondition))
ClassAssertion(soap:Precondition :take-part_precondition)
ObjectPropertyAssertion(soap:hasPrecondition_Predicate
                        :take-part_precondition :part-location-partstray)
ObjectPropertyAssertion(soap:hasPrecondition_Predicate
                        :take-part_precondition :endeffector-location-robot)
ObjectPropertyAssertion(soap:hasPrecondition_Predicate
                        :take-part_precondition :robot-empty)
ObjectPropertyAssertion(soap:hasPrecondition_Predicate
                        :take-part_precondition :robot-with-endeffector)
ObjectPropertyAssertion(soap:hasPrecondition_Predicate
                        :take-part_precondition :endeffector-type-part)
ObjectPropertyAssertion(soap:hasPrecondition_Predicate
                        :take-part_precondition :found-part)
ObjectPropertyAssertion(soap:hasPrecondition_Predicate
                        :take-part_precondition :partstray-not-empty)
// 4 end soap:Precondition
//*****************************************

ObjectPropertyAssertion(soap:hasTakePart_Effect
                        :take-part :take-part_effect)

//*****************************************
// 4 start soap:Effect take-part_effect
Declaration(NamedIndividual(:take-part_effect))
ClassAssertion(soap:Effect :take-part_effect)
ObjectPropertyAssertion(soap:hasEffect_Predicate
                        :take-part_effect :part-location-robot)
ObjectPropertyAssertion(soap:hasEffect_Predicate
                        :take-part_effect :robot-holds-part)
ObjectPropertyAssertion(soap:hasEffect_NotPredicate
                        :take-part_effect :part-location-partstray)
ObjectPropertyAssertion(soap:hasEffect_NotPredicate
                        :take-part_effect :robot-empty)
ObjectPropertyAssertion(soap:hasEffect_FunctionOperation
                        :take-part_effect :decrease-quantity-partstray)

//*****************************************
// 5 start soap:FunctionOperation decrease-quantity-partstray
Declaration(NamedIndividual(:decrease-quantity-partstray))
ClassAssertion(soap:FunctionOperation :decrease-quantity-partstray)
ObjectPropertyAssertion(soap:hasFunctionOperation_Function
                        :decrease-quantity-partstray :quantity-partstray)
DataPropertyAssertion(soap:hasFunctionOperation_Expression :decrease-quantity-partstray
                      "decrease"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasFunctionOperation_Value :decrease-quantity-partstray
                      "1"^^xsd:positiveInteger)
// 5 end soap:FunctionOperation
//*****************************************

// 4 end soap:Effect
//*****************************************

// 3 end soap:TakePart
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_TakeKit
                        :kiting-domain :take-kit)

//*****************************************
// 3 start soap:TakeKit take-kit
Declaration(NamedIndividual(:take-kit))
ClassAssertion(soap:TakeKit :take-kit)
DataPropertyAssertion(soap:hasTakeKit_RobotParameter :take-kit
                      "Robot"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasTakeKit_KitParameter :take-kit
                      "Part"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasTakeKit_EndEffectorParameter :take-kit
                      "EndEffector"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasTakeKit_Precondition
                        :take-kit :take-kit_precondition)

//*****************************************
// 4 start soap:Precondition take-kit_precondition
Declaration(NamedIndividual(:take-kit_precondition))
ClassAssertion(soap:Precondition :take-kit_precondition)
ObjectPropertyAssertion(soap:hasPrecondition_Predicate
                        :take-kit_precondition :kit-location-worktable)
ObjectPropertyAssertion(soap:hasPrecondition_Predicate
                        :take-kit_precondition :robot-empty)
ObjectPropertyAssertion(soap:hasPrecondition_Predicate
                        :take-kit_precondition :on-worktable-kit)
ObjectPropertyAssertion(soap:hasPrecondition_Predicate
                        :take-kit_precondition :robot-with-endeffector)
ObjectPropertyAssertion(soap:hasPrecondition_Predicate
                        :take-kit_precondition :endeffector-type-kit)
// 4 end soap:Precondition
//*****************************************

ObjectPropertyAssertion(soap:hasTakeKit_Effect
                        :take-kit :take-kit_effect)

//*****************************************
// 4 start soap:Effect take-kit_effect
Declaration(NamedIndividual(:take-kit_effect))
ClassAssertion(soap:Effect :take-kit_effect)
ObjectPropertyAssertion(soap:hasEffect_Predicate
                        :take-kit_effect :kit-location-robot)
ObjectPropertyAssertion(soap:hasEffect_Predicate
                        :take-kit_effect :robot-holds-kit)
ObjectPropertyAssertion(soap:hasEffect_Predicate
                        :take-kit_effect :worktable-empty)
ObjectPropertyAssertion(soap:hasEffect_NotPredicate
                        :take-kit_effect :kit-location-worktable)
ObjectPropertyAssertion(soap:hasEffect_NotPredicate
                        :take-kit_effect :robot-empty)
ObjectPropertyAssertion(soap:hasEffect_NotPredicate
                        :take-kit_effect :on-worktable-kit)
// 4 end soap:Effect
//*****************************************

// 3 end soap:TakeKit
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_TakeKitTray
                        :kiting-domain :take-kittray)

//*****************************************
// 3 start soap:TakeKitTray take-kittray
Declaration(NamedIndividual(:take-kittray))
ClassAssertion(soap:TakeKitTray :take-kittray)
DataPropertyAssertion(soap:hasTakeKitTray_RobotParameter :take-kittray
                      "Robot"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasTakeKitTray_KitTrayParameter :take-kittray
                      "KitTray"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasTakeKitTray_LargeBoxWithEmptyKitTraysParameter :take-kittray
                      "LargeBoxWithEmptyKitTrays"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasTakeKitTray_EndEffectorParameter :take-kittray
                      "EndEffector"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasTakeKitTray_Precondition
                        :take-kittray :take-kittray_precondition)

//*****************************************
// 4 start soap:Precondition take-kittray_precondition
Declaration(NamedIndividual(:take-kittray_precondition))
ClassAssertion(soap:Precondition :take-kittray_precondition)
ObjectPropertyAssertion(soap:hasPrecondition_Predicate
                        :take-kittray_precondition :robot-empty)
ObjectPropertyAssertion(soap:hasPrecondition_Predicate
                        :take-kittray_precondition :lbwekt-not-empty)
ObjectPropertyAssertion(soap:hasPrecondition_Predicate
                        :take-kittray_precondition :robot-with-endeffector)
ObjectPropertyAssertion(soap:hasPrecondition_Predicate
                        :take-kittray_precondition :kittray-location-lbwekt)
ObjectPropertyAssertion(soap:hasPrecondition_Predicate
                        :take-kittray_precondition :endeffector-location-robot)
ObjectPropertyAssertion(soap:hasPrecondition_Predicate
                        :take-kittray_precondition :worktable-empty)
ObjectPropertyAssertion(soap:hasPrecondition_Predicate
                        :take-kittray_precondition :endeffector-type-kittray)
// 4 end soap:Precondition
//*****************************************

ObjectPropertyAssertion(soap:hasTakeKitTray_Effect
                        :take-kittray :take-kittray_effect)

//*****************************************
// 4 start soap:Effect take-kittray_effect
Declaration(NamedIndividual(:take-kittray_effect))
ClassAssertion(soap:Effect :take-kittray_effect)
ObjectPropertyAssertion(soap:hasEffect_Predicate
                        :take-kittray_effect :robot-holds-kittray)
ObjectPropertyAssertion(soap:hasEffect_Predicate
                        :take-kittray_effect :kittray-location-robot)
ObjectPropertyAssertion(soap:hasEffect_NotPredicate
                        :take-kittray_effect :robot-empty)
ObjectPropertyAssertion(soap:hasEffect_NotPredicate
                        :take-kittray_effect :kittray-location-lbwekt)
// 4 end soap:Effect
//*****************************************

// 3 end soap:TakeKitTray
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_PutPart
                        :kiting-domain :put-part)

//*****************************************
// 3 start soap:PutPart put-part
Declaration(NamedIndividual(:put-part))
ClassAssertion(soap:PutPart :put-part)
DataPropertyAssertion(soap:hasPutPart_RobotParameter :put-part
                      "Robot"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPutPart_PartParameter :put-part
                      "Part"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPutPart_KitParameter :put-part
                      "Kit"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPutPart_PartsTrayParameter :put-part
                      "PartsTray"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasPutPart_Precondition
                        :put-part :put-part_precondition)

//*****************************************
// 4 start soap:Precondition put-part_precondition
Declaration(NamedIndividual(:put-part_precondition))
ClassAssertion(soap:Precondition :put-part_precondition)
ObjectPropertyAssertion(soap:hasPrecondition_Predicate
                        :put-part_precondition :part-location-robot)
ObjectPropertyAssertion(soap:hasPrecondition_Predicate
                        :put-part_precondition :robot-holds-part)
ObjectPropertyAssertion(soap:hasPrecondition_Predicate
                        :put-part_precondition :on-worktable-kit)
ObjectPropertyAssertion(soap:hasPrecondition_Predicate
                        :put-part_precondition :origin-part)
ObjectPropertyAssertion(soap:hasPrecondition_F1LessF2
                        :put-part_precondition :quantity-kit_To_capacity-kit_Less)

//*****************************************
// 5 start soap:FunctionToFunctionLess quantity-kit_To_capacity-kit_Less
Declaration(NamedIndividual(:quantity-kit_To_capacity-kit_Less))
ClassAssertion(soap:FunctionToFunctionLess :quantity-kit_To_capacity-kit_Less)
ObjectPropertyAssertion(soap:hasFunctionToFunctionBool_F1
                        :quantity-kit_To_capacity-kit_Less :quantity-kit)
ObjectPropertyAssertion(soap:hasFunctionToFunctionBool_F2
                        :quantity-kit_To_capacity-kit_Less :capacity-kit)
// 5 end soap:FunctionToFunctionLess
//*****************************************

// 4 end soap:Precondition
//*****************************************

ObjectPropertyAssertion(soap:hasPutPart_Effect
                        :put-part :put-part_effect)

//*****************************************
// 4 start soap:Effect put-part_effect
Declaration(NamedIndividual(:put-part_effect))
ClassAssertion(soap:Effect :put-part_effect)
ObjectPropertyAssertion(soap:hasEffect_Predicate
                        :put-part_effect :part-location-kit)
ObjectPropertyAssertion(soap:hasEffect_Predicate
                        :put-part_effect :robot-empty)
ObjectPropertyAssertion(soap:hasEffect_NotPredicate
                        :put-part_effect :part-location-robot)
ObjectPropertyAssertion(soap:hasEffect_NotPredicate
                        :put-part_effect :robot-holds-part)
ObjectPropertyAssertion(soap:hasEffect_NotPredicate
                        :put-part_effect :found-part)
ObjectPropertyAssertion(soap:hasEffect_FunctionOperation
                        :put-part_effect :increase-quantity-kit)

//*****************************************
// 5 start soap:FunctionOperation increase-quantity-kit
Declaration(NamedIndividual(:increase-quantity-kit))
ClassAssertion(soap:FunctionOperation :increase-quantity-kit)
ObjectPropertyAssertion(soap:hasFunctionOperation_Function
                        :increase-quantity-kit :quantity-kit)
DataPropertyAssertion(soap:hasFunctionOperation_Expression :increase-quantity-kit
                      "increase"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasFunctionOperation_Value :increase-quantity-kit
                      "1"^^xsd:positiveInteger)
// 5 end soap:FunctionOperation
//*****************************************

// 4 end soap:Effect
//*****************************************

// 3 end soap:PutPart
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_PutKit
                        :kiting-domain :put-kit)

//*****************************************
// 3 start soap:PutKit put-kit
Declaration(NamedIndividual(:put-kit))
ClassAssertion(soap:PutKit :put-kit)
DataPropertyAssertion(soap:hasPutKit_RobotParameter :put-kit
                      "Robot"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPutKit_KitParameter :put-kit
                      "Part"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPutKit_LargeBoxWithKitsParameter :put-kit
                      "Kit"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasPutKit_Precondition
                        :put-kit :put-kit_precondition)

//*****************************************
// 4 start soap:Precondition put-kit_precondition
Declaration(NamedIndividual(:put-kit_precondition))
ClassAssertion(soap:Precondition :put-kit_precondition)
ObjectPropertyAssertion(soap:hasPrecondition_Predicate
                        :put-kit_precondition :kit-location-robot)
ObjectPropertyAssertion(soap:hasPrecondition_Predicate
                        :put-kit_precondition :robot-holds-kit)
ObjectPropertyAssertion(soap:hasPrecondition_Predicate
                        :put-kit_precondition :lbwk-not-full)
// 4 end soap:Precondition
//*****************************************

ObjectPropertyAssertion(soap:hasPutKit_Effect
                        :put-kit :put-kit_effect)

//*****************************************
// 4 start soap:Effect put-kit_effect
Declaration(NamedIndividual(:put-kit_effect))
ClassAssertion(soap:Effect :put-kit_effect)
ObjectPropertyAssertion(soap:hasEffect_Predicate
                        :put-kit_effect :kit-location-lbwk)
ObjectPropertyAssertion(soap:hasEffect_Predicate
                        :put-kit_effect :robot-empty)
ObjectPropertyAssertion(soap:hasEffect_NotPredicate
                        :put-kit_effect :kit-location-robot)
ObjectPropertyAssertion(soap:hasEffect_NotPredicate
                        :put-kit_effect :robot-holds-kit)
// 4 end soap:Effect
//*****************************************

// 3 end soap:PutKit
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_PutKitTray
                        :kiting-domain :put-kittray)

//*****************************************
// 3 start soap:PutKitTray put-kittray
Declaration(NamedIndividual(:put-kittray))
ClassAssertion(soap:PutKitTray :put-kittray)
DataPropertyAssertion(soap:hasPutKitTray_RobotParameter :put-kittray
                      "Robot"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPutKitTray_KitTrayParameter :put-kittray
                      "KitTray"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasPutKitTray_Precondition
                        :put-kittray :put-kittray_precondition)

//*****************************************
// 4 start soap:Precondition put-kittray_precondition
Declaration(NamedIndividual(:put-kittray_precondition))
ClassAssertion(soap:Precondition :put-kittray_precondition)
ObjectPropertyAssertion(soap:hasPrecondition_Predicate
                        :put-kittray_precondition :kittray-location-robot)
ObjectPropertyAssertion(soap:hasPrecondition_Predicate
                        :put-kittray_precondition :robot-holds-kittray)
// 4 end soap:Precondition
//*****************************************

ObjectPropertyAssertion(soap:hasPutKitTray_Effect
                        :put-kittray :put-kittray_effect)

//*****************************************
// 4 start soap:Effect put-kittray_effect
Declaration(NamedIndividual(:put-kittray_effect))
ClassAssertion(soap:Effect :put-kittray_effect)
ObjectPropertyAssertion(soap:hasEffect_Predicate
                        :put-kittray_effect :kittray-location-worktable)
ObjectPropertyAssertion(soap:hasEffect_Predicate
                        :put-kittray_effect :robot-empty)
ObjectPropertyAssertion(soap:hasEffect_Predicate
                        :put-kittray_effect :on-worktable-kittray)
ObjectPropertyAssertion(soap:hasEffect_NotPredicate
                        :put-kittray_effect :kittray-location-robot)
ObjectPropertyAssertion(soap:hasEffect_NotPredicate
                        :put-kittray_effect :robot-holds-kittray)
ObjectPropertyAssertion(soap:hasEffect_NotPredicate
                        :put-kittray_effect :worktable-empty)
// 4 end soap:Effect
//*****************************************

// 3 end soap:PutKitTray
//*****************************************

// 2 end soap:Domain
//*****************************************

ObjectPropertyAssertion(soap:hasSOAP_InContactWith
                        :soap :InContactWith)

//*****************************************
// 2 start soap:InContactWith InContactWith
Declaration(NamedIndividual(:InContactWith))
ClassAssertion(soap:InContactWith :InContactWith)
DataPropertyAssertion(soap:hasStateRelation_RCC8Set :InContactWith
                      "X-EC or Y-EC or Z-EC"^^xsd:string)
// 2 end soap:InContactWith
//*****************************************

ObjectPropertyAssertion(soap:hasSOAP_UnderWithContact
                        :soap :UnderWithContact)

//*****************************************
// 2 start soap:UnderWithContact UnderWithContact
Declaration(NamedIndividual(:UnderWithContact))
ClassAssertion(soap:UnderWithContact :UnderWithContact)
DataPropertyAssertion(soap:hasStateRelation_RCC8Set :UnderWithContact
                      "Z-EC and Z-Minus and (X-NTPP or X-NTPPi or X-PO or X-TPP or X-TPPi) and (Y-NTPP or Y-NTPPi or Y-PO or Y-TPP or Y-TPPi)"^^xsd:string)
// 2 end soap:UnderWithContact
//*****************************************

ObjectPropertyAssertion(soap:hasSOAP_PartiallyIn
                        :soap :PartiallyIn)

//*****************************************
// 2 start soap:PartiallyIn PartiallyIn
Declaration(NamedIndividual(:PartiallyIn))
ClassAssertion(soap:PartiallyIn :PartiallyIn)
DataPropertyAssertion(soap:hasStateRelation_RCC8Set :PartiallyIn
                      "(Z-Plus and (Z-NTPP or Z-NTPPi or Z-PO or Z-TPP or Z-TPPi)) and (X-NTPP or X-NTPPi or X-TPP or X-TPPi) and (Y-NTPP or Y-NTPPi or Y-TPP or Y-TPPi)"^^xsd:string)
// 2 end soap:PartiallyIn
//*****************************************

ObjectPropertyAssertion(soap:hasSOAP_OnTopWithContact
                        :soap :OnTopWithContact)

//*****************************************
// 2 start soap:OnTopWithContact OnTopWithContact
Declaration(NamedIndividual(:OnTopWithContact))
ClassAssertion(soap:OnTopWithContact :OnTopWithContact)
DataPropertyAssertion(soap:hasStateRelation_RCC8Set :OnTopWithContact
                      "Z-EC and Z-Plus and (X-NTPP or X-NTPPi or X-PO or X-TPP or X-TPPi) and (Y-NTPP or Y-NTPPi or Y-PO or Y-TPP or Y-TPPi)"^^xsd:string)
// 2 end soap:OnTopWithContact
//*****************************************

// 1 end soap:SOAP
//*****************************************


//*****************************************
// ktw:BoxyShape individuals 
DifferentIndividuals(
 :shape_changing_station_base
 :shape_kit_box
 :shape_kit_tray
 :shape_part_a
 :shape_part_b
 :shape_part_c
 :shape_parts_tray)

//*****************************************
// soap:Effect individuals 
DifferentIndividuals(
 :attach-endeffector_effect
 :create-kit_effect
 :detach-endeffector_effect
 :put-kit_effect
 :put-kittray_effect
 :put-part_effect
 :take-kit_effect
 :take-kittray_effect
 :take-part_effect)

//*****************************************
// ktw:EndEffectorHolder individuals 
DifferentIndividuals(
 :part_gripper_holder
 :tray_gripper_holder)

//*****************************************
// soap:FunctionOperation individuals 
DifferentIndividuals(
 :decrease-quantity-partstray
 :increase-quantity-kit)

//*****************************************
// soap:Function individuals 
DifferentIndividuals(
 :capacity-kit
 :quantity-kit
 :quantity-partstray)

//*****************************************
// ktw:KitDesign individuals 
DifferentIndividuals(
 :kit_design_a2b1c1
 :kit_design_a2b2c1)

//*****************************************
// ktw:KitTray individuals 
DifferentIndividuals(
 :kit_tray_1
 :kit_tray_2
 :kit_tray_3)

//*****************************************
// ktw:LargeContainer individuals 
DifferentIndividuals(
 :empty_kit_tray_box
 :finished_kit_box)

//*****************************************
// ktw:PartRefAndPose individuals 
DifferentIndividuals(
 :part_ref_and_pose_kit_a2b1c1_a_1
 :part_ref_and_pose_kit_a2b1c1_a_2
 :part_ref_and_pose_kit_a2b1c1_b_1
 :part_ref_and_pose_kit_a2b1c1_c_1
 :part_ref_and_pose_kit_a2b2c1_a_1
 :part_ref_and_pose_kit_a2b2c1_a_2
 :part_ref_and_pose_kit_a2b2c1_b_1
 :part_ref_and_pose_kit_a2b2c1_b_2
 :part_ref_and_pose_kit_a2b2c1_c_1)

//*****************************************
// ktw:Part individuals 
DifferentIndividuals(
 :part_a_1
 :part_a_2
 :part_a_3
 :part_a_4
 :part_b_1
 :part_b_2
 :part_b_3
 :part_b_4
 :part_b_5
 :part_b_6
 :part_b_7
 :part_b_8
 :part_c_1
 :part_c_2
 :part_c_3
 :part_c_4
 :part_c_5
 :part_c_6
 :part_c_7
 :part_c_8)

//*****************************************
// ktw:PartsTray individuals 
DifferentIndividuals(
 :part_a_tray
 :part_b_tray
 :part_c_tray)

//*****************************************
// ktw:Point individuals 
DifferentIndividuals(
 :changing_station_base_point
 :changing_station_point
 :empty_kit_tray_box_point
 :empty_kit_tray_supply_point
 :finished_kit_box_point
 :finished_kit_receiver_point
 :kit_tray_1_point
 :kit_tray_2_point
 :kit_tray_3_point
 :part_a_1_point
 :part_a_2_point
 :part_a_3_point
 :part_a_4_point
 :part_a_tray_point
 :part_b_1_point
 :part_b_2_point
 :part_b_3_point
 :part_b_4_point
 :part_b_5_point
 :part_b_6_point
 :part_b_7_point
 :part_b_8_point
 :part_b_tray_point
 :part_c_1_point
 :part_c_2_point
 :part_c_3_point
 :part_c_4_point
 :part_c_5_point
 :part_c_6_point
 :part_c_7_point
 :part_c_8_point
 :part_c_tray_point
 :part_gripper_holder_point
 :part_gripper_point
 :point_kit_a2b1c1_a_1
 :point_kit_a2b1c1_a_2
 :point_kit_a2b1c1_b_1
 :point_kit_a2b1c1_c_1
 :point_kit_a2b2c1_a_1
 :point_kit_a2b2c1_a_2
 :point_kit_a2b2c1_b_1
 :point_kit_a2b2c1_b_2
 :point_kit_a2b2c1_c_1
 :point_max
 :point_min
 :robot_point
 :tray_gripper_holder_point
 :work_table_point)

//*****************************************
// ktw:PoseLocationIn individuals 
DifferentIndividuals(
 :part_a_1_pose
 :part_a_2_pose
 :part_a_3_pose
 :part_a_4_pose
 :part_b_1_pose
 :part_b_2_pose
 :part_b_3_pose
 :part_b_4_pose
 :part_b_5_pose
 :part_b_6_pose
 :part_b_7_pose
 :part_b_8_pose
 :part_c_1_pose
 :part_c_2_pose
 :part_c_3_pose
 :part_c_4_pose
 :part_c_5_pose
 :part_c_6_pose
 :part_c_7_pose
 :part_c_8_pose)

//*****************************************
// ktw:PoseOnlyLocation individuals 
DifferentIndividuals(
 :changing_station_base_pose
 :changing_station_pose
 :empty_kit_tray_box_pose
 :empty_kit_tray_supply_pose
 :finished_kit_box_pose
 :finished_kit_receiver_pose
 :kit_tray_1_pose
 :kit_tray_2_pose
 :kit_tray_3_pose
 :part_a_tray_pose
 :part_b_tray_pose
 :part_c_tray_pose
 :part_gripper_holder_pose
 :part_gripper_pose
 :robot_pose
 :tray_gripper_holder_pose
 :work_table_pose)

//*****************************************
// soap:Precondition individuals 
DifferentIndividuals(
 :attach-endeffector_precondition
 :create-kit_precondition
 :detach-endeffector_precondition
 :put-kit_precondition
 :put-kittray_precondition
 :put-part_precondition
 :take-kit_precondition
 :take-kittray_precondition
 :take-part_precondition)

//*****************************************
// soap:PredicateGroupElement individuals 
DifferentIndividuals(
 :endeffector-location-endeffectorholder_group1
 :endeffector-location-robot_group1
 :endeffector-type-kit_group1
 :endeffector-type-kittray_group1
 :endeffector-type-part_group1
 :endeffectorchangingstation-contains-endeffectorholder_group1
 :endeffectorholder-empty_group1
 :endeffectorholder-holds-endeffector_group1
 :endeffectorholder-location_group1
 :found-part_group1
 :kit-location-lbwk_group1
 :kit-location-robot_group1
 :kit-location-worktable_group1
 :kittray-location-lbwekt_group1
 :kittray-location-robot_group1
 :kittray-location-worktable_group1
 :lbwekt-not-empty_group1
 :lbwk-not-full_group1
 :on-worktable-kit_group1
 :on-worktable-kittray_group1
 :origin-part_group1
 :part-location-kit_group1
 :part-location-partstray_group1
 :part-location-robot_group1
 :part-location-robot_group2
 :partstray-not-empty_group1
 :robot-empty_group1
 :robot-holds-kit_group1
 :robot-holds-kittray_group1
 :robot-holds-part_group1
 :robot-holds-part_group2
 :robot-with-endeffector_group1
 :robot-with-no-endeffector_group1
 :worktable-empty_group1)

//*****************************************
// soap:Predicate individuals 
DifferentIndividuals(
 :endeffector-location-endeffectorholder
 :endeffector-location-robot
 :endeffector-type-kit
 :endeffector-type-kittray
 :endeffector-type-part
 :endeffectorchangingstation-contains-endeffectorholder
 :endeffectorholder-empty
 :endeffectorholder-holds-endeffector
 :endeffectorholder-location
 :found-part
 :kit-location-lbwk
 :kit-location-robot
 :kit-location-worktable
 :kittray-location-lbwekt
 :kittray-location-robot
 :kittray-location-worktable
 :lbwekt-not-empty
 :lbwk-not-full
 :on-worktable-kit
 :on-worktable-kittray
 :origin-part
 :part-location-kit
 :part-location-partstray
 :part-location-robot
 :partstray-not-empty
 :robot-empty
 :robot-holds-kit
 :robot-holds-kittray
 :robot-holds-part
 :robot-with-endeffector
 :robot-with-no-endeffector
 :worktable-empty)

//*****************************************
// ktw:StockKeepingUnit individuals 
DifferentIndividuals(
 :stock_keeping_unit_kit_box
 :stock_keeping_unit_kit_tray
 :stock_keeping_unit_part_a
 :stock_keeping_unit_part_b
 :stock_keeping_unit_part_c
 :stock_keeping_unit_parts_tray)

//*****************************************
// ktw:VacuumEffectorSingleCup individuals 
DifferentIndividuals(
 :part_gripper
 :tray_gripper)

//*****************************************
// ktw:Vector individuals 
DifferentIndividuals(
 :changing_station_base_x_axis
 :changing_station_base_z_axis
 :changing_station_x_axis
 :changing_station_z_axis
 :empty_kit_tray_box_x_axis
 :empty_kit_tray_box_z_axis
 :empty_kit_tray_supply_x_axis
 :empty_kit_tray_supply_z_axis
 :finished_kit_box_x_axis
 :finished_kit_box_z_axis
 :finished_kit_receiver_x_axis
 :finished_kit_receiver_z_axis
 :kit_tray_1_x_axis
 :kit_tray_1_z_axis
 :kit_tray_2_x_axis
 :kit_tray_2_z_axis
 :kit_tray_3_x_axis
 :kit_tray_3_z_axis
 :part_a_1_x_axis
 :part_a_1_z_axis
 :part_a_2_x_axis
 :part_a_2_z_axis
 :part_a_3_x_axis
 :part_a_3_z_axis
 :part_a_4_x_axis
 :part_a_4_z_axis
 :part_a_tray_x_axis
 :part_a_tray_z_axis
 :part_b_1_x_axis
 :part_b_1_z_axis
 :part_b_2_x_axis
 :part_b_2_z_axis
 :part_b_3_x_axis
 :part_b_3_z_axis
 :part_b_4_x_axis
 :part_b_4_z_axis
 :part_b_5_x_axis
 :part_b_5_z_axis
 :part_b_6_x_axis
 :part_b_6_z_axis
 :part_b_7_x_axis
 :part_b_7_z_axis
 :part_b_8_x_axis
 :part_b_8_z_axis
 :part_b_tray_x_axis
 :part_b_tray_z_axis
 :part_c_1_x_axis
 :part_c_1_z_axis
 :part_c_2_x_axis
 :part_c_2_z_axis
 :part_c_3_x_axis
 :part_c_3_z_axis
 :part_c_4_x_axis
 :part_c_4_z_axis
 :part_c_5_x_axis
 :part_c_5_z_axis
 :part_c_6_x_axis
 :part_c_6_z_axis
 :part_c_7_x_axis
 :part_c_7_z_axis
 :part_c_8_x_axis
 :part_c_8_z_axis
 :part_c_tray_x_axis
 :part_c_tray_z_axis
 :part_gripper_holder_x_axis
 :part_gripper_holder_z_axis
 :part_gripper_x_axis
 :part_gripper_z_axis
 :robot_x_axis
 :robot_z_axis
 :tray_gripper_holder_x_axis
 :tray_gripper_holder_z_axis
 :work_table_x_axis
 :work_table_z_axis
 :x_axis_kit_a2b1c1_a_1
 :x_axis_kit_a2b1c1_a_2
 :x_axis_kit_a2b1c1_b_1
 :x_axis_kit_a2b1c1_c_1
 :x_axis_kit_a2b2c1_a_1
 :x_axis_kit_a2b2c1_a_2
 :x_axis_kit_a2b2c1_b_1
 :x_axis_kit_a2b2c1_b_2
 :x_axis_kit_a2b2c1_c_1
 :z_axis_kit_a2b1c1_a_1
 :z_axis_kit_a2b1c1_a_2
 :z_axis_kit_a2b1c1_b_1
 :z_axis_kit_a2b1c1_c_1
 :z_axis_kit_a2b2c1_a_1
 :z_axis_kit_a2b2c1_a_2
 :z_axis_kit_a2b2c1_b_1
 :z_axis_kit_a2b2c1_b_2
 :z_axis_kit_a2b2c1_c_1)
)
