Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)
Prefix(:=<http://www.nist.gov/el/ontologies/soapInstances.owl#>)
Prefix(soap:=<http://www.nist.gov/el/ontologies/soapClasses.owl#>)
Prefix(:=<http://www.nist.gov/el/ontologies/kittingWorkstationClasses.owl#>)
Ontology(<http://www.nist.gov/el/ontologies/soapInstances.owl>
Import(<file:soapClasses.owl>)

//*****************************************
// 1 start soap:SOAP soap
Declaration(NamedIndividual(:soap))
ClassAssertion(soap:SOAP :soap)
ObjectPropertyAssertion(soap:hasSOAP_KittingWorkstation
                        :soap :kitting_workstation_1)

//*****************************************
// 2 start :KittingWorkstation kitting_workstation_1
Declaration(NamedIndividual(:kitting_workstation_1))
ClassAssertion(:KittingWorkstation :kitting_workstation_1)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :kitting_workstation_1 :relative_location_in_1)

//*****************************************
// 3 start :RelativeLocationIn relative_location_in_1
Declaration(NamedIndividual(:relative_location_in_1))
ClassAssertion(:RelativeLocationIn :relative_location_in_1)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :relative_location_in_1 :kitting_workstation_1)
DataPropertyAssertion(:hasRelativeLocation_Description :relative_location_in_1
                      "The KittingWorkstation is in kitting_workstation_1
    "^^xsd:string)
// 3 end :RelativeLocationIn
//*****************************************

DataPropertyAssertion(:hasKittingWorkstation_AngleUnit :kitting_workstation_1
                      "degree"^^xsd:NMTOKEN)
ObjectPropertyAssertion(:hasKittingWorkstation_ChangingStation
                        :kitting_workstation_1 :changing_station_1)

//*****************************************
// 3 start :EndEffectorChangingStation changing_station_1
Declaration(NamedIndividual(:changing_station_1))
ClassAssertion(:EndEffectorChangingStation :changing_station_1)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :changing_station_1 :changing_station_pose)

//*****************************************
// 4 start :PoseOnlyLocation changing_station_pose
Declaration(NamedIndividual(:changing_station_pose))
ClassAssertion(:PoseOnlyLocation :changing_station_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :changing_station_pose :kitting_workstation_1)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :changing_station_pose :changing_station_point)

//*****************************************
// 5 start :Point changing_station_point
Declaration(NamedIndividual(:changing_station_point))
ClassAssertion(:Point :changing_station_point)
DataPropertyAssertion(:hasPoint_X :changing_station_point
                      "7.500000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :changing_station_point
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :changing_station_point
                      "0.000000"^^xsd:decimal)
// 5 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :changing_station_pose :changing_station_x_axis)

//*****************************************
// 5 start :Vector changing_station_x_axis
Declaration(NamedIndividual(:changing_station_x_axis))
ClassAssertion(:Vector :changing_station_x_axis)
DataPropertyAssertion(:hasVector_I :changing_station_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :changing_station_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :changing_station_x_axis
                      "0.000000"^^xsd:decimal)
// 5 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :changing_station_pose :changing_station_z_axis)

//*****************************************
// 5 start :Vector changing_station_z_axis
Declaration(NamedIndividual(:changing_station_z_axis))
ClassAssertion(:Vector :changing_station_z_axis)
DataPropertyAssertion(:hasVector_I :changing_station_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :changing_station_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :changing_station_z_axis
                      "1.000000"^^xsd:decimal)
// 5 end :Vector
//*****************************************

// 4 end :PoseOnlyLocation
//*****************************************

ObjectPropertyAssertion(:hasEndEffectorChangingStation_Base
                        :changing_station_1 :changing_station_base)

//*****************************************
// 4 start :MechanicalComponent changing_station_base
Declaration(NamedIndividual(:changing_station_base))
ClassAssertion(:MechanicalComponent :changing_station_base)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :changing_station_base :changing_station_base_pose)

//*****************************************
// 5 start :PoseOnlyLocation changing_station_base_pose
Declaration(NamedIndividual(:changing_station_base_pose))
ClassAssertion(:PoseOnlyLocation :changing_station_base_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :changing_station_base_pose :changing_station_1)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :changing_station_base_pose :changing_station_base_point)

//*****************************************
// 6 start :Point changing_station_base_point
Declaration(NamedIndividual(:changing_station_base_point))
ClassAssertion(:Point :changing_station_base_point)
DataPropertyAssertion(:hasPoint_X :changing_station_base_point
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :changing_station_base_point
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :changing_station_base_point
                      "0.000000"^^xsd:decimal)
// 6 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :changing_station_base_pose :changing_station_base_x_axis)

//*****************************************
// 6 start :Vector changing_station_base_x_axis
Declaration(NamedIndividual(:changing_station_base_x_axis))
ClassAssertion(:Vector :changing_station_base_x_axis)
DataPropertyAssertion(:hasVector_I :changing_station_base_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :changing_station_base_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :changing_station_base_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :changing_station_base_pose :changing_station_base_z_axis)

//*****************************************
// 6 start :Vector changing_station_base_z_axis
Declaration(NamedIndividual(:changing_station_base_z_axis))
ClassAssertion(:Vector :changing_station_base_z_axis)
DataPropertyAssertion(:hasVector_I :changing_station_base_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :changing_station_base_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :changing_station_base_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

// 5 end :PoseOnlyLocation
//*****************************************

ObjectPropertyAssertion(:hasNoSkuObject_InternalShape
                        :changing_station_base :shape_changing_station_base)

//*****************************************
// 5 start :BoxyShape shape_changing_station_base
Declaration(NamedIndividual(:shape_changing_station_base))
ClassAssertion(:BoxyShape :shape_changing_station_base)
DataPropertyAssertion(:hasShapeDesign_Description :shape_changing_station_base
                      "Shape of base of changing station"^^xsd:string)
DataPropertyAssertion(:hasBoxyShape_Length :shape_changing_station_base
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasBoxyShape_Width :shape_changing_station_base
                      "0.100000"^^xsd:decimal)
DataPropertyAssertion(:hasBoxyShape_Height :shape_changing_station_base
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasBoxyShape_HasTop :shape_changing_station_base
                      "true"^^xsd:boolean)
// 5 end :BoxyShape
//*****************************************

// 4 end :MechanicalComponent
//*****************************************

ObjectPropertyAssertion(:hasEndEffectorChangingStation_EndEffectorHolder
                        :changing_station_1 :part_gripper_holder)

//*****************************************
// 4 start :EndEffectorHolder part_gripper_holder
Declaration(NamedIndividual(:part_gripper_holder))
ClassAssertion(:EndEffectorHolder :part_gripper_holder)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :part_gripper_holder :part_gripper_holder_pose)

//*****************************************
// 5 start :PoseOnlyLocation part_gripper_holder_pose
Declaration(NamedIndividual(:part_gripper_holder_pose))
ClassAssertion(:PoseOnlyLocation :part_gripper_holder_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :part_gripper_holder_pose :changing_station_1)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :part_gripper_holder_pose :part_gripper_holder_point)

//*****************************************
// 6 start :Point part_gripper_holder_point
Declaration(NamedIndividual(:part_gripper_holder_point))
ClassAssertion(:Point :part_gripper_holder_point)
DataPropertyAssertion(:hasPoint_X :part_gripper_holder_point
                      "0.250000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :part_gripper_holder_point
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :part_gripper_holder_point
                      "0.500000"^^xsd:decimal)
// 6 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :part_gripper_holder_pose :part_gripper_holder_x_axis)

//*****************************************
// 6 start :Vector part_gripper_holder_x_axis
Declaration(NamedIndividual(:part_gripper_holder_x_axis))
ClassAssertion(:Vector :part_gripper_holder_x_axis)
DataPropertyAssertion(:hasVector_I :part_gripper_holder_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_gripper_holder_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_gripper_holder_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :part_gripper_holder_pose :part_gripper_holder_z_axis)

//*****************************************
// 6 start :Vector part_gripper_holder_z_axis
Declaration(NamedIndividual(:part_gripper_holder_z_axis))
ClassAssertion(:Vector :part_gripper_holder_z_axis)
DataPropertyAssertion(:hasVector_I :part_gripper_holder_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_gripper_holder_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_gripper_holder_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

// 5 end :PoseOnlyLocation
//*****************************************

ObjectPropertyAssertion(:hasEndEffectorHolder_EndEffector
                        :part_gripper_holder :part_gripper)

//*****************************************
// 5 start :VacuumEffectorSingleCup part_gripper
Declaration(NamedIndividual(:part_gripper))
ClassAssertion(:VacuumEffectorSingleCup :part_gripper)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :part_gripper :part_gripper_pose)

//*****************************************
// 6 start :PoseOnlyLocation part_gripper_pose
Declaration(NamedIndividual(:part_gripper_pose))
ClassAssertion(:PoseOnlyLocation :part_gripper_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :part_gripper_pose :part_gripper_holder)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :part_gripper_pose :part_gripper_point)

//*****************************************
// 7 start :Point part_gripper_point
Declaration(NamedIndividual(:part_gripper_point))
ClassAssertion(:Point :part_gripper_point)
DataPropertyAssertion(:hasPoint_X :part_gripper_point
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :part_gripper_point
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :part_gripper_point
                      "0.000000"^^xsd:decimal)
// 7 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :part_gripper_pose :part_gripper_x_axis)

//*****************************************
// 7 start :Vector part_gripper_x_axis
Declaration(NamedIndividual(:part_gripper_x_axis))
ClassAssertion(:Vector :part_gripper_x_axis)
DataPropertyAssertion(:hasVector_I :part_gripper_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_gripper_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_gripper_x_axis
                      "0.000000"^^xsd:decimal)
// 7 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :part_gripper_pose :part_gripper_z_axis)

//*****************************************
// 7 start :Vector part_gripper_z_axis
Declaration(NamedIndividual(:part_gripper_z_axis))
ClassAssertion(:Vector :part_gripper_z_axis)
DataPropertyAssertion(:hasVector_I :part_gripper_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_gripper_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_gripper_z_axis
                      "1.000000"^^xsd:decimal)
// 7 end :Vector
//*****************************************

// 6 end :PoseOnlyLocation
//*****************************************

DataPropertyAssertion(:hasEndEffector_Description :part_gripper
                      "small single cup vacuum effector"^^xsd:string)
DataPropertyAssertion(:hasEndEffector_Weight :part_gripper
                      "0.010000"^^xsd:decimal)
DataPropertyAssertion(:hasEndEffector_MaximumLoadWeight :part_gripper
                      "0.400000"^^xsd:decimal)
DataPropertyAssertion(:hasVacuumEffector_CupDiameter :part_gripper
                      "0.020000"^^xsd:decimal)
DataPropertyAssertion(:hasVacuumEffector_Length :part_gripper
                      "0.025000"^^xsd:decimal)
// 5 end :VacuumEffectorSingleCup
//*****************************************

// 4 end :EndEffectorHolder
//*****************************************

ObjectPropertyAssertion(:hasEndEffectorChangingStation_EndEffectorHolder
                        :changing_station_1 :tray_gripper_holder)

//*****************************************
// 4 start :EndEffectorHolder tray_gripper_holder
Declaration(NamedIndividual(:tray_gripper_holder))
ClassAssertion(:EndEffectorHolder :tray_gripper_holder)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :tray_gripper_holder :tray_gripper_holder_pose)

//*****************************************
// 5 start :PoseOnlyLocation tray_gripper_holder_pose
Declaration(NamedIndividual(:tray_gripper_holder_pose))
ClassAssertion(:PoseOnlyLocation :tray_gripper_holder_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :tray_gripper_holder_pose :changing_station_1)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :tray_gripper_holder_pose :tray_gripper_holder_point)

//*****************************************
// 6 start :Point tray_gripper_holder_point
Declaration(NamedIndividual(:tray_gripper_holder_point))
ClassAssertion(:Point :tray_gripper_holder_point)
DataPropertyAssertion(:hasPoint_X :tray_gripper_holder_point
                      "-0.250000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :tray_gripper_holder_point
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :tray_gripper_holder_point
                      "0.500000"^^xsd:decimal)
// 6 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :tray_gripper_holder_pose :tray_gripper_holder_x_axis)

//*****************************************
// 6 start :Vector tray_gripper_holder_x_axis
Declaration(NamedIndividual(:tray_gripper_holder_x_axis))
ClassAssertion(:Vector :tray_gripper_holder_x_axis)
DataPropertyAssertion(:hasVector_I :tray_gripper_holder_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :tray_gripper_holder_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :tray_gripper_holder_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :tray_gripper_holder_pose :tray_gripper_holder_z_axis)

//*****************************************
// 6 start :Vector tray_gripper_holder_z_axis
Declaration(NamedIndividual(:tray_gripper_holder_z_axis))
ClassAssertion(:Vector :tray_gripper_holder_z_axis)
DataPropertyAssertion(:hasVector_I :tray_gripper_holder_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :tray_gripper_holder_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :tray_gripper_holder_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

// 5 end :PoseOnlyLocation
//*****************************************

// 4 end :EndEffectorHolder
//*****************************************

// 3 end :EndEffectorChangingStation
//*****************************************

ObjectPropertyAssertion(:hasKittingWorkstation_KitDesign
                        :kitting_workstation_1 :kit_design_a2b1c1)

//*****************************************
// 3 start :KitDesign kit_design_a2b1c1
Declaration(NamedIndividual(:kit_design_a2b1c1))
ClassAssertion(:KitDesign :kit_design_a2b1c1)
ObjectPropertyAssertion(:hasKitDesign_KitTraySku
                        :kit_design_a2b1c1 :stock_keeping_unit_kit_tray)
ObjectPropertyAssertion(:hasKitDesign_PartRefAndPose
                        :kit_design_a2b1c1 :part_ref_and_pose_kit_a2b1c1_a_1)

//*****************************************
// 4 start :PartRefAndPose part_ref_and_pose_kit_a2b1c1_a_1
Declaration(NamedIndividual(:part_ref_and_pose_kit_a2b1c1_a_1))
ClassAssertion(:PartRefAndPose :part_ref_and_pose_kit_a2b1c1_a_1)
ObjectPropertyAssertion(:hasPartRefAndPose_Sku
                        :part_ref_and_pose_kit_a2b1c1_a_1 :stock_keeping_unit_part_a)
ObjectPropertyAssertion(:hasPartRefAndPose_Point
                        :part_ref_and_pose_kit_a2b1c1_a_1 :point_kit_a2b1c1_a_1)

//*****************************************
// 5 start :Point point_kit_a2b1c1_a_1
Declaration(NamedIndividual(:point_kit_a2b1c1_a_1))
ClassAssertion(:Point :point_kit_a2b1c1_a_1)
DataPropertyAssertion(:hasPoint_X :point_kit_a2b1c1_a_1
                      "0.200000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :point_kit_a2b1c1_a_1
                      "0.300000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :point_kit_a2b1c1_a_1
                      "0.000000"^^xsd:decimal)
// 5 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPartRefAndPose_XAxis
                        :part_ref_and_pose_kit_a2b1c1_a_1 :x_axis_kit_a2b1c1_a_1)

//*****************************************
// 5 start :Vector x_axis_kit_a2b1c1_a_1
Declaration(NamedIndividual(:x_axis_kit_a2b1c1_a_1))
ClassAssertion(:Vector :x_axis_kit_a2b1c1_a_1)
DataPropertyAssertion(:hasVector_I :x_axis_kit_a2b1c1_a_1
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :x_axis_kit_a2b1c1_a_1
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :x_axis_kit_a2b1c1_a_1
                      "0.000000"^^xsd:decimal)
// 5 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPartRefAndPose_ZAxis
                        :part_ref_and_pose_kit_a2b1c1_a_1 :z_axis_kit_a2b1c1_a_1)

//*****************************************
// 5 start :Vector z_axis_kit_a2b1c1_a_1
Declaration(NamedIndividual(:z_axis_kit_a2b1c1_a_1))
ClassAssertion(:Vector :z_axis_kit_a2b1c1_a_1)
DataPropertyAssertion(:hasVector_I :z_axis_kit_a2b1c1_a_1
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :z_axis_kit_a2b1c1_a_1
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :z_axis_kit_a2b1c1_a_1
                      "1.000000"^^xsd:decimal)
// 5 end :Vector
//*****************************************

// 4 end :PartRefAndPose
//*****************************************

ObjectPropertyAssertion(:hasKitDesign_PartRefAndPose
                        :kit_design_a2b1c1 :part_ref_and_pose_kit_a2b1c1_a_2)

//*****************************************
// 4 start :PartRefAndPose part_ref_and_pose_kit_a2b1c1_a_2
Declaration(NamedIndividual(:part_ref_and_pose_kit_a2b1c1_a_2))
ClassAssertion(:PartRefAndPose :part_ref_and_pose_kit_a2b1c1_a_2)
ObjectPropertyAssertion(:hasPartRefAndPose_Sku
                        :part_ref_and_pose_kit_a2b1c1_a_2 :stock_keeping_unit_part_a)
ObjectPropertyAssertion(:hasPartRefAndPose_Point
                        :part_ref_and_pose_kit_a2b1c1_a_2 :point_kit_a2b1c1_a_2)

//*****************************************
// 5 start :Point point_kit_a2b1c1_a_2
Declaration(NamedIndividual(:point_kit_a2b1c1_a_2))
ClassAssertion(:Point :point_kit_a2b1c1_a_2)
DataPropertyAssertion(:hasPoint_X :point_kit_a2b1c1_a_2
                      "0.400000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :point_kit_a2b1c1_a_2
                      "0.300000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :point_kit_a2b1c1_a_2
                      "0.000000"^^xsd:decimal)
// 5 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPartRefAndPose_XAxis
                        :part_ref_and_pose_kit_a2b1c1_a_2 :x_axis_kit_a2b1c1_a_2)

//*****************************************
// 5 start :Vector x_axis_kit_a2b1c1_a_2
Declaration(NamedIndividual(:x_axis_kit_a2b1c1_a_2))
ClassAssertion(:Vector :x_axis_kit_a2b1c1_a_2)
DataPropertyAssertion(:hasVector_I :x_axis_kit_a2b1c1_a_2
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :x_axis_kit_a2b1c1_a_2
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :x_axis_kit_a2b1c1_a_2
                      "0.000000"^^xsd:decimal)
// 5 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPartRefAndPose_ZAxis
                        :part_ref_and_pose_kit_a2b1c1_a_2 :z_axis_kit_a2b1c1_a_2)

//*****************************************
// 5 start :Vector z_axis_kit_a2b1c1_a_2
Declaration(NamedIndividual(:z_axis_kit_a2b1c1_a_2))
ClassAssertion(:Vector :z_axis_kit_a2b1c1_a_2)
DataPropertyAssertion(:hasVector_I :z_axis_kit_a2b1c1_a_2
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :z_axis_kit_a2b1c1_a_2
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :z_axis_kit_a2b1c1_a_2
                      "1.000000"^^xsd:decimal)
// 5 end :Vector
//*****************************************

// 4 end :PartRefAndPose
//*****************************************

ObjectPropertyAssertion(:hasKitDesign_PartRefAndPose
                        :kit_design_a2b1c1 :part_ref_and_pose_kit_a2b1c1_b_1)

//*****************************************
// 4 start :PartRefAndPose part_ref_and_pose_kit_a2b1c1_b_1
Declaration(NamedIndividual(:part_ref_and_pose_kit_a2b1c1_b_1))
ClassAssertion(:PartRefAndPose :part_ref_and_pose_kit_a2b1c1_b_1)
ObjectPropertyAssertion(:hasPartRefAndPose_Sku
                        :part_ref_and_pose_kit_a2b1c1_b_1 :stock_keeping_unit_part_b)
ObjectPropertyAssertion(:hasPartRefAndPose_Point
                        :part_ref_and_pose_kit_a2b1c1_b_1 :point_kit_a2b1c1_b_1)

//*****************************************
// 5 start :Point point_kit_a2b1c1_b_1
Declaration(NamedIndividual(:point_kit_a2b1c1_b_1))
ClassAssertion(:Point :point_kit_a2b1c1_b_1)
DataPropertyAssertion(:hasPoint_X :point_kit_a2b1c1_b_1
                      "0.200000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :point_kit_a2b1c1_b_1
                      "0.500000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :point_kit_a2b1c1_b_1
                      "0.000000"^^xsd:decimal)
// 5 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPartRefAndPose_XAxis
                        :part_ref_and_pose_kit_a2b1c1_b_1 :x_axis_kit_a2b1c1_b_1)

//*****************************************
// 5 start :Vector x_axis_kit_a2b1c1_b_1
Declaration(NamedIndividual(:x_axis_kit_a2b1c1_b_1))
ClassAssertion(:Vector :x_axis_kit_a2b1c1_b_1)
DataPropertyAssertion(:hasVector_I :x_axis_kit_a2b1c1_b_1
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :x_axis_kit_a2b1c1_b_1
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :x_axis_kit_a2b1c1_b_1
                      "0.000000"^^xsd:decimal)
// 5 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPartRefAndPose_ZAxis
                        :part_ref_and_pose_kit_a2b1c1_b_1 :z_axis_kit_a2b1c1_b_1)

//*****************************************
// 5 start :Vector z_axis_kit_a2b1c1_b_1
Declaration(NamedIndividual(:z_axis_kit_a2b1c1_b_1))
ClassAssertion(:Vector :z_axis_kit_a2b1c1_b_1)
DataPropertyAssertion(:hasVector_I :z_axis_kit_a2b1c1_b_1
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :z_axis_kit_a2b1c1_b_1
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :z_axis_kit_a2b1c1_b_1
                      "1.000000"^^xsd:decimal)
// 5 end :Vector
//*****************************************

// 4 end :PartRefAndPose
//*****************************************

ObjectPropertyAssertion(:hasKitDesign_PartRefAndPose
                        :kit_design_a2b1c1 :part_ref_and_pose_kit_a2b1c1_c_1)

//*****************************************
// 4 start :PartRefAndPose part_ref_and_pose_kit_a2b1c1_c_1
Declaration(NamedIndividual(:part_ref_and_pose_kit_a2b1c1_c_1))
ClassAssertion(:PartRefAndPose :part_ref_and_pose_kit_a2b1c1_c_1)
ObjectPropertyAssertion(:hasPartRefAndPose_Sku
                        :part_ref_and_pose_kit_a2b1c1_c_1 :stock_keeping_unit_part_c)
ObjectPropertyAssertion(:hasPartRefAndPose_Point
                        :part_ref_and_pose_kit_a2b1c1_c_1 :point_kit_a2b1c1_c_1)

//*****************************************
// 5 start :Point point_kit_a2b1c1_c_1
Declaration(NamedIndividual(:point_kit_a2b1c1_c_1))
ClassAssertion(:Point :point_kit_a2b1c1_c_1)
DataPropertyAssertion(:hasPoint_X :point_kit_a2b1c1_c_1
                      "0.400000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :point_kit_a2b1c1_c_1
                      "0.500000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :point_kit_a2b1c1_c_1
                      "0.000000"^^xsd:decimal)
// 5 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPartRefAndPose_XAxis
                        :part_ref_and_pose_kit_a2b1c1_c_1 :x_axis_kit_a2b1c1_c_1)

//*****************************************
// 5 start :Vector x_axis_kit_a2b1c1_c_1
Declaration(NamedIndividual(:x_axis_kit_a2b1c1_c_1))
ClassAssertion(:Vector :x_axis_kit_a2b1c1_c_1)
DataPropertyAssertion(:hasVector_I :x_axis_kit_a2b1c1_c_1
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :x_axis_kit_a2b1c1_c_1
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :x_axis_kit_a2b1c1_c_1
                      "0.000000"^^xsd:decimal)
// 5 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPartRefAndPose_ZAxis
                        :part_ref_and_pose_kit_a2b1c1_c_1 :z_axis_kit_a2b1c1_c_1)

//*****************************************
// 5 start :Vector z_axis_kit_a2b1c1_c_1
Declaration(NamedIndividual(:z_axis_kit_a2b1c1_c_1))
ClassAssertion(:Vector :z_axis_kit_a2b1c1_c_1)
DataPropertyAssertion(:hasVector_I :z_axis_kit_a2b1c1_c_1
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :z_axis_kit_a2b1c1_c_1
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :z_axis_kit_a2b1c1_c_1
                      "1.000000"^^xsd:decimal)
// 5 end :Vector
//*****************************************

// 4 end :PartRefAndPose
//*****************************************

// 3 end :KitDesign
//*****************************************

ObjectPropertyAssertion(:hasKittingWorkstation_KitDesign
                        :kitting_workstation_1 :kit_design_a2b2c1)

//*****************************************
// 3 start :KitDesign kit_design_a2b2c1
Declaration(NamedIndividual(:kit_design_a2b2c1))
ClassAssertion(:KitDesign :kit_design_a2b2c1)
ObjectPropertyAssertion(:hasKitDesign_KitTraySku
                        :kit_design_a2b2c1 :stock_keeping_unit_kit_tray)
ObjectPropertyAssertion(:hasKitDesign_PartRefAndPose
                        :kit_design_a2b2c1 :part_ref_and_pose_kit_a2b2c1_a_1)

//*****************************************
// 4 start :PartRefAndPose part_ref_and_pose_kit_a2b2c1_a_1
Declaration(NamedIndividual(:part_ref_and_pose_kit_a2b2c1_a_1))
ClassAssertion(:PartRefAndPose :part_ref_and_pose_kit_a2b2c1_a_1)
ObjectPropertyAssertion(:hasPartRefAndPose_Sku
                        :part_ref_and_pose_kit_a2b2c1_a_1 :stock_keeping_unit_part_a)
ObjectPropertyAssertion(:hasPartRefAndPose_Point
                        :part_ref_and_pose_kit_a2b2c1_a_1 :point_kit_a2b2c1_a_1)

//*****************************************
// 5 start :Point point_kit_a2b2c1_a_1
Declaration(NamedIndividual(:point_kit_a2b2c1_a_1))
ClassAssertion(:Point :point_kit_a2b2c1_a_1)
DataPropertyAssertion(:hasPoint_X :point_kit_a2b2c1_a_1
                      "-0.159000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :point_kit_a2b2c1_a_1
                      "0.145000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :point_kit_a2b2c1_a_1
                      "0.036000"^^xsd:decimal)
// 5 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPartRefAndPose_XAxis
                        :part_ref_and_pose_kit_a2b2c1_a_1 :x_axis_kit_a2b2c1_a_1)

//*****************************************
// 5 start :Vector x_axis_kit_a2b2c1_a_1
Declaration(NamedIndividual(:x_axis_kit_a2b2c1_a_1))
ClassAssertion(:Vector :x_axis_kit_a2b2c1_a_1)
DataPropertyAssertion(:hasVector_I :x_axis_kit_a2b2c1_a_1
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :x_axis_kit_a2b2c1_a_1
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :x_axis_kit_a2b2c1_a_1
                      "0.000000"^^xsd:decimal)
// 5 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPartRefAndPose_ZAxis
                        :part_ref_and_pose_kit_a2b2c1_a_1 :z_axis_kit_a2b2c1_a_1)

//*****************************************
// 5 start :Vector z_axis_kit_a2b2c1_a_1
Declaration(NamedIndividual(:z_axis_kit_a2b2c1_a_1))
ClassAssertion(:Vector :z_axis_kit_a2b2c1_a_1)
DataPropertyAssertion(:hasVector_I :z_axis_kit_a2b2c1_a_1
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :z_axis_kit_a2b2c1_a_1
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :z_axis_kit_a2b2c1_a_1
                      "1.000000"^^xsd:decimal)
// 5 end :Vector
//*****************************************

// 4 end :PartRefAndPose
//*****************************************

ObjectPropertyAssertion(:hasKitDesign_PartRefAndPose
                        :kit_design_a2b2c1 :part_ref_and_pose_kit_a2b2c1_a_2)

//*****************************************
// 4 start :PartRefAndPose part_ref_and_pose_kit_a2b2c1_a_2
Declaration(NamedIndividual(:part_ref_and_pose_kit_a2b2c1_a_2))
ClassAssertion(:PartRefAndPose :part_ref_and_pose_kit_a2b2c1_a_2)
ObjectPropertyAssertion(:hasPartRefAndPose_Sku
                        :part_ref_and_pose_kit_a2b2c1_a_2 :stock_keeping_unit_part_a)
ObjectPropertyAssertion(:hasPartRefAndPose_Point
                        :part_ref_and_pose_kit_a2b2c1_a_2 :point_kit_a2b2c1_a_2)

//*****************************************
// 5 start :Point point_kit_a2b2c1_a_2
Declaration(NamedIndividual(:point_kit_a2b2c1_a_2))
ClassAssertion(:Point :point_kit_a2b2c1_a_2)
DataPropertyAssertion(:hasPoint_X :point_kit_a2b2c1_a_2
                      "-0.159000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :point_kit_a2b2c1_a_2
                      "-0.149000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :point_kit_a2b2c1_a_2
                      "0.036000"^^xsd:decimal)
// 5 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPartRefAndPose_XAxis
                        :part_ref_and_pose_kit_a2b2c1_a_2 :x_axis_kit_a2b2c1_a_2)

//*****************************************
// 5 start :Vector x_axis_kit_a2b2c1_a_2
Declaration(NamedIndividual(:x_axis_kit_a2b2c1_a_2))
ClassAssertion(:Vector :x_axis_kit_a2b2c1_a_2)
DataPropertyAssertion(:hasVector_I :x_axis_kit_a2b2c1_a_2
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :x_axis_kit_a2b2c1_a_2
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :x_axis_kit_a2b2c1_a_2
                      "0.000000"^^xsd:decimal)
// 5 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPartRefAndPose_ZAxis
                        :part_ref_and_pose_kit_a2b2c1_a_2 :z_axis_kit_a2b2c1_a_2)

//*****************************************
// 5 start :Vector z_axis_kit_a2b2c1_a_2
Declaration(NamedIndividual(:z_axis_kit_a2b2c1_a_2))
ClassAssertion(:Vector :z_axis_kit_a2b2c1_a_2)
DataPropertyAssertion(:hasVector_I :z_axis_kit_a2b2c1_a_2
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :z_axis_kit_a2b2c1_a_2
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :z_axis_kit_a2b2c1_a_2
                      "1.000000"^^xsd:decimal)
// 5 end :Vector
//*****************************************

// 4 end :PartRefAndPose
//*****************************************

ObjectPropertyAssertion(:hasKitDesign_PartRefAndPose
                        :kit_design_a2b2c1 :part_ref_and_pose_kit_a2b2c1_b_1)

//*****************************************
// 4 start :PartRefAndPose part_ref_and_pose_kit_a2b2c1_b_1
Declaration(NamedIndividual(:part_ref_and_pose_kit_a2b2c1_b_1))
ClassAssertion(:PartRefAndPose :part_ref_and_pose_kit_a2b2c1_b_1)
ObjectPropertyAssertion(:hasPartRefAndPose_Sku
                        :part_ref_and_pose_kit_a2b2c1_b_1 :stock_keeping_unit_part_b)
ObjectPropertyAssertion(:hasPartRefAndPose_Point
                        :part_ref_and_pose_kit_a2b2c1_b_1 :point_kit_a2b2c1_b_1)

//*****************************************
// 5 start :Point point_kit_a2b2c1_b_1
Declaration(NamedIndividual(:point_kit_a2b2c1_b_1))
ClassAssertion(:Point :point_kit_a2b2c1_b_1)
DataPropertyAssertion(:hasPoint_X :point_kit_a2b2c1_b_1
                      "0.219000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :point_kit_a2b2c1_b_1
                      "-0.166000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :point_kit_a2b2c1_b_1
                      "0.080000"^^xsd:decimal)
// 5 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPartRefAndPose_XAxis
                        :part_ref_and_pose_kit_a2b2c1_b_1 :x_axis_kit_a2b2c1_b_1)

//*****************************************
// 5 start :Vector x_axis_kit_a2b2c1_b_1
Declaration(NamedIndividual(:x_axis_kit_a2b2c1_b_1))
ClassAssertion(:Vector :x_axis_kit_a2b2c1_b_1)
DataPropertyAssertion(:hasVector_I :x_axis_kit_a2b2c1_b_1
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :x_axis_kit_a2b2c1_b_1
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :x_axis_kit_a2b2c1_b_1
                      "0.000000"^^xsd:decimal)
// 5 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPartRefAndPose_ZAxis
                        :part_ref_and_pose_kit_a2b2c1_b_1 :z_axis_kit_a2b2c1_b_1)

//*****************************************
// 5 start :Vector z_axis_kit_a2b2c1_b_1
Declaration(NamedIndividual(:z_axis_kit_a2b2c1_b_1))
ClassAssertion(:Vector :z_axis_kit_a2b2c1_b_1)
DataPropertyAssertion(:hasVector_I :z_axis_kit_a2b2c1_b_1
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :z_axis_kit_a2b2c1_b_1
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :z_axis_kit_a2b2c1_b_1
                      "1.000000"^^xsd:decimal)
// 5 end :Vector
//*****************************************

// 4 end :PartRefAndPose
//*****************************************

ObjectPropertyAssertion(:hasKitDesign_PartRefAndPose
                        :kit_design_a2b2c1 :part_ref_and_pose_kit_a2b2c1_b_2)

//*****************************************
// 4 start :PartRefAndPose part_ref_and_pose_kit_a2b2c1_b_2
Declaration(NamedIndividual(:part_ref_and_pose_kit_a2b2c1_b_2))
ClassAssertion(:PartRefAndPose :part_ref_and_pose_kit_a2b2c1_b_2)
ObjectPropertyAssertion(:hasPartRefAndPose_Sku
                        :part_ref_and_pose_kit_a2b2c1_b_2 :stock_keeping_unit_part_b)
ObjectPropertyAssertion(:hasPartRefAndPose_Point
                        :part_ref_and_pose_kit_a2b2c1_b_2 :point_kit_a2b2c1_b_2)

//*****************************************
// 5 start :Point point_kit_a2b2c1_b_2
Declaration(NamedIndividual(:point_kit_a2b2c1_b_2))
ClassAssertion(:Point :point_kit_a2b2c1_b_2)
DataPropertyAssertion(:hasPoint_X :point_kit_a2b2c1_b_2
                      "0.171000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :point_kit_a2b2c1_b_2
                      "0.215000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :point_kit_a2b2c1_b_2
                      "0.080000"^^xsd:decimal)
// 5 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPartRefAndPose_XAxis
                        :part_ref_and_pose_kit_a2b2c1_b_2 :x_axis_kit_a2b2c1_b_2)

//*****************************************
// 5 start :Vector x_axis_kit_a2b2c1_b_2
Declaration(NamedIndividual(:x_axis_kit_a2b2c1_b_2))
ClassAssertion(:Vector :x_axis_kit_a2b2c1_b_2)
DataPropertyAssertion(:hasVector_I :x_axis_kit_a2b2c1_b_2
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :x_axis_kit_a2b2c1_b_2
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :x_axis_kit_a2b2c1_b_2
                      "0.000000"^^xsd:decimal)
// 5 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPartRefAndPose_ZAxis
                        :part_ref_and_pose_kit_a2b2c1_b_2 :z_axis_kit_a2b2c1_b_2)

//*****************************************
// 5 start :Vector z_axis_kit_a2b2c1_b_2
Declaration(NamedIndividual(:z_axis_kit_a2b2c1_b_2))
ClassAssertion(:Vector :z_axis_kit_a2b2c1_b_2)
DataPropertyAssertion(:hasVector_I :z_axis_kit_a2b2c1_b_2
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :z_axis_kit_a2b2c1_b_2
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :z_axis_kit_a2b2c1_b_2
                      "1.000000"^^xsd:decimal)
// 5 end :Vector
//*****************************************

// 4 end :PartRefAndPose
//*****************************************

ObjectPropertyAssertion(:hasKitDesign_PartRefAndPose
                        :kit_design_a2b2c1 :part_ref_and_pose_kit_a2b2c1_c_1)

//*****************************************
// 4 start :PartRefAndPose part_ref_and_pose_kit_a2b2c1_c_1
Declaration(NamedIndividual(:part_ref_and_pose_kit_a2b2c1_c_1))
ClassAssertion(:PartRefAndPose :part_ref_and_pose_kit_a2b2c1_c_1)
ObjectPropertyAssertion(:hasPartRefAndPose_Sku
                        :part_ref_and_pose_kit_a2b2c1_c_1 :stock_keeping_unit_part_c)
ObjectPropertyAssertion(:hasPartRefAndPose_Point
                        :part_ref_and_pose_kit_a2b2c1_c_1 :point_kit_a2b2c1_c_1)

//*****************************************
// 5 start :Point point_kit_a2b2c1_c_1
Declaration(NamedIndividual(:point_kit_a2b2c1_c_1))
ClassAssertion(:Point :point_kit_a2b2c1_c_1)
DataPropertyAssertion(:hasPoint_X :point_kit_a2b2c1_c_1
                      "0.060000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :point_kit_a2b2c1_c_1
                      "-0.090000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :point_kit_a2b2c1_c_1
                      "0.045000"^^xsd:decimal)
// 5 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPartRefAndPose_XAxis
                        :part_ref_and_pose_kit_a2b2c1_c_1 :x_axis_kit_a2b2c1_c_1)

//*****************************************
// 5 start :Vector x_axis_kit_a2b2c1_c_1
Declaration(NamedIndividual(:x_axis_kit_a2b2c1_c_1))
ClassAssertion(:Vector :x_axis_kit_a2b2c1_c_1)
DataPropertyAssertion(:hasVector_I :x_axis_kit_a2b2c1_c_1
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :x_axis_kit_a2b2c1_c_1
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :x_axis_kit_a2b2c1_c_1
                      "0.000000"^^xsd:decimal)
// 5 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPartRefAndPose_ZAxis
                        :part_ref_and_pose_kit_a2b2c1_c_1 :z_axis_kit_a2b2c1_c_1)

//*****************************************
// 5 start :Vector z_axis_kit_a2b2c1_c_1
Declaration(NamedIndividual(:z_axis_kit_a2b2c1_c_1))
ClassAssertion(:Vector :z_axis_kit_a2b2c1_c_1)
DataPropertyAssertion(:hasVector_I :z_axis_kit_a2b2c1_c_1
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :z_axis_kit_a2b2c1_c_1
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :z_axis_kit_a2b2c1_c_1
                      "1.000000"^^xsd:decimal)
// 5 end :Vector
//*****************************************

// 4 end :PartRefAndPose
//*****************************************

// 3 end :KitDesign
//*****************************************

DataPropertyAssertion(:hasKittingWorkstation_LengthUnit :kitting_workstation_1
                      "meter"^^xsd:NMTOKEN)
ObjectPropertyAssertion(:hasKittingWorkstation_Object
                        :kitting_workstation_1 :empty_kit_tray_supply)

//*****************************************
// 3 start :LargeBoxWithEmptyKitTrays empty_kit_tray_supply
Declaration(NamedIndividual(:empty_kit_tray_supply))
ClassAssertion(:LargeBoxWithEmptyKitTrays :empty_kit_tray_supply)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :empty_kit_tray_supply :empty_kit_tray_supply_pose)

//*****************************************
// 4 start :PoseOnlyLocation empty_kit_tray_supply_pose
Declaration(NamedIndividual(:empty_kit_tray_supply_pose))
ClassAssertion(:PoseOnlyLocation :empty_kit_tray_supply_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :empty_kit_tray_supply_pose :kitting_workstation_1)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :empty_kit_tray_supply_pose :empty_kit_tray_supply_point)

//*****************************************
// 5 start :Point empty_kit_tray_supply_point
Declaration(NamedIndividual(:empty_kit_tray_supply_point))
ClassAssertion(:Point :empty_kit_tray_supply_point)
DataPropertyAssertion(:hasPoint_X :empty_kit_tray_supply_point
                      "0.500000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :empty_kit_tray_supply_point
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :empty_kit_tray_supply_point
                      "0.000000"^^xsd:decimal)
// 5 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :empty_kit_tray_supply_pose :empty_kit_tray_supply_x_axis)

//*****************************************
// 5 start :Vector empty_kit_tray_supply_x_axis
Declaration(NamedIndividual(:empty_kit_tray_supply_x_axis))
ClassAssertion(:Vector :empty_kit_tray_supply_x_axis)
DataPropertyAssertion(:hasVector_I :empty_kit_tray_supply_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :empty_kit_tray_supply_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :empty_kit_tray_supply_x_axis
                      "0.000000"^^xsd:decimal)
// 5 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :empty_kit_tray_supply_pose :empty_kit_tray_supply_z_axis)

//*****************************************
// 5 start :Vector empty_kit_tray_supply_z_axis
Declaration(NamedIndividual(:empty_kit_tray_supply_z_axis))
ClassAssertion(:Vector :empty_kit_tray_supply_z_axis)
DataPropertyAssertion(:hasVector_I :empty_kit_tray_supply_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :empty_kit_tray_supply_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :empty_kit_tray_supply_z_axis
                      "1.000000"^^xsd:decimal)
// 5 end :Vector
//*****************************************

// 4 end :PoseOnlyLocation
//*****************************************

ObjectPropertyAssertion(:hasLargeBoxWithEmptyKitTrays_LargeContainer
                        :empty_kit_tray_supply :empty_kit_tray_box)

//*****************************************
// 4 start :LargeContainer empty_kit_tray_box
Declaration(NamedIndividual(:empty_kit_tray_box))
ClassAssertion(:LargeContainer :empty_kit_tray_box)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :empty_kit_tray_box :empty_kit_tray_box_pose)

//*****************************************
// 5 start :PoseOnlyLocation empty_kit_tray_box_pose
Declaration(NamedIndividual(:empty_kit_tray_box_pose))
ClassAssertion(:PoseOnlyLocation :empty_kit_tray_box_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :empty_kit_tray_box_pose :empty_kit_tray_supply)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :empty_kit_tray_box_pose :empty_kit_tray_box_point)

//*****************************************
// 6 start :Point empty_kit_tray_box_point
Declaration(NamedIndividual(:empty_kit_tray_box_point))
ClassAssertion(:Point :empty_kit_tray_box_point)
DataPropertyAssertion(:hasPoint_X :empty_kit_tray_box_point
                      "0.500000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :empty_kit_tray_box_point
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :empty_kit_tray_box_point
                      "0.000000"^^xsd:decimal)
// 6 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :empty_kit_tray_box_pose :empty_kit_tray_box_x_axis)

//*****************************************
// 6 start :Vector empty_kit_tray_box_x_axis
Declaration(NamedIndividual(:empty_kit_tray_box_x_axis))
ClassAssertion(:Vector :empty_kit_tray_box_x_axis)
DataPropertyAssertion(:hasVector_I :empty_kit_tray_box_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :empty_kit_tray_box_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :empty_kit_tray_box_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :empty_kit_tray_box_pose :empty_kit_tray_box_z_axis)

//*****************************************
// 6 start :Vector empty_kit_tray_box_z_axis
Declaration(NamedIndividual(:empty_kit_tray_box_z_axis))
ClassAssertion(:Vector :empty_kit_tray_box_z_axis)
DataPropertyAssertion(:hasVector_I :empty_kit_tray_box_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :empty_kit_tray_box_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :empty_kit_tray_box_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

// 5 end :PoseOnlyLocation
//*****************************************

ObjectPropertyAssertion(:hasSkuObject_Sku
                        :empty_kit_tray_box :stock_keeping_unit_kit_box)
DataPropertyAssertion(:hasLargeContainer_SerialNumber :empty_kit_tray_box
                      "4"^^xsd:NMTOKEN)
// 4 end :LargeContainer
//*****************************************

ObjectPropertyAssertion(:hasLargeBoxWithEmptyKitTrays_KitTray
                        :empty_kit_tray_supply :kit_tray_1)

//*****************************************
// 4 start :KitTray kit_tray_1
Declaration(NamedIndividual(:kit_tray_1))
ClassAssertion(:KitTray :kit_tray_1)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :kit_tray_1 :kit_tray_1_pose)

//*****************************************
// 5 start :PoseOnlyLocation kit_tray_1_pose
Declaration(NamedIndividual(:kit_tray_1_pose))
ClassAssertion(:PoseOnlyLocation :kit_tray_1_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :kit_tray_1_pose :empty_kit_tray_supply)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :kit_tray_1_pose :kit_tray_1_point)

//*****************************************
// 6 start :Point kit_tray_1_point
Declaration(NamedIndividual(:kit_tray_1_point))
ClassAssertion(:Point :kit_tray_1_point)
DataPropertyAssertion(:hasPoint_X :kit_tray_1_point
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :kit_tray_1_point
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :kit_tray_1_point
                      "0.000000"^^xsd:decimal)
// 6 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :kit_tray_1_pose :kit_tray_1_x_axis)

//*****************************************
// 6 start :Vector kit_tray_1_x_axis
Declaration(NamedIndividual(:kit_tray_1_x_axis))
ClassAssertion(:Vector :kit_tray_1_x_axis)
DataPropertyAssertion(:hasVector_I :kit_tray_1_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :kit_tray_1_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :kit_tray_1_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :kit_tray_1_pose :kit_tray_1_z_axis)

//*****************************************
// 6 start :Vector kit_tray_1_z_axis
Declaration(NamedIndividual(:kit_tray_1_z_axis))
ClassAssertion(:Vector :kit_tray_1_z_axis)
DataPropertyAssertion(:hasVector_I :kit_tray_1_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :kit_tray_1_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :kit_tray_1_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

// 5 end :PoseOnlyLocation
//*****************************************

ObjectPropertyAssertion(:hasSkuObject_Sku
                        :kit_tray_1 :stock_keeping_unit_kit_tray)
DataPropertyAssertion(:hasKitTray_SerialNumber :kit_tray_1
                      "1"^^xsd:NMTOKEN)
// 4 end :KitTray
//*****************************************

ObjectPropertyAssertion(:hasLargeBoxWithEmptyKitTrays_KitTray
                        :empty_kit_tray_supply :kit_tray_2)

//*****************************************
// 4 start :KitTray kit_tray_2
Declaration(NamedIndividual(:kit_tray_2))
ClassAssertion(:KitTray :kit_tray_2)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :kit_tray_2 :kit_tray_2_pose)

//*****************************************
// 5 start :PoseOnlyLocation kit_tray_2_pose
Declaration(NamedIndividual(:kit_tray_2_pose))
ClassAssertion(:PoseOnlyLocation :kit_tray_2_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :kit_tray_2_pose :empty_kit_tray_supply)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :kit_tray_2_pose :kit_tray_2_point)

//*****************************************
// 6 start :Point kit_tray_2_point
Declaration(NamedIndividual(:kit_tray_2_point))
ClassAssertion(:Point :kit_tray_2_point)
DataPropertyAssertion(:hasPoint_X :kit_tray_2_point
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :kit_tray_2_point
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :kit_tray_2_point
                      "0.150000"^^xsd:decimal)
// 6 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :kit_tray_2_pose :kit_tray_2_x_axis)

//*****************************************
// 6 start :Vector kit_tray_2_x_axis
Declaration(NamedIndividual(:kit_tray_2_x_axis))
ClassAssertion(:Vector :kit_tray_2_x_axis)
DataPropertyAssertion(:hasVector_I :kit_tray_2_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :kit_tray_2_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :kit_tray_2_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :kit_tray_2_pose :kit_tray_2_z_axis)

//*****************************************
// 6 start :Vector kit_tray_2_z_axis
Declaration(NamedIndividual(:kit_tray_2_z_axis))
ClassAssertion(:Vector :kit_tray_2_z_axis)
DataPropertyAssertion(:hasVector_I :kit_tray_2_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :kit_tray_2_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :kit_tray_2_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

// 5 end :PoseOnlyLocation
//*****************************************

ObjectPropertyAssertion(:hasSkuObject_Sku
                        :kit_tray_2 :stock_keeping_unit_kit_tray)
DataPropertyAssertion(:hasKitTray_SerialNumber :kit_tray_2
                      "2"^^xsd:NMTOKEN)
// 4 end :KitTray
//*****************************************

ObjectPropertyAssertion(:hasLargeBoxWithEmptyKitTrays_KitTray
                        :empty_kit_tray_supply :kit_tray_3)

//*****************************************
// 4 start :KitTray kit_tray_3
Declaration(NamedIndividual(:kit_tray_3))
ClassAssertion(:KitTray :kit_tray_3)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :kit_tray_3 :kit_tray_3_pose)

//*****************************************
// 5 start :PoseOnlyLocation kit_tray_3_pose
Declaration(NamedIndividual(:kit_tray_3_pose))
ClassAssertion(:PoseOnlyLocation :kit_tray_3_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :kit_tray_3_pose :empty_kit_tray_supply)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :kit_tray_3_pose :kit_tray_3_point)

//*****************************************
// 6 start :Point kit_tray_3_point
Declaration(NamedIndividual(:kit_tray_3_point))
ClassAssertion(:Point :kit_tray_3_point)
DataPropertyAssertion(:hasPoint_X :kit_tray_3_point
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :kit_tray_3_point
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :kit_tray_3_point
                      "0.300000"^^xsd:decimal)
// 6 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :kit_tray_3_pose :kit_tray_3_x_axis)

//*****************************************
// 6 start :Vector kit_tray_3_x_axis
Declaration(NamedIndividual(:kit_tray_3_x_axis))
ClassAssertion(:Vector :kit_tray_3_x_axis)
DataPropertyAssertion(:hasVector_I :kit_tray_3_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :kit_tray_3_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :kit_tray_3_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :kit_tray_3_pose :kit_tray_3_z_axis)

//*****************************************
// 6 start :Vector kit_tray_3_z_axis
Declaration(NamedIndividual(:kit_tray_3_z_axis))
ClassAssertion(:Vector :kit_tray_3_z_axis)
DataPropertyAssertion(:hasVector_I :kit_tray_3_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :kit_tray_3_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :kit_tray_3_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

// 5 end :PoseOnlyLocation
//*****************************************

ObjectPropertyAssertion(:hasSkuObject_Sku
                        :kit_tray_3 :stock_keeping_unit_kit_tray)
DataPropertyAssertion(:hasKitTray_SerialNumber :kit_tray_3
                      "3"^^xsd:NMTOKEN)
// 4 end :KitTray
//*****************************************

// 3 end :LargeBoxWithEmptyKitTrays
//*****************************************

ObjectPropertyAssertion(:hasKittingWorkstation_Object
                        :kitting_workstation_1 :finished_kit_receiver)

//*****************************************
// 3 start :LargeBoxWithKits finished_kit_receiver
Declaration(NamedIndividual(:finished_kit_receiver))
ClassAssertion(:LargeBoxWithKits :finished_kit_receiver)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :finished_kit_receiver :finished_kit_receiver_pose)

//*****************************************
// 4 start :PoseOnlyLocation finished_kit_receiver_pose
Declaration(NamedIndividual(:finished_kit_receiver_pose))
ClassAssertion(:PoseOnlyLocation :finished_kit_receiver_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :finished_kit_receiver_pose :kitting_workstation_1)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :finished_kit_receiver_pose :finished_kit_receiver_point)

//*****************************************
// 5 start :Point finished_kit_receiver_point
Declaration(NamedIndividual(:finished_kit_receiver_point))
ClassAssertion(:Point :finished_kit_receiver_point)
DataPropertyAssertion(:hasPoint_X :finished_kit_receiver_point
                      "1.500000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :finished_kit_receiver_point
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :finished_kit_receiver_point
                      "0.000000"^^xsd:decimal)
// 5 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :finished_kit_receiver_pose :finished_kit_receiver_x_axis)

//*****************************************
// 5 start :Vector finished_kit_receiver_x_axis
Declaration(NamedIndividual(:finished_kit_receiver_x_axis))
ClassAssertion(:Vector :finished_kit_receiver_x_axis)
DataPropertyAssertion(:hasVector_I :finished_kit_receiver_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :finished_kit_receiver_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :finished_kit_receiver_x_axis
                      "0.000000"^^xsd:decimal)
// 5 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :finished_kit_receiver_pose :finished_kit_receiver_z_axis)

//*****************************************
// 5 start :Vector finished_kit_receiver_z_axis
Declaration(NamedIndividual(:finished_kit_receiver_z_axis))
ClassAssertion(:Vector :finished_kit_receiver_z_axis)
DataPropertyAssertion(:hasVector_I :finished_kit_receiver_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :finished_kit_receiver_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :finished_kit_receiver_z_axis
                      "1.000000"^^xsd:decimal)
// 5 end :Vector
//*****************************************

// 4 end :PoseOnlyLocation
//*****************************************

ObjectPropertyAssertion(:hasLargeBoxWithKits_LargeContainer
                        :finished_kit_receiver :finished_kit_box)

//*****************************************
// 4 start :LargeContainer finished_kit_box
Declaration(NamedIndividual(:finished_kit_box))
ClassAssertion(:LargeContainer :finished_kit_box)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :finished_kit_box :finished_kit_box_pose)

//*****************************************
// 5 start :PoseOnlyLocation finished_kit_box_pose
Declaration(NamedIndividual(:finished_kit_box_pose))
ClassAssertion(:PoseOnlyLocation :finished_kit_box_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :finished_kit_box_pose :finished_kit_receiver)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :finished_kit_box_pose :finished_kit_box_point)

//*****************************************
// 6 start :Point finished_kit_box_point
Declaration(NamedIndividual(:finished_kit_box_point))
ClassAssertion(:Point :finished_kit_box_point)
DataPropertyAssertion(:hasPoint_X :finished_kit_box_point
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :finished_kit_box_point
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :finished_kit_box_point
                      "0.000000"^^xsd:decimal)
// 6 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :finished_kit_box_pose :finished_kit_box_x_axis)

//*****************************************
// 6 start :Vector finished_kit_box_x_axis
Declaration(NamedIndividual(:finished_kit_box_x_axis))
ClassAssertion(:Vector :finished_kit_box_x_axis)
DataPropertyAssertion(:hasVector_I :finished_kit_box_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :finished_kit_box_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :finished_kit_box_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :finished_kit_box_pose :finished_kit_box_z_axis)

//*****************************************
// 6 start :Vector finished_kit_box_z_axis
Declaration(NamedIndividual(:finished_kit_box_z_axis))
ClassAssertion(:Vector :finished_kit_box_z_axis)
DataPropertyAssertion(:hasVector_I :finished_kit_box_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :finished_kit_box_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :finished_kit_box_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

// 5 end :PoseOnlyLocation
//*****************************************

ObjectPropertyAssertion(:hasSkuObject_Sku
                        :finished_kit_box :stock_keeping_unit_kit_box)
DataPropertyAssertion(:hasLargeContainer_SerialNumber :finished_kit_box
                      "5"^^xsd:NMTOKEN)
// 4 end :LargeContainer
//*****************************************

ObjectPropertyAssertion(:hasLargeBoxWithKits_KitDesign
                        :finished_kit_receiver :kit_design_a2b1c1)
DataPropertyAssertion(:hasLargeBoxWithKits_Capacity :finished_kit_receiver
                      "12"^^xsd:positiveInteger)
// 3 end :LargeBoxWithKits
//*****************************************

ObjectPropertyAssertion(:hasKittingWorkstation_Object
                        :kitting_workstation_1 :part_a_tray)

//*****************************************
// 3 start :PartsTray part_a_tray
Declaration(NamedIndividual(:part_a_tray))
ClassAssertion(:PartsTray :part_a_tray)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :part_a_tray :part_a_tray_pose)

//*****************************************
// 4 start :PoseOnlyLocation part_a_tray_pose
Declaration(NamedIndividual(:part_a_tray_pose))
ClassAssertion(:PoseOnlyLocation :part_a_tray_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :part_a_tray_pose :kitting_workstation_1)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :part_a_tray_pose :part_a_tray_point)

//*****************************************
// 5 start :Point part_a_tray_point
Declaration(NamedIndividual(:part_a_tray_point))
ClassAssertion(:Point :part_a_tray_point)
DataPropertyAssertion(:hasPoint_X :part_a_tray_point
                      "4.500000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :part_a_tray_point
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :part_a_tray_point
                      "0.000000"^^xsd:decimal)
// 5 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :part_a_tray_pose :part_a_tray_x_axis)

//*****************************************
// 5 start :Vector part_a_tray_x_axis
Declaration(NamedIndividual(:part_a_tray_x_axis))
ClassAssertion(:Vector :part_a_tray_x_axis)
DataPropertyAssertion(:hasVector_I :part_a_tray_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_a_tray_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_a_tray_x_axis
                      "0.000000"^^xsd:decimal)
// 5 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :part_a_tray_pose :part_a_tray_z_axis)

//*****************************************
// 5 start :Vector part_a_tray_z_axis
Declaration(NamedIndividual(:part_a_tray_z_axis))
ClassAssertion(:Vector :part_a_tray_z_axis)
DataPropertyAssertion(:hasVector_I :part_a_tray_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_a_tray_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_a_tray_z_axis
                      "1.000000"^^xsd:decimal)
// 5 end :Vector
//*****************************************

// 4 end :PoseOnlyLocation
//*****************************************

ObjectPropertyAssertion(:hasSkuObject_Sku
                        :part_a_tray :stock_keeping_unit_parts_tray)
DataPropertyAssertion(:hasPartsVessel_SerialNumber :part_a_tray
                      "6"^^xsd:NMTOKEN)
ObjectPropertyAssertion(:hasPartsVessel_PartSku
                        :part_a_tray :stock_keeping_unit_part_a)
DataPropertyAssertion(:hasPartsVessel_PartQuantity :part_a_tray
                      "4"^^xsd:nonNegativeInteger)
ObjectPropertyAssertion(:hasPartsVessel_Part
                        :part_a_tray :part_a_1)

//*****************************************
// 4 start :Part part_a_1
Declaration(NamedIndividual(:part_a_1))
ClassAssertion(:Part :part_a_1)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :part_a_1 :part_a_1_pose)

//*****************************************
// 5 start :PoseLocationIn part_a_1_pose
Declaration(NamedIndividual(:part_a_1_pose))
ClassAssertion(:PoseLocationIn :part_a_1_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :part_a_1_pose :part_a_tray)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :part_a_1_pose :part_a_1_point)

//*****************************************
// 6 start :Point part_a_1_point
Declaration(NamedIndividual(:part_a_1_point))
ClassAssertion(:Point :part_a_1_point)
DataPropertyAssertion(:hasPoint_X :part_a_1_point
                      "0.159000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :part_a_1_point
                      "0.159000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :part_a_1_point
                      "0.027500"^^xsd:decimal)
// 6 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :part_a_1_pose :part_a_1_x_axis)

//*****************************************
// 6 start :Vector part_a_1_x_axis
Declaration(NamedIndividual(:part_a_1_x_axis))
ClassAssertion(:Vector :part_a_1_x_axis)
DataPropertyAssertion(:hasVector_I :part_a_1_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_a_1_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_a_1_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :part_a_1_pose :part_a_1_z_axis)

//*****************************************
// 6 start :Vector part_a_1_z_axis
Declaration(NamedIndividual(:part_a_1_z_axis))
ClassAssertion(:Vector :part_a_1_z_axis)
DataPropertyAssertion(:hasVector_I :part_a_1_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_a_1_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_a_1_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

// 5 end :PoseLocationIn
//*****************************************

ObjectPropertyAssertion(:hasSkuObject_Sku
                        :part_a_1 :stock_keeping_unit_part_a)
DataPropertyAssertion(:hasPart_SerialNumber :part_a_1
                      "a1"^^xsd:NMTOKEN)
// 4 end :Part
//*****************************************

ObjectPropertyAssertion(:hasPartsVessel_Part
                        :part_a_tray :part_a_2)

//*****************************************
// 4 start :Part part_a_2
Declaration(NamedIndividual(:part_a_2))
ClassAssertion(:Part :part_a_2)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :part_a_2 :part_a_2_pose)

//*****************************************
// 5 start :PoseLocationIn part_a_2_pose
Declaration(NamedIndividual(:part_a_2_pose))
ClassAssertion(:PoseLocationIn :part_a_2_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :part_a_2_pose :part_a_tray)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :part_a_2_pose :part_a_2_point)

//*****************************************
// 6 start :Point part_a_2_point
Declaration(NamedIndividual(:part_a_2_point))
ClassAssertion(:Point :part_a_2_point)
DataPropertyAssertion(:hasPoint_X :part_a_2_point
                      "0.159000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :part_a_2_point
                      "-0.159000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :part_a_2_point
                      "0.027500"^^xsd:decimal)
// 6 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :part_a_2_pose :part_a_2_x_axis)

//*****************************************
// 6 start :Vector part_a_2_x_axis
Declaration(NamedIndividual(:part_a_2_x_axis))
ClassAssertion(:Vector :part_a_2_x_axis)
DataPropertyAssertion(:hasVector_I :part_a_2_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_a_2_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_a_2_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :part_a_2_pose :part_a_2_z_axis)

//*****************************************
// 6 start :Vector part_a_2_z_axis
Declaration(NamedIndividual(:part_a_2_z_axis))
ClassAssertion(:Vector :part_a_2_z_axis)
DataPropertyAssertion(:hasVector_I :part_a_2_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_a_2_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_a_2_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

// 5 end :PoseLocationIn
//*****************************************

ObjectPropertyAssertion(:hasSkuObject_Sku
                        :part_a_2 :stock_keeping_unit_part_a)
DataPropertyAssertion(:hasPart_SerialNumber :part_a_2
                      "a2"^^xsd:NMTOKEN)
// 4 end :Part
//*****************************************

ObjectPropertyAssertion(:hasPartsVessel_Part
                        :part_a_tray :part_a_3)

//*****************************************
// 4 start :Part part_a_3
Declaration(NamedIndividual(:part_a_3))
ClassAssertion(:Part :part_a_3)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :part_a_3 :part_a_3_pose)

//*****************************************
// 5 start :PoseLocationIn part_a_3_pose
Declaration(NamedIndividual(:part_a_3_pose))
ClassAssertion(:PoseLocationIn :part_a_3_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :part_a_3_pose :part_a_tray)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :part_a_3_pose :part_a_3_point)

//*****************************************
// 6 start :Point part_a_3_point
Declaration(NamedIndividual(:part_a_3_point))
ClassAssertion(:Point :part_a_3_point)
DataPropertyAssertion(:hasPoint_X :part_a_3_point
                      "-0.159000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :part_a_3_point
                      "-0.159000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :part_a_3_point
                      "0.027500"^^xsd:decimal)
// 6 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :part_a_3_pose :part_a_3_x_axis)

//*****************************************
// 6 start :Vector part_a_3_x_axis
Declaration(NamedIndividual(:part_a_3_x_axis))
ClassAssertion(:Vector :part_a_3_x_axis)
DataPropertyAssertion(:hasVector_I :part_a_3_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_a_3_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_a_3_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :part_a_3_pose :part_a_3_z_axis)

//*****************************************
// 6 start :Vector part_a_3_z_axis
Declaration(NamedIndividual(:part_a_3_z_axis))
ClassAssertion(:Vector :part_a_3_z_axis)
DataPropertyAssertion(:hasVector_I :part_a_3_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_a_3_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_a_3_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

// 5 end :PoseLocationIn
//*****************************************

ObjectPropertyAssertion(:hasSkuObject_Sku
                        :part_a_3 :stock_keeping_unit_part_a)
DataPropertyAssertion(:hasPart_SerialNumber :part_a_3
                      "a3"^^xsd:NMTOKEN)
// 4 end :Part
//*****************************************

ObjectPropertyAssertion(:hasPartsVessel_Part
                        :part_a_tray :part_a_4)

//*****************************************
// 4 start :Part part_a_4
Declaration(NamedIndividual(:part_a_4))
ClassAssertion(:Part :part_a_4)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :part_a_4 :part_a_4_pose)

//*****************************************
// 5 start :PoseLocationIn part_a_4_pose
Declaration(NamedIndividual(:part_a_4_pose))
ClassAssertion(:PoseLocationIn :part_a_4_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :part_a_4_pose :part_a_tray)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :part_a_4_pose :part_a_4_point)

//*****************************************
// 6 start :Point part_a_4_point
Declaration(NamedIndividual(:part_a_4_point))
ClassAssertion(:Point :part_a_4_point)
DataPropertyAssertion(:hasPoint_X :part_a_4_point
                      "-0.159000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :part_a_4_point
                      "0.159000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :part_a_4_point
                      "0.027500"^^xsd:decimal)
// 6 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :part_a_4_pose :part_a_4_x_axis)

//*****************************************
// 6 start :Vector part_a_4_x_axis
Declaration(NamedIndividual(:part_a_4_x_axis))
ClassAssertion(:Vector :part_a_4_x_axis)
DataPropertyAssertion(:hasVector_I :part_a_4_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_a_4_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_a_4_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :part_a_4_pose :part_a_4_z_axis)

//*****************************************
// 6 start :Vector part_a_4_z_axis
Declaration(NamedIndividual(:part_a_4_z_axis))
ClassAssertion(:Vector :part_a_4_z_axis)
DataPropertyAssertion(:hasVector_I :part_a_4_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_a_4_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_a_4_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

// 5 end :PoseLocationIn
//*****************************************

ObjectPropertyAssertion(:hasSkuObject_Sku
                        :part_a_4 :stock_keeping_unit_part_a)
DataPropertyAssertion(:hasPart_SerialNumber :part_a_4
                      "a4"^^xsd:NMTOKEN)
// 4 end :Part
//*****************************************

// 3 end :PartsTray
//*****************************************

ObjectPropertyAssertion(:hasKittingWorkstation_Object
                        :kitting_workstation_1 :part_b_tray)

//*****************************************
// 3 start :PartsTray part_b_tray
Declaration(NamedIndividual(:part_b_tray))
ClassAssertion(:PartsTray :part_b_tray)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :part_b_tray :part_b_tray_pose)

//*****************************************
// 4 start :PoseOnlyLocation part_b_tray_pose
Declaration(NamedIndividual(:part_b_tray_pose))
ClassAssertion(:PoseOnlyLocation :part_b_tray_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :part_b_tray_pose :kitting_workstation_1)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :part_b_tray_pose :part_b_tray_point)

//*****************************************
// 5 start :Point part_b_tray_point
Declaration(NamedIndividual(:part_b_tray_point))
ClassAssertion(:Point :part_b_tray_point)
DataPropertyAssertion(:hasPoint_X :part_b_tray_point
                      "5.500000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :part_b_tray_point
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :part_b_tray_point
                      "0.000000"^^xsd:decimal)
// 5 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :part_b_tray_pose :part_b_tray_x_axis)

//*****************************************
// 5 start :Vector part_b_tray_x_axis
Declaration(NamedIndividual(:part_b_tray_x_axis))
ClassAssertion(:Vector :part_b_tray_x_axis)
DataPropertyAssertion(:hasVector_I :part_b_tray_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_b_tray_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_b_tray_x_axis
                      "0.000000"^^xsd:decimal)
// 5 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :part_b_tray_pose :part_b_tray_z_axis)

//*****************************************
// 5 start :Vector part_b_tray_z_axis
Declaration(NamedIndividual(:part_b_tray_z_axis))
ClassAssertion(:Vector :part_b_tray_z_axis)
DataPropertyAssertion(:hasVector_I :part_b_tray_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_b_tray_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_b_tray_z_axis
                      "1.000000"^^xsd:decimal)
// 5 end :Vector
//*****************************************

// 4 end :PoseOnlyLocation
//*****************************************

ObjectPropertyAssertion(:hasSkuObject_Sku
                        :part_b_tray :stock_keeping_unit_parts_tray)
DataPropertyAssertion(:hasPartsVessel_SerialNumber :part_b_tray
                      "7"^^xsd:NMTOKEN)
ObjectPropertyAssertion(:hasPartsVessel_PartSku
                        :part_b_tray :stock_keeping_unit_part_b)
DataPropertyAssertion(:hasPartsVessel_PartQuantity :part_b_tray
                      "8"^^xsd:nonNegativeInteger)
ObjectPropertyAssertion(:hasPartsVessel_Part
                        :part_b_tray :part_b_1)

//*****************************************
// 4 start :Part part_b_1
Declaration(NamedIndividual(:part_b_1))
ClassAssertion(:Part :part_b_1)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :part_b_1 :part_b_1_pose)

//*****************************************
// 5 start :PoseLocationIn part_b_1_pose
Declaration(NamedIndividual(:part_b_1_pose))
ClassAssertion(:PoseLocationIn :part_b_1_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :part_b_1_pose :part_b_tray)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :part_b_1_pose :part_b_1_point)

//*****************************************
// 6 start :Point part_b_1_point
Declaration(NamedIndividual(:part_b_1_point))
ClassAssertion(:Point :part_b_1_point)
DataPropertyAssertion(:hasPoint_X :part_b_1_point
                      "-0.080000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :part_b_1_point
                      "0.120000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :part_b_1_point
                      "0.067500"^^xsd:decimal)
// 6 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :part_b_1_pose :part_b_1_x_axis)

//*****************************************
// 6 start :Vector part_b_1_x_axis
Declaration(NamedIndividual(:part_b_1_x_axis))
ClassAssertion(:Vector :part_b_1_x_axis)
DataPropertyAssertion(:hasVector_I :part_b_1_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_b_1_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_b_1_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :part_b_1_pose :part_b_1_z_axis)

//*****************************************
// 6 start :Vector part_b_1_z_axis
Declaration(NamedIndividual(:part_b_1_z_axis))
ClassAssertion(:Vector :part_b_1_z_axis)
DataPropertyAssertion(:hasVector_I :part_b_1_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_b_1_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_b_1_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

// 5 end :PoseLocationIn
//*****************************************

ObjectPropertyAssertion(:hasSkuObject_Sku
                        :part_b_1 :stock_keeping_unit_part_b)
DataPropertyAssertion(:hasPart_SerialNumber :part_b_1
                      "b1"^^xsd:NMTOKEN)
// 4 end :Part
//*****************************************

ObjectPropertyAssertion(:hasPartsVessel_Part
                        :part_b_tray :part_b_2)

//*****************************************
// 4 start :Part part_b_2
Declaration(NamedIndividual(:part_b_2))
ClassAssertion(:Part :part_b_2)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :part_b_2 :part_b_2_pose)

//*****************************************
// 5 start :PoseLocationIn part_b_2_pose
Declaration(NamedIndividual(:part_b_2_pose))
ClassAssertion(:PoseLocationIn :part_b_2_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :part_b_2_pose :part_b_tray)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :part_b_2_pose :part_b_2_point)

//*****************************************
// 6 start :Point part_b_2_point
Declaration(NamedIndividual(:part_b_2_point))
ClassAssertion(:Point :part_b_2_point)
DataPropertyAssertion(:hasPoint_X :part_b_2_point
                      "-0.240000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :part_b_2_point
                      "0.120000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :part_b_2_point
                      "0.067500"^^xsd:decimal)
// 6 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :part_b_2_pose :part_b_2_x_axis)

//*****************************************
// 6 start :Vector part_b_2_x_axis
Declaration(NamedIndividual(:part_b_2_x_axis))
ClassAssertion(:Vector :part_b_2_x_axis)
DataPropertyAssertion(:hasVector_I :part_b_2_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_b_2_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_b_2_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :part_b_2_pose :part_b_2_z_axis)

//*****************************************
// 6 start :Vector part_b_2_z_axis
Declaration(NamedIndividual(:part_b_2_z_axis))
ClassAssertion(:Vector :part_b_2_z_axis)
DataPropertyAssertion(:hasVector_I :part_b_2_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_b_2_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_b_2_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

// 5 end :PoseLocationIn
//*****************************************

ObjectPropertyAssertion(:hasSkuObject_Sku
                        :part_b_2 :stock_keeping_unit_part_b)
DataPropertyAssertion(:hasPart_SerialNumber :part_b_2
                      "b2"^^xsd:NMTOKEN)
// 4 end :Part
//*****************************************

ObjectPropertyAssertion(:hasPartsVessel_Part
                        :part_b_tray :part_b_3)

//*****************************************
// 4 start :Part part_b_3
Declaration(NamedIndividual(:part_b_3))
ClassAssertion(:Part :part_b_3)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :part_b_3 :part_b_3_pose)

//*****************************************
// 5 start :PoseLocationIn part_b_3_pose
Declaration(NamedIndividual(:part_b_3_pose))
ClassAssertion(:PoseLocationIn :part_b_3_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :part_b_3_pose :part_b_tray)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :part_b_3_pose :part_b_3_point)

//*****************************************
// 6 start :Point part_b_3_point
Declaration(NamedIndividual(:part_b_3_point))
ClassAssertion(:Point :part_b_3_point)
DataPropertyAssertion(:hasPoint_X :part_b_3_point
                      "0.080000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :part_b_3_point
                      "0.120000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :part_b_3_point
                      "0.067500"^^xsd:decimal)
// 6 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :part_b_3_pose :part_b_3_x_axis)

//*****************************************
// 6 start :Vector part_b_3_x_axis
Declaration(NamedIndividual(:part_b_3_x_axis))
ClassAssertion(:Vector :part_b_3_x_axis)
DataPropertyAssertion(:hasVector_I :part_b_3_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_b_3_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_b_3_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :part_b_3_pose :part_b_3_z_axis)

//*****************************************
// 6 start :Vector part_b_3_z_axis
Declaration(NamedIndividual(:part_b_3_z_axis))
ClassAssertion(:Vector :part_b_3_z_axis)
DataPropertyAssertion(:hasVector_I :part_b_3_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_b_3_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_b_3_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

// 5 end :PoseLocationIn
//*****************************************

ObjectPropertyAssertion(:hasSkuObject_Sku
                        :part_b_3 :stock_keeping_unit_part_b)
DataPropertyAssertion(:hasPart_SerialNumber :part_b_3
                      "b3"^^xsd:NMTOKEN)
// 4 end :Part
//*****************************************

ObjectPropertyAssertion(:hasPartsVessel_Part
                        :part_b_tray :part_b_4)

//*****************************************
// 4 start :Part part_b_4
Declaration(NamedIndividual(:part_b_4))
ClassAssertion(:Part :part_b_4)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :part_b_4 :part_b_4_pose)

//*****************************************
// 5 start :PoseLocationIn part_b_4_pose
Declaration(NamedIndividual(:part_b_4_pose))
ClassAssertion(:PoseLocationIn :part_b_4_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :part_b_4_pose :part_b_tray)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :part_b_4_pose :part_b_4_point)

//*****************************************
// 6 start :Point part_b_4_point
Declaration(NamedIndividual(:part_b_4_point))
ClassAssertion(:Point :part_b_4_point)
DataPropertyAssertion(:hasPoint_X :part_b_4_point
                      "0.240000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :part_b_4_point
                      "0.120000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :part_b_4_point
                      "0.067500"^^xsd:decimal)
// 6 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :part_b_4_pose :part_b_4_x_axis)

//*****************************************
// 6 start :Vector part_b_4_x_axis
Declaration(NamedIndividual(:part_b_4_x_axis))
ClassAssertion(:Vector :part_b_4_x_axis)
DataPropertyAssertion(:hasVector_I :part_b_4_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_b_4_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_b_4_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :part_b_4_pose :part_b_4_z_axis)

//*****************************************
// 6 start :Vector part_b_4_z_axis
Declaration(NamedIndividual(:part_b_4_z_axis))
ClassAssertion(:Vector :part_b_4_z_axis)
DataPropertyAssertion(:hasVector_I :part_b_4_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_b_4_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_b_4_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

// 5 end :PoseLocationIn
//*****************************************

ObjectPropertyAssertion(:hasSkuObject_Sku
                        :part_b_4 :stock_keeping_unit_part_b)
DataPropertyAssertion(:hasPart_SerialNumber :part_b_4
                      "b4"^^xsd:NMTOKEN)
// 4 end :Part
//*****************************************

ObjectPropertyAssertion(:hasPartsVessel_Part
                        :part_b_tray :part_b_5)

//*****************************************
// 4 start :Part part_b_5
Declaration(NamedIndividual(:part_b_5))
ClassAssertion(:Part :part_b_5)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :part_b_5 :part_b_5_pose)

//*****************************************
// 5 start :PoseLocationIn part_b_5_pose
Declaration(NamedIndividual(:part_b_5_pose))
ClassAssertion(:PoseLocationIn :part_b_5_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :part_b_5_pose :part_b_tray)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :part_b_5_pose :part_b_5_point)

//*****************************************
// 6 start :Point part_b_5_point
Declaration(NamedIndividual(:part_b_5_point))
ClassAssertion(:Point :part_b_5_point)
DataPropertyAssertion(:hasPoint_X :part_b_5_point
                      "-0.080000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :part_b_5_point
                      "-0.120000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :part_b_5_point
                      "0.067500"^^xsd:decimal)
// 6 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :part_b_5_pose :part_b_5_x_axis)

//*****************************************
// 6 start :Vector part_b_5_x_axis
Declaration(NamedIndividual(:part_b_5_x_axis))
ClassAssertion(:Vector :part_b_5_x_axis)
DataPropertyAssertion(:hasVector_I :part_b_5_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_b_5_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_b_5_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :part_b_5_pose :part_b_5_z_axis)

//*****************************************
// 6 start :Vector part_b_5_z_axis
Declaration(NamedIndividual(:part_b_5_z_axis))
ClassAssertion(:Vector :part_b_5_z_axis)
DataPropertyAssertion(:hasVector_I :part_b_5_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_b_5_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_b_5_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

// 5 end :PoseLocationIn
//*****************************************

ObjectPropertyAssertion(:hasSkuObject_Sku
                        :part_b_5 :stock_keeping_unit_part_b)
DataPropertyAssertion(:hasPart_SerialNumber :part_b_5
                      "b5"^^xsd:NMTOKEN)
// 4 end :Part
//*****************************************

ObjectPropertyAssertion(:hasPartsVessel_Part
                        :part_b_tray :part_b_6)

//*****************************************
// 4 start :Part part_b_6
Declaration(NamedIndividual(:part_b_6))
ClassAssertion(:Part :part_b_6)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :part_b_6 :part_b_6_pose)

//*****************************************
// 5 start :PoseLocationIn part_b_6_pose
Declaration(NamedIndividual(:part_b_6_pose))
ClassAssertion(:PoseLocationIn :part_b_6_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :part_b_6_pose :part_b_tray)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :part_b_6_pose :part_b_6_point)

//*****************************************
// 6 start :Point part_b_6_point
Declaration(NamedIndividual(:part_b_6_point))
ClassAssertion(:Point :part_b_6_point)
DataPropertyAssertion(:hasPoint_X :part_b_6_point
                      "-0.240000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :part_b_6_point
                      "-0.120000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :part_b_6_point
                      "0.067500"^^xsd:decimal)
// 6 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :part_b_6_pose :part_b_6_x_axis)

//*****************************************
// 6 start :Vector part_b_6_x_axis
Declaration(NamedIndividual(:part_b_6_x_axis))
ClassAssertion(:Vector :part_b_6_x_axis)
DataPropertyAssertion(:hasVector_I :part_b_6_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_b_6_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_b_6_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :part_b_6_pose :part_b_6_z_axis)

//*****************************************
// 6 start :Vector part_b_6_z_axis
Declaration(NamedIndividual(:part_b_6_z_axis))
ClassAssertion(:Vector :part_b_6_z_axis)
DataPropertyAssertion(:hasVector_I :part_b_6_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_b_6_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_b_6_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

// 5 end :PoseLocationIn
//*****************************************

ObjectPropertyAssertion(:hasSkuObject_Sku
                        :part_b_6 :stock_keeping_unit_part_b)
DataPropertyAssertion(:hasPart_SerialNumber :part_b_6
                      "b6"^^xsd:NMTOKEN)
// 4 end :Part
//*****************************************

ObjectPropertyAssertion(:hasPartsVessel_Part
                        :part_b_tray :part_b_7)

//*****************************************
// 4 start :Part part_b_7
Declaration(NamedIndividual(:part_b_7))
ClassAssertion(:Part :part_b_7)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :part_b_7 :part_b_7_pose)

//*****************************************
// 5 start :PoseLocationIn part_b_7_pose
Declaration(NamedIndividual(:part_b_7_pose))
ClassAssertion(:PoseLocationIn :part_b_7_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :part_b_7_pose :part_b_tray)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :part_b_7_pose :part_b_7_point)

//*****************************************
// 6 start :Point part_b_7_point
Declaration(NamedIndividual(:part_b_7_point))
ClassAssertion(:Point :part_b_7_point)
DataPropertyAssertion(:hasPoint_X :part_b_7_point
                      "0.080000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :part_b_7_point
                      "-0.120000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :part_b_7_point
                      "0.067500"^^xsd:decimal)
// 6 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :part_b_7_pose :part_b_7_x_axis)

//*****************************************
// 6 start :Vector part_b_7_x_axis
Declaration(NamedIndividual(:part_b_7_x_axis))
ClassAssertion(:Vector :part_b_7_x_axis)
DataPropertyAssertion(:hasVector_I :part_b_7_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_b_7_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_b_7_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :part_b_7_pose :part_b_7_z_axis)

//*****************************************
// 6 start :Vector part_b_7_z_axis
Declaration(NamedIndividual(:part_b_7_z_axis))
ClassAssertion(:Vector :part_b_7_z_axis)
DataPropertyAssertion(:hasVector_I :part_b_7_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_b_7_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_b_7_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

// 5 end :PoseLocationIn
//*****************************************

ObjectPropertyAssertion(:hasSkuObject_Sku
                        :part_b_7 :stock_keeping_unit_part_b)
DataPropertyAssertion(:hasPart_SerialNumber :part_b_7
                      "b7"^^xsd:NMTOKEN)
// 4 end :Part
//*****************************************

ObjectPropertyAssertion(:hasPartsVessel_Part
                        :part_b_tray :part_b_8)

//*****************************************
// 4 start :Part part_b_8
Declaration(NamedIndividual(:part_b_8))
ClassAssertion(:Part :part_b_8)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :part_b_8 :part_b_8_pose)

//*****************************************
// 5 start :PoseLocationIn part_b_8_pose
Declaration(NamedIndividual(:part_b_8_pose))
ClassAssertion(:PoseLocationIn :part_b_8_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :part_b_8_pose :part_b_tray)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :part_b_8_pose :part_b_8_point)

//*****************************************
// 6 start :Point part_b_8_point
Declaration(NamedIndividual(:part_b_8_point))
ClassAssertion(:Point :part_b_8_point)
DataPropertyAssertion(:hasPoint_X :part_b_8_point
                      "0.240000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :part_b_8_point
                      "-0.120000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :part_b_8_point
                      "0.067500"^^xsd:decimal)
// 6 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :part_b_8_pose :part_b_8_x_axis)

//*****************************************
// 6 start :Vector part_b_8_x_axis
Declaration(NamedIndividual(:part_b_8_x_axis))
ClassAssertion(:Vector :part_b_8_x_axis)
DataPropertyAssertion(:hasVector_I :part_b_8_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_b_8_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_b_8_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :part_b_8_pose :part_b_8_z_axis)

//*****************************************
// 6 start :Vector part_b_8_z_axis
Declaration(NamedIndividual(:part_b_8_z_axis))
ClassAssertion(:Vector :part_b_8_z_axis)
DataPropertyAssertion(:hasVector_I :part_b_8_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_b_8_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_b_8_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

// 5 end :PoseLocationIn
//*****************************************

ObjectPropertyAssertion(:hasSkuObject_Sku
                        :part_b_8 :stock_keeping_unit_part_b)
DataPropertyAssertion(:hasPart_SerialNumber :part_b_8
                      "b8"^^xsd:NMTOKEN)
// 4 end :Part
//*****************************************

// 3 end :PartsTray
//*****************************************

ObjectPropertyAssertion(:hasKittingWorkstation_Object
                        :kitting_workstation_1 :part_c_tray)

//*****************************************
// 3 start :PartsTray part_c_tray
Declaration(NamedIndividual(:part_c_tray))
ClassAssertion(:PartsTray :part_c_tray)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :part_c_tray :part_c_tray_pose)

//*****************************************
// 4 start :PoseOnlyLocation part_c_tray_pose
Declaration(NamedIndividual(:part_c_tray_pose))
ClassAssertion(:PoseOnlyLocation :part_c_tray_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :part_c_tray_pose :kitting_workstation_1)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :part_c_tray_pose :part_c_tray_point)

//*****************************************
// 5 start :Point part_c_tray_point
Declaration(NamedIndividual(:part_c_tray_point))
ClassAssertion(:Point :part_c_tray_point)
DataPropertyAssertion(:hasPoint_X :part_c_tray_point
                      "6.500000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :part_c_tray_point
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :part_c_tray_point
                      "0.000000"^^xsd:decimal)
// 5 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :part_c_tray_pose :part_c_tray_x_axis)

//*****************************************
// 5 start :Vector part_c_tray_x_axis
Declaration(NamedIndividual(:part_c_tray_x_axis))
ClassAssertion(:Vector :part_c_tray_x_axis)
DataPropertyAssertion(:hasVector_I :part_c_tray_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_c_tray_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_c_tray_x_axis
                      "0.000000"^^xsd:decimal)
// 5 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :part_c_tray_pose :part_c_tray_z_axis)

//*****************************************
// 5 start :Vector part_c_tray_z_axis
Declaration(NamedIndividual(:part_c_tray_z_axis))
ClassAssertion(:Vector :part_c_tray_z_axis)
DataPropertyAssertion(:hasVector_I :part_c_tray_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_c_tray_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_c_tray_z_axis
                      "1.000000"^^xsd:decimal)
// 5 end :Vector
//*****************************************

// 4 end :PoseOnlyLocation
//*****************************************

ObjectPropertyAssertion(:hasSkuObject_Sku
                        :part_c_tray :stock_keeping_unit_parts_tray)
DataPropertyAssertion(:hasPartsVessel_SerialNumber :part_c_tray
                      "8"^^xsd:NMTOKEN)
ObjectPropertyAssertion(:hasPartsVessel_PartSku
                        :part_c_tray :stock_keeping_unit_part_c)
DataPropertyAssertion(:hasPartsVessel_PartQuantity :part_c_tray
                      "8"^^xsd:nonNegativeInteger)
ObjectPropertyAssertion(:hasPartsVessel_Part
                        :part_c_tray :part_c_1)

//*****************************************
// 4 start :Part part_c_1
Declaration(NamedIndividual(:part_c_1))
ClassAssertion(:Part :part_c_1)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :part_c_1 :part_c_1_pose)

//*****************************************
// 5 start :PoseLocationIn part_c_1_pose
Declaration(NamedIndividual(:part_c_1_pose))
ClassAssertion(:PoseLocationIn :part_c_1_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :part_c_1_pose :part_c_tray)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :part_c_1_pose :part_c_1_point)

//*****************************************
// 6 start :Point part_c_1_point
Declaration(NamedIndividual(:part_c_1_point))
ClassAssertion(:Point :part_c_1_point)
DataPropertyAssertion(:hasPoint_X :part_c_1_point
                      "0.110000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :part_c_1_point
                      "0.216000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :part_c_1_point
                      "0.035000"^^xsd:decimal)
// 6 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :part_c_1_pose :part_c_1_x_axis)

//*****************************************
// 6 start :Vector part_c_1_x_axis
Declaration(NamedIndividual(:part_c_1_x_axis))
ClassAssertion(:Vector :part_c_1_x_axis)
DataPropertyAssertion(:hasVector_I :part_c_1_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_c_1_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_c_1_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :part_c_1_pose :part_c_1_z_axis)

//*****************************************
// 6 start :Vector part_c_1_z_axis
Declaration(NamedIndividual(:part_c_1_z_axis))
ClassAssertion(:Vector :part_c_1_z_axis)
DataPropertyAssertion(:hasVector_I :part_c_1_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_c_1_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_c_1_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

// 5 end :PoseLocationIn
//*****************************************

ObjectPropertyAssertion(:hasSkuObject_Sku
                        :part_c_1 :stock_keeping_unit_part_c)
DataPropertyAssertion(:hasPart_SerialNumber :part_c_1
                      "c1"^^xsd:NMTOKEN)
// 4 end :Part
//*****************************************

ObjectPropertyAssertion(:hasPartsVessel_Part
                        :part_c_tray :part_c_2)

//*****************************************
// 4 start :Part part_c_2
Declaration(NamedIndividual(:part_c_2))
ClassAssertion(:Part :part_c_2)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :part_c_2 :part_c_2_pose)

//*****************************************
// 5 start :PoseLocationIn part_c_2_pose
Declaration(NamedIndividual(:part_c_2_pose))
ClassAssertion(:PoseLocationIn :part_c_2_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :part_c_2_pose :part_c_tray)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :part_c_2_pose :part_c_2_point)

//*****************************************
// 6 start :Point part_c_2_point
Declaration(NamedIndividual(:part_c_2_point))
ClassAssertion(:Point :part_c_2_point)
DataPropertyAssertion(:hasPoint_X :part_c_2_point
                      "0.330000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :part_c_2_point
                      "0.216000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :part_c_2_point
                      "0.035000"^^xsd:decimal)
// 6 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :part_c_2_pose :part_c_2_x_axis)

//*****************************************
// 6 start :Vector part_c_2_x_axis
Declaration(NamedIndividual(:part_c_2_x_axis))
ClassAssertion(:Vector :part_c_2_x_axis)
DataPropertyAssertion(:hasVector_I :part_c_2_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_c_2_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_c_2_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :part_c_2_pose :part_c_2_z_axis)

//*****************************************
// 6 start :Vector part_c_2_z_axis
Declaration(NamedIndividual(:part_c_2_z_axis))
ClassAssertion(:Vector :part_c_2_z_axis)
DataPropertyAssertion(:hasVector_I :part_c_2_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_c_2_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_c_2_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

// 5 end :PoseLocationIn
//*****************************************

ObjectPropertyAssertion(:hasSkuObject_Sku
                        :part_c_2 :stock_keeping_unit_part_c)
DataPropertyAssertion(:hasPart_SerialNumber :part_c_2
                      "c2"^^xsd:NMTOKEN)
// 4 end :Part
//*****************************************

ObjectPropertyAssertion(:hasPartsVessel_Part
                        :part_c_tray :part_c_3)

//*****************************************
// 4 start :Part part_c_3
Declaration(NamedIndividual(:part_c_3))
ClassAssertion(:Part :part_c_3)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :part_c_3 :part_c_3_pose)

//*****************************************
// 5 start :PoseLocationIn part_c_3_pose
Declaration(NamedIndividual(:part_c_3_pose))
ClassAssertion(:PoseLocationIn :part_c_3_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :part_c_3_pose :part_c_tray)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :part_c_3_pose :part_c_3_point)

//*****************************************
// 6 start :Point part_c_3_point
Declaration(NamedIndividual(:part_c_3_point))
ClassAssertion(:Point :part_c_3_point)
DataPropertyAssertion(:hasPoint_X :part_c_3_point
                      "-0.110000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :part_c_3_point
                      "0.216000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :part_c_3_point
                      "0.035000"^^xsd:decimal)
// 6 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :part_c_3_pose :part_c_3_x_axis)

//*****************************************
// 6 start :Vector part_c_3_x_axis
Declaration(NamedIndividual(:part_c_3_x_axis))
ClassAssertion(:Vector :part_c_3_x_axis)
DataPropertyAssertion(:hasVector_I :part_c_3_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_c_3_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_c_3_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :part_c_3_pose :part_c_3_z_axis)

//*****************************************
// 6 start :Vector part_c_3_z_axis
Declaration(NamedIndividual(:part_c_3_z_axis))
ClassAssertion(:Vector :part_c_3_z_axis)
DataPropertyAssertion(:hasVector_I :part_c_3_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_c_3_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_c_3_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

// 5 end :PoseLocationIn
//*****************************************

ObjectPropertyAssertion(:hasSkuObject_Sku
                        :part_c_3 :stock_keeping_unit_part_c)
DataPropertyAssertion(:hasPart_SerialNumber :part_c_3
                      "c3"^^xsd:NMTOKEN)
// 4 end :Part
//*****************************************

ObjectPropertyAssertion(:hasPartsVessel_Part
                        :part_c_tray :part_c_4)

//*****************************************
// 4 start :Part part_c_4
Declaration(NamedIndividual(:part_c_4))
ClassAssertion(:Part :part_c_4)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :part_c_4 :part_c_4_pose)

//*****************************************
// 5 start :PoseLocationIn part_c_4_pose
Declaration(NamedIndividual(:part_c_4_pose))
ClassAssertion(:PoseLocationIn :part_c_4_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :part_c_4_pose :part_c_tray)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :part_c_4_pose :part_c_4_point)

//*****************************************
// 6 start :Point part_c_4_point
Declaration(NamedIndividual(:part_c_4_point))
ClassAssertion(:Point :part_c_4_point)
DataPropertyAssertion(:hasPoint_X :part_c_4_point
                      "-0.330000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :part_c_4_point
                      "0.216000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :part_c_4_point
                      "0.035000"^^xsd:decimal)
// 6 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :part_c_4_pose :part_c_4_x_axis)

//*****************************************
// 6 start :Vector part_c_4_x_axis
Declaration(NamedIndividual(:part_c_4_x_axis))
ClassAssertion(:Vector :part_c_4_x_axis)
DataPropertyAssertion(:hasVector_I :part_c_4_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_c_4_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_c_4_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :part_c_4_pose :part_c_4_z_axis)

//*****************************************
// 6 start :Vector part_c_4_z_axis
Declaration(NamedIndividual(:part_c_4_z_axis))
ClassAssertion(:Vector :part_c_4_z_axis)
DataPropertyAssertion(:hasVector_I :part_c_4_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_c_4_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_c_4_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

// 5 end :PoseLocationIn
//*****************************************

ObjectPropertyAssertion(:hasSkuObject_Sku
                        :part_c_4 :stock_keeping_unit_part_c)
DataPropertyAssertion(:hasPart_SerialNumber :part_c_4
                      "c4"^^xsd:NMTOKEN)
// 4 end :Part
//*****************************************

ObjectPropertyAssertion(:hasPartsVessel_Part
                        :part_c_tray :part_c_5)

//*****************************************
// 4 start :Part part_c_5
Declaration(NamedIndividual(:part_c_5))
ClassAssertion(:Part :part_c_5)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :part_c_5 :part_c_5_pose)

//*****************************************
// 5 start :PoseLocationIn part_c_5_pose
Declaration(NamedIndividual(:part_c_5_pose))
ClassAssertion(:PoseLocationIn :part_c_5_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :part_c_5_pose :part_c_tray)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :part_c_5_pose :part_c_5_point)

//*****************************************
// 6 start :Point part_c_5_point
Declaration(NamedIndividual(:part_c_5_point))
ClassAssertion(:Point :part_c_5_point)
DataPropertyAssertion(:hasPoint_X :part_c_5_point
                      "0.110000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :part_c_5_point
                      "-0.216000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :part_c_5_point
                      "0.035000"^^xsd:decimal)
// 6 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :part_c_5_pose :part_c_5_x_axis)

//*****************************************
// 6 start :Vector part_c_5_x_axis
Declaration(NamedIndividual(:part_c_5_x_axis))
ClassAssertion(:Vector :part_c_5_x_axis)
DataPropertyAssertion(:hasVector_I :part_c_5_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_c_5_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_c_5_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :part_c_5_pose :part_c_5_z_axis)

//*****************************************
// 6 start :Vector part_c_5_z_axis
Declaration(NamedIndividual(:part_c_5_z_axis))
ClassAssertion(:Vector :part_c_5_z_axis)
DataPropertyAssertion(:hasVector_I :part_c_5_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_c_5_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_c_5_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

// 5 end :PoseLocationIn
//*****************************************

ObjectPropertyAssertion(:hasSkuObject_Sku
                        :part_c_5 :stock_keeping_unit_part_c)
DataPropertyAssertion(:hasPart_SerialNumber :part_c_5
                      "c5"^^xsd:NMTOKEN)
// 4 end :Part
//*****************************************

ObjectPropertyAssertion(:hasPartsVessel_Part
                        :part_c_tray :part_c_6)

//*****************************************
// 4 start :Part part_c_6
Declaration(NamedIndividual(:part_c_6))
ClassAssertion(:Part :part_c_6)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :part_c_6 :part_c_6_pose)

//*****************************************
// 5 start :PoseLocationIn part_c_6_pose
Declaration(NamedIndividual(:part_c_6_pose))
ClassAssertion(:PoseLocationIn :part_c_6_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :part_c_6_pose :part_c_tray)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :part_c_6_pose :part_c_6_point)

//*****************************************
// 6 start :Point part_c_6_point
Declaration(NamedIndividual(:part_c_6_point))
ClassAssertion(:Point :part_c_6_point)
DataPropertyAssertion(:hasPoint_X :part_c_6_point
                      "0.330000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :part_c_6_point
                      "-0.216000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :part_c_6_point
                      "0.035000"^^xsd:decimal)
// 6 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :part_c_6_pose :part_c_6_x_axis)

//*****************************************
// 6 start :Vector part_c_6_x_axis
Declaration(NamedIndividual(:part_c_6_x_axis))
ClassAssertion(:Vector :part_c_6_x_axis)
DataPropertyAssertion(:hasVector_I :part_c_6_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_c_6_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_c_6_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :part_c_6_pose :part_c_6_z_axis)

//*****************************************
// 6 start :Vector part_c_6_z_axis
Declaration(NamedIndividual(:part_c_6_z_axis))
ClassAssertion(:Vector :part_c_6_z_axis)
DataPropertyAssertion(:hasVector_I :part_c_6_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_c_6_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_c_6_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

// 5 end :PoseLocationIn
//*****************************************

ObjectPropertyAssertion(:hasSkuObject_Sku
                        :part_c_6 :stock_keeping_unit_part_c)
DataPropertyAssertion(:hasPart_SerialNumber :part_c_6
                      "c6"^^xsd:NMTOKEN)
// 4 end :Part
//*****************************************

ObjectPropertyAssertion(:hasPartsVessel_Part
                        :part_c_tray :part_c_7)

//*****************************************
// 4 start :Part part_c_7
Declaration(NamedIndividual(:part_c_7))
ClassAssertion(:Part :part_c_7)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :part_c_7 :part_c_7_pose)

//*****************************************
// 5 start :PoseLocationIn part_c_7_pose
Declaration(NamedIndividual(:part_c_7_pose))
ClassAssertion(:PoseLocationIn :part_c_7_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :part_c_7_pose :part_c_tray)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :part_c_7_pose :part_c_7_point)

//*****************************************
// 6 start :Point part_c_7_point
Declaration(NamedIndividual(:part_c_7_point))
ClassAssertion(:Point :part_c_7_point)
DataPropertyAssertion(:hasPoint_X :part_c_7_point
                      "-0.110000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :part_c_7_point
                      "-0.216000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :part_c_7_point
                      "0.035000"^^xsd:decimal)
// 6 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :part_c_7_pose :part_c_7_x_axis)

//*****************************************
// 6 start :Vector part_c_7_x_axis
Declaration(NamedIndividual(:part_c_7_x_axis))
ClassAssertion(:Vector :part_c_7_x_axis)
DataPropertyAssertion(:hasVector_I :part_c_7_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_c_7_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_c_7_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :part_c_7_pose :part_c_7_z_axis)

//*****************************************
// 6 start :Vector part_c_7_z_axis
Declaration(NamedIndividual(:part_c_7_z_axis))
ClassAssertion(:Vector :part_c_7_z_axis)
DataPropertyAssertion(:hasVector_I :part_c_7_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_c_7_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_c_7_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

// 5 end :PoseLocationIn
//*****************************************

ObjectPropertyAssertion(:hasSkuObject_Sku
                        :part_c_7 :stock_keeping_unit_part_c)
DataPropertyAssertion(:hasPart_SerialNumber :part_c_7
                      "c7"^^xsd:NMTOKEN)
// 4 end :Part
//*****************************************

ObjectPropertyAssertion(:hasPartsVessel_Part
                        :part_c_tray :part_c_8)

//*****************************************
// 4 start :Part part_c_8
Declaration(NamedIndividual(:part_c_8))
ClassAssertion(:Part :part_c_8)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :part_c_8 :part_c_8_pose)

//*****************************************
// 5 start :PoseLocationIn part_c_8_pose
Declaration(NamedIndividual(:part_c_8_pose))
ClassAssertion(:PoseLocationIn :part_c_8_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :part_c_8_pose :part_c_tray)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :part_c_8_pose :part_c_8_point)

//*****************************************
// 6 start :Point part_c_8_point
Declaration(NamedIndividual(:part_c_8_point))
ClassAssertion(:Point :part_c_8_point)
DataPropertyAssertion(:hasPoint_X :part_c_8_point
                      "-0.330000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :part_c_8_point
                      "-0.216000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :part_c_8_point
                      "0.035000"^^xsd:decimal)
// 6 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :part_c_8_pose :part_c_8_x_axis)

//*****************************************
// 6 start :Vector part_c_8_x_axis
Declaration(NamedIndividual(:part_c_8_x_axis))
ClassAssertion(:Vector :part_c_8_x_axis)
DataPropertyAssertion(:hasVector_I :part_c_8_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_c_8_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_c_8_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :part_c_8_pose :part_c_8_z_axis)

//*****************************************
// 6 start :Vector part_c_8_z_axis
Declaration(NamedIndividual(:part_c_8_z_axis))
ClassAssertion(:Vector :part_c_8_z_axis)
DataPropertyAssertion(:hasVector_I :part_c_8_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_c_8_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_c_8_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

// 5 end :PoseLocationIn
//*****************************************

ObjectPropertyAssertion(:hasSkuObject_Sku
                        :part_c_8 :stock_keeping_unit_part_c)
DataPropertyAssertion(:hasPart_SerialNumber :part_c_8
                      "c8"^^xsd:NMTOKEN)
// 4 end :Part
//*****************************************

// 3 end :PartsTray
//*****************************************

ObjectPropertyAssertion(:hasKittingWorkstation_Object
                        :kitting_workstation_1 :work_table_1)

//*****************************************
// 3 start :WorkTable work_table_1
Declaration(NamedIndividual(:work_table_1))
ClassAssertion(:WorkTable :work_table_1)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :work_table_1 :work_table_pose)

//*****************************************
// 4 start :PoseOnlyLocation work_table_pose
Declaration(NamedIndividual(:work_table_pose))
ClassAssertion(:PoseOnlyLocation :work_table_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :work_table_pose :kitting_workstation_1)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :work_table_pose :work_table_point)

//*****************************************
// 5 start :Point work_table_point
Declaration(NamedIndividual(:work_table_point))
ClassAssertion(:Point :work_table_point)
DataPropertyAssertion(:hasPoint_X :work_table_point
                      "3.000000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :work_table_point
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :work_table_point
                      "0.000000"^^xsd:decimal)
// 5 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :work_table_pose :work_table_x_axis)

//*****************************************
// 5 start :Vector work_table_x_axis
Declaration(NamedIndividual(:work_table_x_axis))
ClassAssertion(:Vector :work_table_x_axis)
DataPropertyAssertion(:hasVector_I :work_table_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :work_table_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :work_table_x_axis
                      "0.000000"^^xsd:decimal)
// 5 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :work_table_pose :work_table_z_axis)

//*****************************************
// 5 start :Vector work_table_z_axis
Declaration(NamedIndividual(:work_table_z_axis))
ClassAssertion(:Vector :work_table_z_axis)
DataPropertyAssertion(:hasVector_I :work_table_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :work_table_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :work_table_z_axis
                      "1.000000"^^xsd:decimal)
// 5 end :Vector
//*****************************************

// 4 end :PoseOnlyLocation
//*****************************************

ObjectPropertyAssertion(:hasNoSkuObject_InternalShape
                        :work_table_1 :shape_work_table)

//*****************************************
// 4 start :CylindricalShape shape_work_table
Declaration(NamedIndividual(:shape_work_table))
ClassAssertion(:CylindricalShape :shape_work_table)
DataPropertyAssertion(:hasShapeDesign_Description :shape_work_table
                      "Shape of the work table"^^xsd:string)
DataPropertyAssertion(:hasCylindricalShape_Diameter :shape_work_table
                      "1.600000"^^xsd:decimal)
DataPropertyAssertion(:hasCylindricalShape_Height :shape_work_table
                      "0.500000"^^xsd:decimal)
DataPropertyAssertion(:hasCylindricalShape_HasTop :shape_work_table
                      "true"^^xsd:boolean)
// 4 end :CylindricalShape
//*****************************************

// 3 end :WorkTable
//*****************************************

ObjectPropertyAssertion(:hasKittingWorkstation_Robot
                        :kitting_workstation_1 :robot_1)

//*****************************************
// 3 start :Robot robot_1
Declaration(NamedIndividual(:robot_1))
ClassAssertion(:Robot :robot_1)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :robot_1 :robot_pose)

//*****************************************
// 4 start :PoseOnlyLocation robot_pose
Declaration(NamedIndividual(:robot_pose))
ClassAssertion(:PoseOnlyLocation :robot_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :robot_pose :kitting_workstation_1)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :robot_pose :robot_point)

//*****************************************
// 5 start :Point robot_point
Declaration(NamedIndividual(:robot_point))
ClassAssertion(:Point :robot_point)
DataPropertyAssertion(:hasPoint_X :robot_point
                      "3.000000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :robot_point
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :robot_point
                      "2.000000"^^xsd:decimal)
// 5 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :robot_pose :robot_x_axis)

//*****************************************
// 5 start :Vector robot_x_axis
Declaration(NamedIndividual(:robot_x_axis))
ClassAssertion(:Vector :robot_x_axis)
DataPropertyAssertion(:hasVector_I :robot_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :robot_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :robot_x_axis
                      "0.000000"^^xsd:decimal)
// 5 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :robot_pose :robot_z_axis)

//*****************************************
// 5 start :Vector robot_z_axis
Declaration(NamedIndividual(:robot_z_axis))
ClassAssertion(:Vector :robot_z_axis)
DataPropertyAssertion(:hasVector_I :robot_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :robot_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :robot_z_axis
                      "1.000000"^^xsd:decimal)
// 5 end :Vector
//*****************************************

// 4 end :PoseOnlyLocation
//*****************************************

DataPropertyAssertion(:hasRobot_Description :robot_1
                      "this is the robot"^^xsd:string)
ObjectPropertyAssertion(:hasRobot_EndEffector
                        :robot_1 :tray_gripper)

//*****************************************
// 4 start :VacuumEffectorSingleCup tray_gripper
Declaration(NamedIndividual(:tray_gripper))
ClassAssertion(:VacuumEffectorSingleCup :tray_gripper)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :tray_gripper :relative_location_on_1)

//*****************************************
// 5 start :RelativeLocationOn relative_location_on_1
Declaration(NamedIndividual(:relative_location_on_1))
ClassAssertion(:RelativeLocationOn :relative_location_on_1)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :relative_location_on_1 :robot_1)
DataPropertyAssertion(:hasRelativeLocation_Description :relative_location_on_1
                      "The tray_gripper is on robot_1"^^xsd:string)
// 5 end :RelativeLocationOn
//*****************************************

DataPropertyAssertion(:hasEndEffector_Description :tray_gripper
                      "large single cup vacuum effector"^^xsd:string)
DataPropertyAssertion(:hasEndEffector_Weight :tray_gripper
                      "0.040000"^^xsd:decimal)
DataPropertyAssertion(:hasEndEffector_MaximumLoadWeight :tray_gripper
                      "0.500000"^^xsd:decimal)
DataPropertyAssertion(:hasVacuumEffector_CupDiameter :tray_gripper
                      "0.040000"^^xsd:decimal)
DataPropertyAssertion(:hasVacuumEffector_Length :tray_gripper
                      "0.100000"^^xsd:decimal)
// 4 end :VacuumEffectorSingleCup
//*****************************************

DataPropertyAssertion(:hasRobot_MaximumLoadWeight :robot_1
                      "7.000000"^^xsd:decimal)
ObjectPropertyAssertion(:hasRobot_WorkVolume
                        :robot_1 :box_volume_1)

//*****************************************
// 4 start :BoxVolume box_volume_1
Declaration(NamedIndividual(:box_volume_1))
ClassAssertion(:BoxVolume :box_volume_1)
ObjectPropertyAssertion(:hasBoxVolume_MaximumPoint
                        :box_volume_1 :point_max)

//*****************************************
// 5 start :Point point_max
Declaration(NamedIndividual(:point_max))
ClassAssertion(:Point :point_max)
DataPropertyAssertion(:hasPoint_X :point_max
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :point_max
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :point_max
                      "2.000000"^^xsd:decimal)
// 5 end :Point
//*****************************************

ObjectPropertyAssertion(:hasBoxVolume_MinimumPoint
                        :box_volume_1 :point_min)

//*****************************************
// 5 start :Point point_min
Declaration(NamedIndividual(:point_min))
ClassAssertion(:Point :point_min)
DataPropertyAssertion(:hasPoint_X :point_min
                      "-1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :point_min
                      "-1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :point_min
                      "0.000000"^^xsd:decimal)
// 5 end :Point
//*****************************************

// 4 end :BoxVolume
//*****************************************

// 3 end :Robot
//*****************************************

ObjectPropertyAssertion(:hasKittingWorkstation_Sku
                        :kitting_workstation_1 :stock_keeping_unit_part_a)

//*****************************************
// 3 start :StockKeepingUnit stock_keeping_unit_part_a
Declaration(NamedIndividual(:stock_keeping_unit_part_a))
ClassAssertion(:StockKeepingUnit :stock_keeping_unit_part_a)
DataPropertyAssertion(:hasStockKeepingUnit_Description :stock_keeping_unit_part_a
                      "SKU for Part A"^^xsd:string)
ObjectPropertyAssertion(:hasStockKeepingUnit_InternalShape
                        :stock_keeping_unit_part_a :shape_part_a)

//*****************************************
// 4 start :BoxyShape shape_part_a
Declaration(NamedIndividual(:shape_part_a))
ClassAssertion(:BoxyShape :shape_part_a)
DataPropertyAssertion(:hasShapeDesign_Description :shape_part_a
                      "Shape of PartA"^^xsd:string)
DataPropertyAssertion(:hasBoxyShape_Length :shape_part_a
                      "0.100000"^^xsd:decimal)
DataPropertyAssertion(:hasBoxyShape_Width :shape_part_a
                      "0.080000"^^xsd:decimal)
DataPropertyAssertion(:hasBoxyShape_Height :shape_part_a
                      "0.150000"^^xsd:decimal)
DataPropertyAssertion(:hasBoxyShape_HasTop :shape_part_a
                      "true"^^xsd:boolean)
// 4 end :BoxyShape
//*****************************************

DataPropertyAssertion(:hasStockKeepingUnit_Weight :stock_keeping_unit_part_a
                      "0.180000"^^xsd:decimal)
ObjectPropertyAssertion(:hasStockKeepingUnit_EndEffector
                        :stock_keeping_unit_part_a :part_gripper)
// 3 end :StockKeepingUnit
//*****************************************

ObjectPropertyAssertion(:hasKittingWorkstation_Sku
                        :kitting_workstation_1 :stock_keeping_unit_part_b)

//*****************************************
// 3 start :StockKeepingUnit stock_keeping_unit_part_b
Declaration(NamedIndividual(:stock_keeping_unit_part_b))
ClassAssertion(:StockKeepingUnit :stock_keeping_unit_part_b)
DataPropertyAssertion(:hasStockKeepingUnit_Description :stock_keeping_unit_part_b
                      "SKU for Part B"^^xsd:string)
ObjectPropertyAssertion(:hasStockKeepingUnit_InternalShape
                        :stock_keeping_unit_part_b :shape_part_b)

//*****************************************
// 4 start :BoxyShape shape_part_b
Declaration(NamedIndividual(:shape_part_b))
ClassAssertion(:BoxyShape :shape_part_b)
DataPropertyAssertion(:hasShapeDesign_Description :shape_part_b
                      "Shape of PartB"^^xsd:string)
DataPropertyAssertion(:hasBoxyShape_Length :shape_part_b
                      "0.120000"^^xsd:decimal)
DataPropertyAssertion(:hasBoxyShape_Width :shape_part_b
                      "0.080000"^^xsd:decimal)
DataPropertyAssertion(:hasBoxyShape_Height :shape_part_b
                      "0.150000"^^xsd:decimal)
DataPropertyAssertion(:hasBoxyShape_HasTop :shape_part_b
                      "true"^^xsd:boolean)
// 4 end :BoxyShape
//*****************************************

DataPropertyAssertion(:hasStockKeepingUnit_Weight :stock_keeping_unit_part_b
                      "0.180000"^^xsd:decimal)
ObjectPropertyAssertion(:hasStockKeepingUnit_EndEffector
                        :stock_keeping_unit_part_b :part_gripper)
// 3 end :StockKeepingUnit
//*****************************************

ObjectPropertyAssertion(:hasKittingWorkstation_Sku
                        :kitting_workstation_1 :stock_keeping_unit_part_c)

//*****************************************
// 3 start :StockKeepingUnit stock_keeping_unit_part_c
Declaration(NamedIndividual(:stock_keeping_unit_part_c))
ClassAssertion(:StockKeepingUnit :stock_keeping_unit_part_c)
DataPropertyAssertion(:hasStockKeepingUnit_Description :stock_keeping_unit_part_c
                      "SKU for Part C"^^xsd:string)
ObjectPropertyAssertion(:hasStockKeepingUnit_InternalShape
                        :stock_keeping_unit_part_c :shape_part_c)

//*****************************************
// 4 start :BoxyShape shape_part_c
Declaration(NamedIndividual(:shape_part_c))
ClassAssertion(:BoxyShape :shape_part_c)
DataPropertyAssertion(:hasShapeDesign_Description :shape_part_c
                      "Shape of PartC"^^xsd:string)
DataPropertyAssertion(:hasBoxyShape_Length :shape_part_c
                      "0.150000"^^xsd:decimal)
DataPropertyAssertion(:hasBoxyShape_Width :shape_part_c
                      "0.080000"^^xsd:decimal)
DataPropertyAssertion(:hasBoxyShape_Height :shape_part_c
                      "0.150000"^^xsd:decimal)
DataPropertyAssertion(:hasBoxyShape_HasTop :shape_part_c
                      "true"^^xsd:boolean)
// 4 end :BoxyShape
//*****************************************

DataPropertyAssertion(:hasStockKeepingUnit_Weight :stock_keeping_unit_part_c
                      "0.180000"^^xsd:decimal)
ObjectPropertyAssertion(:hasStockKeepingUnit_EndEffector
                        :stock_keeping_unit_part_c :part_gripper)
// 3 end :StockKeepingUnit
//*****************************************

ObjectPropertyAssertion(:hasKittingWorkstation_Sku
                        :kitting_workstation_1 :stock_keeping_unit_kit_tray)

//*****************************************
// 3 start :StockKeepingUnit stock_keeping_unit_kit_tray
Declaration(NamedIndividual(:stock_keeping_unit_kit_tray))
ClassAssertion(:StockKeepingUnit :stock_keeping_unit_kit_tray)
DataPropertyAssertion(:hasStockKeepingUnit_Description :stock_keeping_unit_kit_tray
                      "SKU for KitTrays"^^xsd:string)
ObjectPropertyAssertion(:hasStockKeepingUnit_InternalShape
                        :stock_keeping_unit_kit_tray :shape_kit_tray)

//*****************************************
// 4 start :BoxyShape shape_kit_tray
Declaration(NamedIndividual(:shape_kit_tray))
ClassAssertion(:BoxyShape :shape_kit_tray)
DataPropertyAssertion(:hasShapeDesign_Description :shape_kit_tray
                      "Shape of KitTrays"^^xsd:string)
DataPropertyAssertion(:hasBoxyShape_Length :shape_kit_tray
                      "0.500000"^^xsd:decimal)
DataPropertyAssertion(:hasBoxyShape_Width :shape_kit_tray
                      "0.300000"^^xsd:decimal)
DataPropertyAssertion(:hasBoxyShape_Height :shape_kit_tray
                      "0.150000"^^xsd:decimal)
DataPropertyAssertion(:hasBoxyShape_HasTop :shape_kit_tray
                      "false"^^xsd:boolean)
// 4 end :BoxyShape
//*****************************************

DataPropertyAssertion(:hasStockKeepingUnit_Weight :stock_keeping_unit_kit_tray
                      "0.200000"^^xsd:decimal)
ObjectPropertyAssertion(:hasStockKeepingUnit_EndEffector
                        :stock_keeping_unit_kit_tray :tray_gripper)
// 3 end :StockKeepingUnit
//*****************************************

ObjectPropertyAssertion(:hasKittingWorkstation_Sku
                        :kitting_workstation_1 :stock_keeping_unit_kit_box)

//*****************************************
// 3 start :StockKeepingUnit stock_keeping_unit_kit_box
Declaration(NamedIndividual(:stock_keeping_unit_kit_box))
ClassAssertion(:StockKeepingUnit :stock_keeping_unit_kit_box)
DataPropertyAssertion(:hasStockKeepingUnit_Description :stock_keeping_unit_kit_box
                      "SKU for Boxes for Kits and KitTrays"^^xsd:string)
ObjectPropertyAssertion(:hasStockKeepingUnit_InternalShape
                        :stock_keeping_unit_kit_box :shape_kit_box)

//*****************************************
// 4 start :BoxyShape shape_kit_box
Declaration(NamedIndividual(:shape_kit_box))
ClassAssertion(:BoxyShape :shape_kit_box)
DataPropertyAssertion(:hasShapeDesign_Description :shape_kit_box
                      "Shape of boxes to hold kits and kit trays"^^xsd:string)
DataPropertyAssertion(:hasBoxyShape_Length :shape_kit_box
                      "0.900000"^^xsd:decimal)
DataPropertyAssertion(:hasBoxyShape_Width :shape_kit_box
                      "0.700000"^^xsd:decimal)
DataPropertyAssertion(:hasBoxyShape_Height :shape_kit_box
                      "0.800000"^^xsd:decimal)
DataPropertyAssertion(:hasBoxyShape_HasTop :shape_kit_box
                      "false"^^xsd:boolean)
// 4 end :BoxyShape
//*****************************************

DataPropertyAssertion(:hasStockKeepingUnit_Weight :stock_keeping_unit_kit_box
                      "1.200000"^^xsd:decimal)
// 3 end :StockKeepingUnit
//*****************************************

ObjectPropertyAssertion(:hasKittingWorkstation_Sku
                        :kitting_workstation_1 :stock_keeping_unit_parts_tray)

//*****************************************
// 3 start :StockKeepingUnit stock_keeping_unit_parts_tray
Declaration(NamedIndividual(:stock_keeping_unit_parts_tray))
ClassAssertion(:StockKeepingUnit :stock_keeping_unit_parts_tray)
DataPropertyAssertion(:hasStockKeepingUnit_Description :stock_keeping_unit_parts_tray
                      "SKU for PartsTrays"^^xsd:string)
ObjectPropertyAssertion(:hasStockKeepingUnit_InternalShape
                        :stock_keeping_unit_parts_tray :shape_parts_tray)

//*****************************************
// 4 start :BoxyShape shape_parts_tray
Declaration(NamedIndividual(:shape_parts_tray))
ClassAssertion(:BoxyShape :shape_parts_tray)
DataPropertyAssertion(:hasShapeDesign_Description :shape_parts_tray
                      "Shape of PartsTrays"^^xsd:string)
DataPropertyAssertion(:hasBoxyShape_Length :shape_parts_tray
                      "0.600000"^^xsd:decimal)
DataPropertyAssertion(:hasBoxyShape_Width :shape_parts_tray
                      "0.300000"^^xsd:decimal)
DataPropertyAssertion(:hasBoxyShape_Height :shape_parts_tray
                      "0.200000"^^xsd:decimal)
DataPropertyAssertion(:hasBoxyShape_HasTop :shape_parts_tray
                      "false"^^xsd:boolean)
// 4 end :BoxyShape
//*****************************************

DataPropertyAssertion(:hasStockKeepingUnit_Weight :stock_keeping_unit_parts_tray
                      "0.200000"^^xsd:decimal)
ObjectPropertyAssertion(:hasStockKeepingUnit_EndEffector
                        :stock_keeping_unit_parts_tray :tray_gripper)
// 3 end :StockKeepingUnit
//*****************************************

DataPropertyAssertion(:hasKittingWorkstation_WeightUnit :kitting_workstation_1
                      "kilogram"^^xsd:NMTOKEN)
// 2 end :KittingWorkstation
//*****************************************

ObjectPropertyAssertion(soap:hasSOAP_Domain
                        :soap :kitting-domain)

//*****************************************
// 2 start soap:Domain kitting-domain
Declaration(NamedIndividual(:kitting-domain))
ClassAssertion(soap:Domain :kitting-domain)
DataPropertyAssertion(soap:hasDomain_Requirement :kitting-domain
                      "strips"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasDomain_Requirement :kitting-domain
                      "typing"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasDomain_Requirement :kitting-domain
                      "derived-predicates"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasDomain_Requirement :kitting-domain
                      "action-costs"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasDomain_Requirement :kitting-domain
                      "fluents"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasDomain_Requirement :kitting-domain
                      "equality"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasDomain_Variable :kitting-domain
                      "EndEffector"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasDomain_Variable :kitting-domain
                      "EndEffectorHolder"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasDomain_Variable :kitting-domain
                      "Kit"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasDomain_Variable :kitting-domain
                      "KitTray"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasDomain_Variable :kitting-domain
                      "LargeBoxWithEmptyKitTrays"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasDomain_Variable :kitting-domain
                      "LargeBoxWithKits"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasDomain_Variable :kitting-domain
                      "Part"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasDomain_Variable :kitting-domain
                      "PartsTray"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasDomain_Variable :kitting-domain
                      "EndEffectorChangingStation"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasDomain_Variable :kitting-domain
                      "Robot"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasDomain_Variable :kitting-domain
                      "WorkTable"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasDomain_Variable :kitting-domain
                      "StockKeepingUnit"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasDomain_PositivePredicateSet
                        :kitting-domain :positive-predicates)

//*****************************************
// 3 start soap:PositivePredicateSet positive-predicates
Declaration(NamedIndividual(:positive-predicates))
ClassAssertion(soap:PositivePredicateSet :positive-predicates)
ObjectPropertyAssertion(soap:hasPositivePredicateSet_EEffHasKitTray
                        :positive-predicates :endEffector-has-heldObject-kitTray)

//*****************************************
// 4 start soap:EEffHasKitTray endEffector-has-heldObject-kitTray
Declaration(NamedIndividual(:endEffector-has-heldObject-kitTray))
ClassAssertion(soap:EEffHasKitTray :endEffector-has-heldObject-kitTray)
DataPropertyAssertion(soap:hasPositivePredicate_Description :endEffector-has-heldObject-kitTray
                      ";?endeffector is holding ?kittray"^^xsd:string)
DataPropertyAssertion(soap:hasPositivePredicate_ReferenceParameter :endEffector-has-heldObject-kitTray
                      "EndEffector"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPositivePredicate_TargetParameter :endEffector-has-heldObject-kitTray
                      "KitTray"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasEEffHasKitTray_Group_1
                        :endEffector-has-heldObject-kitTray :G1_endEffector-has-heldObject-kitTray)

//*****************************************
// 5 start soap:G1_EEffHasKitTray G1_endEffector-has-heldObject-kitTray
Declaration(NamedIndividual(:G1_endEffector-has-heldObject-kitTray))
ClassAssertion(soap:G1_EEffHasKitTray :G1_endEffector-has-heldObject-kitTray)
ObjectPropertyAssertion(soap:hasG1_EEffHasKitTray_SubGroup_1
                        :G1_endEffector-has-heldObject-kitTray :SG1_endEffector-has-heldObject-kitTray)

//*****************************************
// 6 start soap:SG1_EEffHasKitTray SG1_endEffector-has-heldObject-kitTray
Declaration(NamedIndividual(:SG1_endEffector-has-heldObject-kitTray))
ClassAssertion(soap:SG1_EEffHasKitTray :SG1_endEffector-has-heldObject-kitTray)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :SG1_endEffector-has-heldObject-kitTray
                      "KitTray"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :SG1_endEffector-has-heldObject-kitTray
                      "EndEffector"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasSG1_EEffHasKitTray_StateRelation
                        :SG1_endEffector-has-heldObject-kitTray :PartiallyIn)
// 6 end soap:SG1_EEffHasKitTray
//*****************************************

ObjectPropertyAssertion(soap:hasG1_EEffHasKitTray_SubGroup_2
                        :G1_endEffector-has-heldObject-kitTray :SG2_endEffector-has-heldObject-kitTray)

//*****************************************
// 6 start soap:SG2_EEffHasKitTray SG2_endEffector-has-heldObject-kitTray
Declaration(NamedIndividual(:SG2_endEffector-has-heldObject-kitTray))
ClassAssertion(soap:SG2_EEffHasKitTray :SG2_endEffector-has-heldObject-kitTray)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :SG2_endEffector-has-heldObject-kitTray
                      "KitTray"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :SG2_endEffector-has-heldObject-kitTray
                      "EndEffector"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasSG2_EEffHasKitTray_StateRelation
                        :SG2_endEffector-has-heldObject-kitTray :ContainedIn)
// 6 end soap:SG2_EEffHasKitTray
//*****************************************

// 5 end soap:G1_EEffHasKitTray
//*****************************************

ObjectPropertyAssertion(soap:hasEEffHasKitTray_Group_2
                        :endEffector-has-heldObject-kitTray :G2_endEffector-has-heldObject-kitTray)

//*****************************************
// 5 start soap:G2_EEffHasKitTray G2_endEffector-has-heldObject-kitTray
Declaration(NamedIndividual(:G2_endEffector-has-heldObject-kitTray))
ClassAssertion(soap:G2_EEffHasKitTray :G2_endEffector-has-heldObject-kitTray)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :G2_endEffector-has-heldObject-kitTray
                      "SolidObject"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :G2_endEffector-has-heldObject-kitTray
                      "KitTray"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasG2_EEffHasKitTray_StateRelation
                        :G2_endEffector-has-heldObject-kitTray :NotUnderWithContact)
// 5 end soap:G2_EEffHasKitTray
//*****************************************

// 4 end soap:EEffHasKitTray
//*****************************************

ObjectPropertyAssertion(soap:hasPositivePredicateSet_EEffHasKit
                        :positive-predicates :endEffector-has-heldObject-kit)

//*****************************************
// 4 start soap:EEffHasKit endEffector-has-heldObject-kit
Declaration(NamedIndividual(:endEffector-has-heldObject-kit))
ClassAssertion(soap:EEffHasKit :endEffector-has-heldObject-kit)
DataPropertyAssertion(soap:hasPositivePredicate_Description :endEffector-has-heldObject-kit
                      ";?endeffector is holding ?kit"^^xsd:string)
DataPropertyAssertion(soap:hasPositivePredicate_ReferenceParameter :endEffector-has-heldObject-kit
                      "EndEffector"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPositivePredicate_TargetParameter :endEffector-has-heldObject-kit
                      "Kit"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasEEffHasKit_Group_1
                        :endEffector-has-heldObject-kit :G1_endEffector-has-heldObject-kit)

//*****************************************
// 5 start soap:G1_EEffHasKitTray G1_endEffector-has-heldObject-kit
Declaration(NamedIndividual(:G1_endEffector-has-heldObject-kit))
ClassAssertion(soap:G1_EEffHasKitTray :G1_endEffector-has-heldObject-kit)
ObjectPropertyAssertion(soap:hasG1_EEffHasKitTray_SubGroup_1
                        :G1_endEffector-has-heldObject-kit :SG1_endEffector-has-heldObject-kit)

//*****************************************
// 6 start soap:SG1_EEffHasKitTray SG1_endEffector-has-heldObject-kit
Declaration(NamedIndividual(:SG1_endEffector-has-heldObject-kit))
ClassAssertion(soap:SG1_EEffHasKitTray :SG1_endEffector-has-heldObject-kit)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :SG1_endEffector-has-heldObject-kit
                      "KitTray"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :SG1_endEffector-has-heldObject-kit
                      "EndEffector"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasSG1_EEffHasKitTray_StateRelation
                        :SG1_endEffector-has-heldObject-kit :PartiallyIn)
// 6 end soap:SG1_EEffHasKitTray
//*****************************************

ObjectPropertyAssertion(soap:hasG1_EEffHasKitTray_SubGroup_2
                        :G1_endEffector-has-heldObject-kit :SG2_endEffector-has-heldObject-kit)

//*****************************************
// 6 start soap:SG2_EEffHasKitTray SG2_endEffector-has-heldObject-kit
Declaration(NamedIndividual(:SG2_endEffector-has-heldObject-kit))
ClassAssertion(soap:SG2_EEffHasKitTray :SG2_endEffector-has-heldObject-kit)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :SG2_endEffector-has-heldObject-kit
                      "KitTray"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :SG2_endEffector-has-heldObject-kit
                      "EndEffector"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasSG2_EEffHasKitTray_StateRelation
                        :SG2_endEffector-has-heldObject-kit :ContainedIn)
// 6 end soap:SG2_EEffHasKitTray
//*****************************************

// 5 end soap:G1_EEffHasKitTray
//*****************************************

ObjectPropertyAssertion(soap:hasEEffHasKit_Group_2
                        :endEffector-has-heldObject-kit :G2_endEffector-has-heldObject-kit)

//*****************************************
// 5 start soap:G2_EEffHasKitTray G2_endEffector-has-heldObject-kit
Declaration(NamedIndividual(:G2_endEffector-has-heldObject-kit))
ClassAssertion(soap:G2_EEffHasKitTray :G2_endEffector-has-heldObject-kit)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :G2_endEffector-has-heldObject-kit
                      "SolidObject"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :G2_endEffector-has-heldObject-kit
                      "KitTray"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasG2_EEffHasKitTray_StateRelation
                        :G2_endEffector-has-heldObject-kit :NotUnderWithContact)
// 5 end soap:G2_EEffHasKitTray
//*****************************************

// 4 end soap:EEffHasKit
//*****************************************

ObjectPropertyAssertion(soap:hasPositivePredicateSet_EEffHasPart
                        :positive-predicates :endEffector-has-heldObject-part)

//*****************************************
// 4 start soap:EEffHasPart endEffector-has-heldObject-part
Declaration(NamedIndividual(:endEffector-has-heldObject-part))
ClassAssertion(soap:EEffHasPart :endEffector-has-heldObject-part)
DataPropertyAssertion(soap:hasPositivePredicate_Description :endEffector-has-heldObject-part
                      ";?endeffector is holding ?part"^^xsd:string)
DataPropertyAssertion(soap:hasPositivePredicate_ReferenceParameter :endEffector-has-heldObject-part
                      "EndEffector"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPositivePredicate_TargetParameter :endEffector-has-heldObject-part
                      "Part"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasEEffHasPart_Group_1
                        :endEffector-has-heldObject-part :G1_endEffector-has-heldObject-part)

//*****************************************
// 5 start soap:G1_EEffHasPart G1_endEffector-has-heldObject-part
Declaration(NamedIndividual(:G1_endEffector-has-heldObject-part))
ClassAssertion(soap:G1_EEffHasPart :G1_endEffector-has-heldObject-part)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :G1_endEffector-has-heldObject-part
                      "Part"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :G1_endEffector-has-heldObject-part
                      "EndEffector"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasG1_EEffHasPart_StateRelation
                        :G1_endEffector-has-heldObject-part :UnderWithContact)
// 5 end soap:G1_EEffHasPart
//*****************************************

ObjectPropertyAssertion(soap:hasEEffHasPart_Group_2
                        :endEffector-has-heldObject-part :G2_endEffector-has-heldObject-part)

//*****************************************
// 5 start soap:G2_EEffHasPart G2_endEffector-has-heldObject-part
Declaration(NamedIndividual(:G2_endEffector-has-heldObject-part))
ClassAssertion(soap:G2_EEffHasPart :G2_endEffector-has-heldObject-part)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :G2_endEffector-has-heldObject-part
                      "SolidObject"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :G2_endEffector-has-heldObject-part
                      "Part"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasG2_EEffHasPart_StateRelation
                        :G2_endEffector-has-heldObject-part :NotUnderWithContact)
// 5 end soap:G2_EEffHasPart
//*****************************************

// 4 end soap:EEffHasPart
//*****************************************

ObjectPropertyAssertion(soap:hasPositivePredicateSet_EEffHasNoObject
                        :positive-predicates :endEffector-has-no-heldObject)

//*****************************************
// 4 start soap:EEffHasNoObject endEffector-has-no-heldObject
Declaration(NamedIndividual(:endEffector-has-no-heldObject))
ClassAssertion(soap:EEffHasNoObject :endEffector-has-no-heldObject)
DataPropertyAssertion(soap:hasPositivePredicate_Description :endEffector-has-no-heldObject
                      ";?endeffector is not holding any object"^^xsd:string)
DataPropertyAssertion(soap:hasPositivePredicate_ReferenceParameter :endEffector-has-no-heldObject
                      "EndEffector"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasEEffHasNoObject_Group_1
                        :endEffector-has-no-heldObject :G1_endEffector-has-no-heldObject)

//*****************************************
// 5 start soap:G1_EEffHasNoObject G1_endEffector-has-no-heldObject
Declaration(NamedIndividual(:G1_endEffector-has-no-heldObject))
ClassAssertion(soap:G1_EEffHasNoObject :G1_endEffector-has-no-heldObject)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :G1_endEffector-has-no-heldObject
                      "SolidObject"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :G1_endEffector-has-no-heldObject
                      "EndEffector"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasG1_EEffHasNoObject_StateRelation
                        :G1_endEffector-has-no-heldObject :NotUnderWithContact)
// 5 end soap:G1_EEffHasNoObject
//*****************************************

// 4 end soap:EEffHasNoObject
//*****************************************

ObjectPropertyAssertion(soap:hasPositivePredicateSet_EEffHasRefObjectRobot
                        :positive-predicates :endEffector-has-physicalLocation-refObject-robot)

//*****************************************
// 4 start soap:EEffHasRefObjectRobot endEffector-has-physicalLocation-refObject-robot
Declaration(NamedIndividual(:endEffector-has-physicalLocation-refObject-robot))
ClassAssertion(soap:EEffHasRefObjectRobot :endEffector-has-physicalLocation-refObject-robot)
DataPropertyAssertion(soap:hasPositivePredicate_Description :endEffector-has-physicalLocation-refObject-robot
                      ";?endeffector is attached to ?robot"^^xsd:string)
DataPropertyAssertion(soap:hasPositivePredicate_ReferenceParameter :endEffector-has-physicalLocation-refObject-robot
                      "EndEffector"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPositivePredicate_TargetParameter :endEffector-has-physicalLocation-refObject-robot
                      "Robot"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasEEffHasRefObjectRobot_Group_1
                        :endEffector-has-physicalLocation-refObject-robot :G1_endEffector-has-physicalLocation-refObject-robot)

//*****************************************
// 5 start soap:G1_EEffHasRefObjectRobot G1_endEffector-has-physicalLocation-refObject-robot
Declaration(NamedIndividual(:G1_endEffector-has-physicalLocation-refObject-robot))
ClassAssertion(soap:G1_EEffHasRefObjectRobot :G1_endEffector-has-physicalLocation-refObject-robot)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :G1_endEffector-has-physicalLocation-refObject-robot
                      "EndEffector"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :G1_endEffector-has-physicalLocation-refObject-robot
                      "Robot"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasG1_EEffHasRefObjectRobot_StateRelation
                        :G1_endEffector-has-physicalLocation-refObject-robot :InContactWith)
// 5 end soap:G1_EEffHasRefObjectRobot
//*****************************************

// 4 end soap:EEffHasRefObjectRobot
//*****************************************

ObjectPropertyAssertion(soap:hasPositivePredicateSet_EEffHasRefObjectEEffHolder
                        :positive-predicates :endEffector-has-physicalLocation-refObject-endEffectorHolder)

//*****************************************
// 4 start soap:EEffHasEEffHolder endEffector-has-physicalLocation-refObject-endEffectorHolder
Declaration(NamedIndividual(:endEffector-has-physicalLocation-refObject-endEffectorHolder))
ClassAssertion(soap:EEffHasEEffHolder :endEffector-has-physicalLocation-refObject-endEffectorHolder)
DataPropertyAssertion(soap:hasPositivePredicate_Description :endEffector-has-physicalLocation-refObject-endEffectorHolder
                      ";?endeffector is located in ?endEffectorHolder"^^xsd:string)
DataPropertyAssertion(soap:hasPositivePredicate_ReferenceParameter :endEffector-has-physicalLocation-refObject-endEffectorHolder
                      "EndEffector"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPositivePredicate_TargetParameter :endEffector-has-physicalLocation-refObject-endEffectorHolder
                      "EndEffectorHolder"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasEEffHasEEffHolder_Group_1
                        :endEffector-has-physicalLocation-refObject-endEffectorHolder :G1_endEffector-has-physicalLocation-refObject-endEffectorHolder)

//*****************************************
// 5 start soap:G1_EEffHasEEffHolder G1_endEffector-has-physicalLocation-refObject-endEffectorHolder
Declaration(NamedIndividual(:G1_endEffector-has-physicalLocation-refObject-endEffectorHolder))
ClassAssertion(soap:G1_EEffHasEEffHolder :G1_endEffector-has-physicalLocation-refObject-endEffectorHolder)
ObjectPropertyAssertion(soap:hasG1_EEffHasEEffHolder_SubGroup_1
                        :G1_endEffector-has-physicalLocation-refObject-endEffectorHolder :SG1_endEffector-has-physicalLocation-refObject-endEffectorHolder)

//*****************************************
// 6 start soap:SG1_EEffHasEEffHolder SG1_endEffector-has-physicalLocation-refObject-endEffectorHolder
Declaration(NamedIndividual(:SG1_endEffector-has-physicalLocation-refObject-endEffectorHolder))
ClassAssertion(soap:SG1_EEffHasEEffHolder :SG1_endEffector-has-physicalLocation-refObject-endEffectorHolder)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :SG1_endEffector-has-physicalLocation-refObject-endEffectorHolder
                      "EndEffector"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :SG1_endEffector-has-physicalLocation-refObject-endEffectorHolder
                      "EndEffectorHolder"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasSG1_EEffHasEEffHolder_StateRelation
                        :SG1_endEffector-has-physicalLocation-refObject-endEffectorHolder :PartiallyIn)
// 6 end soap:SG1_EEffHasEEffHolder
//*****************************************

ObjectPropertyAssertion(soap:hasG1_EEffHasEEffHolder_SubGroup_2
                        :G1_endEffector-has-physicalLocation-refObject-endEffectorHolder :SG2_endEffector-has-physicalLocation-refObject-endEffectorHolder)

//*****************************************
// 6 start soap:SG2_EEffHasEEffHolder SG2_endEffector-has-physicalLocation-refObject-endEffectorHolder
Declaration(NamedIndividual(:SG2_endEffector-has-physicalLocation-refObject-endEffectorHolder))
ClassAssertion(soap:SG2_EEffHasEEffHolder :SG2_endEffector-has-physicalLocation-refObject-endEffectorHolder)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :SG2_endEffector-has-physicalLocation-refObject-endEffectorHolder
                      "EndEffector"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :SG2_endEffector-has-physicalLocation-refObject-endEffectorHolder
                      "EndEffectorHolder"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasSG2_EEffHasEEffHolder_StateRelation
                        :SG2_endEffector-has-physicalLocation-refObject-endEffectorHolder :ContainedIn)
// 6 end soap:SG2_EEffHasEEffHolder
//*****************************************

// 5 end soap:G1_EEffHasEEffHolder
//*****************************************

// 4 end soap:EEffHasEEffHolder
//*****************************************

ObjectPropertyAssertion(soap:hasPositivePredicateSet_EEffIsForKitTraySKU
                        :positive-predicates :endEffector-is-for-kitTraySKU)

//*****************************************
// 4 start soap:EEffIsForKitTraySKU endEffector-is-for-kitTraySKU
Declaration(NamedIndividual(:endEffector-is-for-kitTraySKU))
ClassAssertion(soap:EEffIsForKitTraySKU :endEffector-is-for-kitTraySKU)
DataPropertyAssertion(soap:hasPositivePredicate_Description :endEffector-is-for-kitTraySKU
                      ";?endEffector is for handling kit trays that have ?sku"^^xsd:string)
DataPropertyAssertion(soap:hasPositivePredicate_ReferenceParameter :endEffector-is-for-kitTraySKU
                      "EndEffector"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPositivePredicate_TargetParameter :endEffector-is-for-kitTraySKU
                      "StockKeepingUnit"^^xsd:NMTOKEN)
// 4 end soap:EEffIsForKitTraySKU
//*****************************************

ObjectPropertyAssertion(soap:hasPositivePredicateSet_EEffIsForPartSKU
                        :positive-predicates :endEffector-is-for-partSKU)

//*****************************************
// 4 start soap:EEffIsForPartSKU endEffector-is-for-partSKU
Declaration(NamedIndividual(:endEffector-is-for-partSKU))
ClassAssertion(soap:EEffIsForPartSKU :endEffector-is-for-partSKU)
DataPropertyAssertion(soap:hasPositivePredicate_Description :endEffector-is-for-partSKU
                      ";?endEffector is for handling parts that have ?sku"^^xsd:string)
DataPropertyAssertion(soap:hasPositivePredicate_ReferenceParameter :endEffector-is-for-partSKU
                      "EndEffector"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPositivePredicate_TargetParameter :endEffector-is-for-partSKU
                      "StockKeepingUnit"^^xsd:NMTOKEN)
// 4 end soap:EEffIsForPartSKU
//*****************************************

ObjectPropertyAssertion(soap:hasPositivePredicateSet_ChStationHasEEffHolder
                        :positive-predicates :endEffectorChangingStation-has-endEffectorHolder)

//*****************************************
// 4 start soap:ChStationHasEEffHolder endEffectorChangingStation-has-endEffectorHolder
Declaration(NamedIndividual(:endEffectorChangingStation-has-endEffectorHolder))
ClassAssertion(soap:ChStationHasEEffHolder :endEffectorChangingStation-has-endEffectorHolder)
DataPropertyAssertion(soap:hasPositivePredicate_Description :endEffectorChangingStation-has-endEffectorHolder
                      ";?changingstation contains ?endeffectorholder"^^xsd:string)
DataPropertyAssertion(soap:hasPositivePredicate_ReferenceParameter :endEffectorChangingStation-has-endEffectorHolder
                      "EndEffectorChangingStation"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPositivePredicate_TargetParameter :endEffectorChangingStation-has-endEffectorHolder
                      "EndEffectorHolder"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasChStationHasEEffHolder_Group_1
                        :endEffectorChangingStation-has-endEffectorHolder :G1_endEffectorChangingStation-has-endEffectorHolder)

//*****************************************
// 5 start soap:G1_ChStationHasEEffHolder G1_endEffectorChangingStation-has-endEffectorHolder
Declaration(NamedIndividual(:G1_endEffectorChangingStation-has-endEffectorHolder))
ClassAssertion(soap:G1_ChStationHasEEffHolder :G1_endEffectorChangingStation-has-endEffectorHolder)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :G1_endEffectorChangingStation-has-endEffectorHolder
                      "EndEffectorChangingStation"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :G1_endEffectorChangingStation-has-endEffectorHolder
                      "EndEffector"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasG1_ChStationHasEEffHolder_StateRelation
                        :G1_endEffectorChangingStation-has-endEffectorHolder :InContactWith)
// 5 end soap:G1_ChStationHasEEffHolder
//*****************************************

// 4 end soap:ChStationHasEEffHolder
//*****************************************

ObjectPropertyAssertion(soap:hasPositivePredicateSet_EEffHolderHasEEff
                        :positive-predicates :endEffectorHolder-has-endEffector)

//*****************************************
// 4 start soap:EEffHolderHasEEff endEffectorHolder-has-endEffector
Declaration(NamedIndividual(:endEffectorHolder-has-endEffector))
ClassAssertion(soap:EEffHolderHasEEff :endEffectorHolder-has-endEffector)
DataPropertyAssertion(soap:hasPositivePredicate_Description :endEffectorHolder-has-endEffector
                      ";?endeffectorholder is holding ?endeffector"^^xsd:string)
DataPropertyAssertion(soap:hasPositivePredicate_ReferenceParameter :endEffectorHolder-has-endEffector
                      "EndEffectorHolder"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPositivePredicate_TargetParameter :endEffectorHolder-has-endEffector
                      "EndEffector"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasEEffHolderHasEEff_Group_1
                        :endEffectorHolder-has-endEffector :G1_endEffectorHolder-has-endEffector)

//*****************************************
// 5 start soap:G1_EEffHolderHasEEff G1_endEffectorHolder-has-endEffector
Declaration(NamedIndividual(:G1_endEffectorHolder-has-endEffector))
ClassAssertion(soap:G1_EEffHolderHasEEff :G1_endEffectorHolder-has-endEffector)
ObjectPropertyAssertion(soap:hasG1_EEffHolderHasEEff_SubGroup_1
                        :G1_endEffectorHolder-has-endEffector :SG1_endEffectorHolder-has-endEffector)

//*****************************************
// 6 start soap:SG1_EEffHolderHasEEff SG1_endEffectorHolder-has-endEffector
Declaration(NamedIndividual(:SG1_endEffectorHolder-has-endEffector))
ClassAssertion(soap:SG1_EEffHolderHasEEff :SG1_endEffectorHolder-has-endEffector)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :SG1_endEffectorHolder-has-endEffector
                      "EndEffector"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :SG1_endEffectorHolder-has-endEffector
                      "EndEffectorHolder"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasSG1_EEffHolderHasEEff_StateRelation
                        :SG1_endEffectorHolder-has-endEffector :PartiallyIn)
// 6 end soap:SG1_EEffHolderHasEEff
//*****************************************

ObjectPropertyAssertion(soap:hasG1_EEffHolderHasEEff_SubGroup_2
                        :G1_endEffectorHolder-has-endEffector :SG2_endEffectorHolder-has-endEffector)

//*****************************************
// 6 start soap:SG2_EEffHolderHasEEff SG2_endEffectorHolder-has-endEffector
Declaration(NamedIndividual(:SG2_endEffectorHolder-has-endEffector))
ClassAssertion(soap:SG2_EEffHolderHasEEff :SG2_endEffectorHolder-has-endEffector)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :SG2_endEffectorHolder-has-endEffector
                      "EndEffector"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :SG2_endEffectorHolder-has-endEffector
                      "EndEffectorHolder"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasSG2_EEffHolderHasEEff_StateRelation
                        :SG2_endEffectorHolder-has-endEffector :ContainedIn)
// 6 end soap:SG2_EEffHolderHasEEff
//*****************************************

// 5 end soap:G1_EEffHolderHasEEff
//*****************************************

// 4 end soap:EEffHolderHasEEff
//*****************************************

ObjectPropertyAssertion(soap:hasPositivePredicateSet_EEffHolderHasRefObjectChStation
                        :positive-predicates :endEffectorHolder-has-physicalLocation-refObject-changingStation)

//*****************************************
// 4 start soap:EEffHHasChStation endEffectorHolder-has-physicalLocation-refObject-changingStation
Declaration(NamedIndividual(:endEffectorHolder-has-physicalLocation-refObject-changingStation))
ClassAssertion(soap:EEffHHasChStation :endEffectorHolder-has-physicalLocation-refObject-changingStation)
DataPropertyAssertion(soap:hasPositivePredicate_Description :endEffectorHolder-has-physicalLocation-refObject-changingStation
                      ";?endeffectorholder is located in ?changingstation"^^xsd:string)
DataPropertyAssertion(soap:hasPositivePredicate_ReferenceParameter :endEffectorHolder-has-physicalLocation-refObject-changingStation
                      "EndEffectorHolder"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPositivePredicate_TargetParameter :endEffectorHolder-has-physicalLocation-refObject-changingStation
                      "EndEffectorChangingStation"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasEEffHHasChStation_Group_1
                        :endEffectorHolder-has-physicalLocation-refObject-changingStation :G1_endEffectorHolder-has-physicalLocation-refObject-changingStation)

//*****************************************
// 5 start soap:G1_EEffHHasChStation G1_endEffectorHolder-has-physicalLocation-refObject-changingStation
Declaration(NamedIndividual(:G1_endEffectorHolder-has-physicalLocation-refObject-changingStation))
ClassAssertion(soap:G1_EEffHHasChStation :G1_endEffectorHolder-has-physicalLocation-refObject-changingStation)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :G1_endEffectorHolder-has-physicalLocation-refObject-changingStation
                      "EndEffectorHolder"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :G1_endEffectorHolder-has-physicalLocation-refObject-changingStation
                      "EndEffectorChangingStation"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasG1_EEffHHasChStation_StateRelation
                        :G1_endEffectorHolder-has-physicalLocation-refObject-changingStation :InContactWith)
// 5 end soap:G1_EEffHHasChStation
//*****************************************

// 4 end soap:EEffHHasChStation
//*****************************************

ObjectPropertyAssertion(soap:hasPositivePredicateSet_KitExists
                        :positive-predicates :kit-exists)

//*****************************************
// 4 start soap:KitExists kit-exists
Declaration(NamedIndividual(:kit-exists))
ClassAssertion(soap:KitExists :kit-exists)
DataPropertyAssertion(soap:hasPositivePredicate_Description :kit-exists
                      ";?kit exists"^^xsd:string)
DataPropertyAssertion(soap:hasPositivePredicate_ReferenceParameter :kit-exists
                      "Kit"^^xsd:NMTOKEN)
// 4 end soap:KitExists
//*****************************************

ObjectPropertyAssertion(soap:hasPositivePredicateSet_KitHasKitTray
                        :positive-predicates :kit-has-kitTray)

//*****************************************
// 4 start soap:KitHasKitTray kit-has-kitTray
Declaration(NamedIndividual(:kit-has-kitTray))
ClassAssertion(soap:KitHasKitTray :kit-has-kitTray)
DataPropertyAssertion(soap:hasPositivePredicate_Description :kit-has-kitTray
                      ";?kit has ?kittray"^^xsd:string)
DataPropertyAssertion(soap:hasPositivePredicate_ReferenceParameter :kit-has-kitTray
                      "Kit"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPositivePredicate_TargetParameter :kit-has-kitTray
                      "KitTray"^^xsd:NMTOKEN)
// 4 end soap:KitHasKitTray
//*****************************************

ObjectPropertyAssertion(soap:hasPositivePredicateSet_KitHasRefObjectLBWK
                        :positive-predicates :kit-has-physicalLocation-refObject-lbwk)

//*****************************************
// 4 start soap:KitHasRefObjectLBWK kit-has-physicalLocation-refObject-lbwk
Declaration(NamedIndividual(:kit-has-physicalLocation-refObject-lbwk))
ClassAssertion(soap:KitHasRefObjectLBWK :kit-has-physicalLocation-refObject-lbwk)
DataPropertyAssertion(soap:hasPositivePredicate_Description :kit-has-physicalLocation-refObject-lbwk
                      ";?kit is located in ?lbwk"^^xsd:string)
DataPropertyAssertion(soap:hasPositivePredicate_ReferenceParameter :kit-has-physicalLocation-refObject-lbwk
                      "Kit"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPositivePredicate_TargetParameter :kit-has-physicalLocation-refObject-lbwk
                      "LargeBoxWithKits"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasKitHasRefObjectLBWK_Group_1
                        :kit-has-physicalLocation-refObject-lbwk :G1_kit-has-physicalLocation-refObject-lbwk)

//*****************************************
// 5 start soap:G1_KitHasRefObjectLBWK G1_kit-has-physicalLocation-refObject-lbwk
Declaration(NamedIndividual(:G1_kit-has-physicalLocation-refObject-lbwk))
ClassAssertion(soap:G1_KitHasRefObjectLBWK :G1_kit-has-physicalLocation-refObject-lbwk)
ObjectPropertyAssertion(soap:hasG1_KitHasRefObjectLBWK_SubGroup_1
                        :G1_kit-has-physicalLocation-refObject-lbwk :SG1_kit-has-physicalLocation-refObject-lbwk)

//*****************************************
// 6 start soap:SG1_KitHasRefObjectLBWK SG1_kit-has-physicalLocation-refObject-lbwk
Declaration(NamedIndividual(:SG1_kit-has-physicalLocation-refObject-lbwk))
ClassAssertion(soap:SG1_KitHasRefObjectLBWK :SG1_kit-has-physicalLocation-refObject-lbwk)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :SG1_kit-has-physicalLocation-refObject-lbwk
                      "Kit"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :SG1_kit-has-physicalLocation-refObject-lbwk
                      "LargeBoxWithKits"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasSG1_KitHasRefObjectLBWK_StateRelation
                        :SG1_kit-has-physicalLocation-refObject-lbwk :PartiallyIn)
// 6 end soap:SG1_KitHasRefObjectLBWK
//*****************************************

ObjectPropertyAssertion(soap:hasG1_KitHasRefObjectLBWK_SubGroup_2
                        :G1_kit-has-physicalLocation-refObject-lbwk :SG2_kit-has-physicalLocation-refObject-lbwk)

//*****************************************
// 6 start soap:SG2_KitHasRefObjectLBWK SG2_kit-has-physicalLocation-refObject-lbwk
Declaration(NamedIndividual(:SG2_kit-has-physicalLocation-refObject-lbwk))
ClassAssertion(soap:SG2_KitHasRefObjectLBWK :SG2_kit-has-physicalLocation-refObject-lbwk)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :SG2_kit-has-physicalLocation-refObject-lbwk
                      "Kit"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :SG2_kit-has-physicalLocation-refObject-lbwk
                      "LargeBoxWithKits"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasSG2_KitHasRefObjectLBWK_StateRelation
                        :SG2_kit-has-physicalLocation-refObject-lbwk :ContainedIn)
// 6 end soap:SG2_KitHasRefObjectLBWK
//*****************************************

// 5 end soap:G1_KitHasRefObjectLBWK
//*****************************************

// 4 end soap:KitHasRefObjectLBWK
//*****************************************

ObjectPropertyAssertion(soap:hasPositivePredicateSet_KitHasRefObjectWorkTable
                        :positive-predicates :kit-has-physicalLocation-refObject-workTable)

//*****************************************
// 4 start soap:KitHasRefObjectWorkTable kit-has-physicalLocation-refObject-workTable
Declaration(NamedIndividual(:kit-has-physicalLocation-refObject-workTable))
ClassAssertion(soap:KitHasRefObjectWorkTable :kit-has-physicalLocation-refObject-workTable)
DataPropertyAssertion(soap:hasPositivePredicate_Description :kit-has-physicalLocation-refObject-workTable
                      ";?kit is on ?worktable"^^xsd:string)
DataPropertyAssertion(soap:hasPositivePredicate_ReferenceParameter :kit-has-physicalLocation-refObject-workTable
                      "Kit"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPositivePredicate_TargetParameter :kit-has-physicalLocation-refObject-workTable
                      "WorkTable"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasKitHasRefObjectWorkTable_Group_1
                        :kit-has-physicalLocation-refObject-workTable :G1_kit-has-physicalLocation-refObject-workTable)

//*****************************************
// 5 start soap:G1_KitHasRefObjectWorkTable G1_kit-has-physicalLocation-refObject-workTable
Declaration(NamedIndividual(:G1_kit-has-physicalLocation-refObject-workTable))
ClassAssertion(soap:G1_KitHasRefObjectWorkTable :G1_kit-has-physicalLocation-refObject-workTable)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :G1_kit-has-physicalLocation-refObject-workTable
                      "Kit"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :G1_kit-has-physicalLocation-refObject-workTable
                      "WorkTable"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasG1_KitHasRefObjectWorkTable_StateRelation
                        :G1_kit-has-physicalLocation-refObject-workTable :OnTopWithContact)
// 5 end soap:G1_KitHasRefObjectWorkTable
//*****************************************

// 4 end soap:KitHasRefObjectWorkTable
//*****************************************

ObjectPropertyAssertion(soap:hasPositivePredicateSet_KitHasRefObjectEEff
                        :positive-predicates :kit-has-physicalLocation-refObject-endEffector)

//*****************************************
// 4 start soap:KitHasRefObjectEEff kit-has-physicalLocation-refObject-endEffector
Declaration(NamedIndividual(:kit-has-physicalLocation-refObject-endEffector))
ClassAssertion(soap:KitHasRefObjectEEff :kit-has-physicalLocation-refObject-endEffector)
DataPropertyAssertion(soap:hasPositivePredicate_Description :kit-has-physicalLocation-refObject-endEffector
                      ";?kit is held by ?endeffector"^^xsd:string)
DataPropertyAssertion(soap:hasPositivePredicate_ReferenceParameter :kit-has-physicalLocation-refObject-endEffector
                      "Kit"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPositivePredicate_TargetParameter :kit-has-physicalLocation-refObject-endEffector
                      "EndEffector"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasKitHasRefObjectEEff_Group_1
                        :kit-has-physicalLocation-refObject-endEffector :G1_kit-has-physicalLocation-refObject-endEffector)

//*****************************************
// 5 start soap:G1_KitHasRefObjectEEff G1_kit-has-physicalLocation-refObject-endEffector
Declaration(NamedIndividual(:G1_kit-has-physicalLocation-refObject-endEffector))
ClassAssertion(soap:G1_KitHasRefObjectEEff :G1_kit-has-physicalLocation-refObject-endEffector)
ObjectPropertyAssertion(soap:hasG1_KitHasRefObjectEEff_SubGroup_1
                        :G1_kit-has-physicalLocation-refObject-endEffector :SG1_kit-has-physicalLocation-refObject-endEffector)

//*****************************************
// 6 start soap:SG1_KitHasRefObjectEEff SG1_kit-has-physicalLocation-refObject-endEffector
Declaration(NamedIndividual(:SG1_kit-has-physicalLocation-refObject-endEffector))
ClassAssertion(soap:SG1_KitHasRefObjectEEff :SG1_kit-has-physicalLocation-refObject-endEffector)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :SG1_kit-has-physicalLocation-refObject-endEffector
                      "Kit"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :SG1_kit-has-physicalLocation-refObject-endEffector
                      "EndEffector"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasSG1_KitHasRefObjectEEff_StateRelation
                        :SG1_kit-has-physicalLocation-refObject-endEffector :PartiallyIn)
// 6 end soap:SG1_KitHasRefObjectEEff
//*****************************************

ObjectPropertyAssertion(soap:hasG1_KitHasRefObjectEEff_SubGroup_2
                        :G1_kit-has-physicalLocation-refObject-endEffector :SG2_kit-has-physicalLocation-refObject-endEffector)

//*****************************************
// 6 start soap:SG2_KitHasRefObjectEEff SG2_kit-has-physicalLocation-refObject-endEffector
Declaration(NamedIndividual(:SG2_kit-has-physicalLocation-refObject-endEffector))
ClassAssertion(soap:SG2_KitHasRefObjectEEff :SG2_kit-has-physicalLocation-refObject-endEffector)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :SG2_kit-has-physicalLocation-refObject-endEffector
                      "Kit"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :SG2_kit-has-physicalLocation-refObject-endEffector
                      "EndEffector"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasSG2_KitHasRefObjectEEff_StateRelation
                        :SG2_kit-has-physicalLocation-refObject-endEffector :ContainedIn)
// 6 end soap:SG2_KitHasRefObjectEEff
//*****************************************

// 5 end soap:G1_KitHasRefObjectEEff
//*****************************************

ObjectPropertyAssertion(soap:hasKitHasRefObjectEEff_Group_2
                        :kit-has-physicalLocation-refObject-endEffector :G2_kit-has-physicalLocation-refObject-endEffector)

//*****************************************
// 5 start soap:G2_KitHasRefObjectEEff G2_kit-has-physicalLocation-refObject-endEffector
Declaration(NamedIndividual(:G2_kit-has-physicalLocation-refObject-endEffector))
ClassAssertion(soap:G2_KitHasRefObjectEEff :G2_kit-has-physicalLocation-refObject-endEffector)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :G2_kit-has-physicalLocation-refObject-endEffector
                      "SolidObject"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :G2_kit-has-physicalLocation-refObject-endEffector
                      "Kit"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasG2_KitHasRefObjectEEff_StateRelation
                        :G2_kit-has-physicalLocation-refObject-endEffector :NotUnderWithContact)
// 5 end soap:G2_KitHasRefObjectEEff
//*****************************************

// 4 end soap:KitHasRefObjectEEff
//*****************************************

ObjectPropertyAssertion(soap:hasPositivePredicateSet_KitTrayHasSKUObjectSKU
                        :positive-predicates :kitTray-has-skuObject-sku)

//*****************************************
// 4 start soap:KitTrayHasSKUObjectSKU kitTray-has-skuObject-sku
Declaration(NamedIndividual(:kitTray-has-skuObject-sku))
ClassAssertion(soap:KitTrayHasSKUObjectSKU :kitTray-has-skuObject-sku)
DataPropertyAssertion(soap:hasPositivePredicate_Description :kitTray-has-skuObject-sku
                      ";?kittray has ?sku"^^xsd:string)
DataPropertyAssertion(soap:hasPositivePredicate_ReferenceParameter :kitTray-has-skuObject-sku
                      "KitTray"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPositivePredicate_TargetParameter :kitTray-has-skuObject-sku
                      "StockKeepingUnit"^^xsd:NMTOKEN)
// 4 end soap:KitTrayHasSKUObjectSKU
//*****************************************

ObjectPropertyAssertion(soap:hasPositivePredicateSet_KitTrayHasRefObjectLBWEKT
                        :positive-predicates :kitTray-has-physicalLocation-refObject-lbwekt)

//*****************************************
// 4 start soap:KitTrayHasRefObjectLBWEKT kitTray-has-physicalLocation-refObject-lbwekt
Declaration(NamedIndividual(:kitTray-has-physicalLocation-refObject-lbwekt))
ClassAssertion(soap:KitTrayHasRefObjectLBWEKT :kitTray-has-physicalLocation-refObject-lbwekt)
DataPropertyAssertion(soap:hasPositivePredicate_Description :kitTray-has-physicalLocation-refObject-lbwekt
                      ";?kittray is located in ?lbwekt"^^xsd:string)
DataPropertyAssertion(soap:hasPositivePredicate_ReferenceParameter :kitTray-has-physicalLocation-refObject-lbwekt
                      "KitTray"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPositivePredicate_TargetParameter :kitTray-has-physicalLocation-refObject-lbwekt
                      "LargeBoxWithEmptyKitTrays"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasKitTrayHasRefObjectLBWEKT_Group_1
                        :kitTray-has-physicalLocation-refObject-lbwekt :G1_kitTray-has-physicalLocation-refObject-lbwekt)

//*****************************************
// 5 start soap:G1_KitTrayHasRefObjectLBWEKT G1_kitTray-has-physicalLocation-refObject-lbwekt
Declaration(NamedIndividual(:G1_kitTray-has-physicalLocation-refObject-lbwekt))
ClassAssertion(soap:G1_KitTrayHasRefObjectLBWEKT :G1_kitTray-has-physicalLocation-refObject-lbwekt)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :G1_kitTray-has-physicalLocation-refObject-lbwekt
                      "KitTray"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :G1_kitTray-has-physicalLocation-refObject-lbwekt
                      "LargeBoxWithEmptyKitTrays"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasG1_KitTrayHasRefObjectLBWEKT_StateRelation
                        :G1_kitTray-has-physicalLocation-refObject-lbwekt :ContainedIn)
// 5 end soap:G1_KitTrayHasRefObjectLBWEKT
//*****************************************

// 4 end soap:KitTrayHasRefObjectLBWEKT
//*****************************************

ObjectPropertyAssertion(soap:hasPositivePredicateSet_KitTrayHasRefObjectEEff
                        :positive-predicates :kitTray-has-physicalLocation-refObject-endEffector)

//*****************************************
// 4 start soap:KitTrayHasRefObjectEEff kitTray-has-physicalLocation-refObject-endEffector
Declaration(NamedIndividual(:kitTray-has-physicalLocation-refObject-endEffector))
ClassAssertion(soap:KitTrayHasRefObjectEEff :kitTray-has-physicalLocation-refObject-endEffector)
DataPropertyAssertion(soap:hasPositivePredicate_Description :kitTray-has-physicalLocation-refObject-endEffector
                      ";?kittray is held by ?endeffector"^^xsd:string)
DataPropertyAssertion(soap:hasPositivePredicate_ReferenceParameter :kitTray-has-physicalLocation-refObject-endEffector
                      "KitTray"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPositivePredicate_TargetParameter :kitTray-has-physicalLocation-refObject-endEffector
                      "EndEffector"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasKitTrayHasRefObjectEEff_Group_1
                        :kitTray-has-physicalLocation-refObject-endEffector :G1_kitTray-has-physicalLocation-refObject-endEffector)

//*****************************************
// 5 start soap:G1_KitTrayHasRefObjectEEff G1_kitTray-has-physicalLocation-refObject-endEffector
Declaration(NamedIndividual(:G1_kitTray-has-physicalLocation-refObject-endEffector))
ClassAssertion(soap:G1_KitTrayHasRefObjectEEff :G1_kitTray-has-physicalLocation-refObject-endEffector)
ObjectPropertyAssertion(soap:hasG1_KitTrayHasRefObjectEEff_SubGroup_1
                        :G1_kitTray-has-physicalLocation-refObject-endEffector :SG1_kitTray-has-physicalLocation-refObject-endEffector)

//*****************************************
// 6 start soap:SG1_KitTrayHasRefObjectEEff SG1_kitTray-has-physicalLocation-refObject-endEffector
Declaration(NamedIndividual(:SG1_kitTray-has-physicalLocation-refObject-endEffector))
ClassAssertion(soap:SG1_KitTrayHasRefObjectEEff :SG1_kitTray-has-physicalLocation-refObject-endEffector)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :SG1_kitTray-has-physicalLocation-refObject-endEffector
                      "KitTray"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :SG1_kitTray-has-physicalLocation-refObject-endEffector
                      "EndEffector"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasSG1_KitTrayHasRefObjectEEff_StateRelation
                        :SG1_kitTray-has-physicalLocation-refObject-endEffector :PartiallyIn)
// 6 end soap:SG1_KitTrayHasRefObjectEEff
//*****************************************

ObjectPropertyAssertion(soap:hasG1_KitTrayHasRefObjectEEff_SubGroup_2
                        :G1_kitTray-has-physicalLocation-refObject-endEffector :SG2_kitTray-has-physicalLocation-refObject-endEffector)

//*****************************************
// 6 start soap:SG2_KitTrayHasRefObjectEEff SG2_kitTray-has-physicalLocation-refObject-endEffector
Declaration(NamedIndividual(:SG2_kitTray-has-physicalLocation-refObject-endEffector))
ClassAssertion(soap:SG2_KitTrayHasRefObjectEEff :SG2_kitTray-has-physicalLocation-refObject-endEffector)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :SG2_kitTray-has-physicalLocation-refObject-endEffector
                      "KitTray"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :SG2_kitTray-has-physicalLocation-refObject-endEffector
                      "EndEffector"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasSG2_KitTrayHasRefObjectEEff_StateRelation
                        :SG2_kitTray-has-physicalLocation-refObject-endEffector :ContainedIn)
// 6 end soap:SG2_KitTrayHasRefObjectEEff
//*****************************************

// 5 end soap:G1_KitTrayHasRefObjectEEff
//*****************************************

ObjectPropertyAssertion(soap:hasKitTrayHasRefObjectEEff_Group_2
                        :kitTray-has-physicalLocation-refObject-endEffector :G2_kitTray-has-physicalLocation-refObject-endEffector)

//*****************************************
// 5 start soap:G2_KitTrayHasRefObjectEEff G2_kitTray-has-physicalLocation-refObject-endEffector
Declaration(NamedIndividual(:G2_kitTray-has-physicalLocation-refObject-endEffector))
ClassAssertion(soap:G2_KitTrayHasRefObjectEEff :G2_kitTray-has-physicalLocation-refObject-endEffector)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :G2_kitTray-has-physicalLocation-refObject-endEffector
                      "SolidObject"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :G2_kitTray-has-physicalLocation-refObject-endEffector
                      "KitTray"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasG2_KitTrayHasRefObjectEEff_StateRelation
                        :G2_kitTray-has-physicalLocation-refObject-endEffector :NotUnderWithContact)
// 5 end soap:G2_KitTrayHasRefObjectEEff
//*****************************************

// 4 end soap:KitTrayHasRefObjectEEff
//*****************************************

ObjectPropertyAssertion(soap:hasPositivePredicateSet_KitTrayHasRefObjectKit
                        :positive-predicates :kitTray-has-physicalLocation-refObject-kit)

//*****************************************
// 4 start soap:KitTrayHasRefObjectKit kitTray-has-physicalLocation-refObject-kit
Declaration(NamedIndividual(:kitTray-has-physicalLocation-refObject-kit))
ClassAssertion(soap:KitTrayHasRefObjectKit :kitTray-has-physicalLocation-refObject-kit)
DataPropertyAssertion(soap:hasPositivePredicate_Description :kitTray-has-physicalLocation-refObject-kit
                      ";?kittray is related to ?kit"^^xsd:string)
DataPropertyAssertion(soap:hasPositivePredicate_ReferenceParameter :kitTray-has-physicalLocation-refObject-kit
                      "KitTray"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPositivePredicate_TargetParameter :kitTray-has-physicalLocation-refObject-kit
                      "Kit"^^xsd:NMTOKEN)
// 4 end soap:KitTrayHasRefObjectKit
//*****************************************

ObjectPropertyAssertion(soap:hasPositivePredicateSet_KitTrayHasRefObjectWorkTable
                        :positive-predicates :kitTray-has-physicalLocation-refObject-workTable)

//*****************************************
// 4 start soap:KTrayHasRefObjectWTable kitTray-has-physicalLocation-refObject-workTable
Declaration(NamedIndividual(:kitTray-has-physicalLocation-refObject-workTable))
ClassAssertion(soap:KTrayHasRefObjectWTable :kitTray-has-physicalLocation-refObject-workTable)
DataPropertyAssertion(soap:hasPositivePredicate_Description :kitTray-has-physicalLocation-refObject-workTable
                      ";?kittray is on ?worktable"^^xsd:string)
DataPropertyAssertion(soap:hasPositivePredicate_ReferenceParameter :kitTray-has-physicalLocation-refObject-workTable
                      "KitTray"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPositivePredicate_TargetParameter :kitTray-has-physicalLocation-refObject-workTable
                      "WorkTable"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasKTrayHasRefObjectWTable_Group_1
                        :kitTray-has-physicalLocation-refObject-workTable :G1_kitTray-has-physicalLocation-refObject-workTable)

//*****************************************
// 5 start soap:G1_KTrayHasRefObjectWTable G1_kitTray-has-physicalLocation-refObject-workTable
Declaration(NamedIndividual(:G1_kitTray-has-physicalLocation-refObject-workTable))
ClassAssertion(soap:G1_KTrayHasRefObjectWTable :G1_kitTray-has-physicalLocation-refObject-workTable)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :G1_kitTray-has-physicalLocation-refObject-workTable
                      "KitTray"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :G1_kitTray-has-physicalLocation-refObject-workTable
                      "WorkTable"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasG1_KTrayHasRefObjectWTable_StateRelation
                        :G1_kitTray-has-physicalLocation-refObject-workTable :OnTopWithContact)
// 5 end soap:G1_KTrayHasRefObjectWTable
//*****************************************

// 4 end soap:KTrayHasRefObjectWTable
//*****************************************

ObjectPropertyAssertion(soap:hasPositivePredicateSet_LBWKHasKit
                        :positive-predicates :lbwk-has-kit)

//*****************************************
// 4 start soap:LBWKHasKit lbwk-has-kit
Declaration(NamedIndividual(:lbwk-has-kit))
ClassAssertion(soap:LBWKHasKit :lbwk-has-kit)
DataPropertyAssertion(soap:hasPositivePredicate_Description :lbwk-has-kit
                      ";?lbwk contains ?kit"^^xsd:string)
DataPropertyAssertion(soap:hasPositivePredicate_ReferenceParameter :lbwk-has-kit
                      "LargeBoxWithKits"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPositivePredicate_TargetParameter :lbwk-has-kit
                      "Kit"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasLBWKHasKit_Group_1
                        :lbwk-has-kit :G1_lbwk-has-kit)

//*****************************************
// 5 start soap:G1_LBWKHasKit G1_lbwk-has-kit
Declaration(NamedIndividual(:G1_lbwk-has-kit))
ClassAssertion(soap:G1_LBWKHasKit :G1_lbwk-has-kit)
ObjectPropertyAssertion(soap:hasG1_LBWKHasKit_SubGroup_1
                        :G1_lbwk-has-kit :SG1_lbwk-has-kit)

//*****************************************
// 6 start soap:SG1_LBWKHasKit SG1_lbwk-has-kit
Declaration(NamedIndividual(:SG1_lbwk-has-kit))
ClassAssertion(soap:SG1_LBWKHasKit :SG1_lbwk-has-kit)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :SG1_lbwk-has-kit
                      "Kit"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :SG1_lbwk-has-kit
                      "LargeBoxWithKits"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasSG1_LBWKHasKit_StateRelation
                        :SG1_lbwk-has-kit :PartiallyIn)
// 6 end soap:SG1_LBWKHasKit
//*****************************************

ObjectPropertyAssertion(soap:hasG1_LBWKHasKit_SubGroup_2
                        :G1_lbwk-has-kit :SG2_lbwk-has-kit)

//*****************************************
// 6 start soap:SG2_LBWKHasKit SG2_lbwk-has-kit
Declaration(NamedIndividual(:SG2_lbwk-has-kit))
ClassAssertion(soap:SG2_LBWKHasKit :SG2_lbwk-has-kit)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :SG2_lbwk-has-kit
                      "Kit"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :SG2_lbwk-has-kit
                      "LargeBoxWithKits"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasSG2_LBWKHasKit_StateRelation
                        :SG2_lbwk-has-kit :ContainedIn)
// 6 end soap:SG2_LBWKHasKit
//*****************************************

// 5 end soap:G1_LBWKHasKit
//*****************************************

// 4 end soap:LBWKHasKit
//*****************************************

ObjectPropertyAssertion(soap:hasPositivePredicateSet_PartHasSKUObjectSKU
                        :positive-predicates :part-has-skuObject-sku)

//*****************************************
// 4 start soap:PartHasSKUObjectSKU part-has-skuObject-sku
Declaration(NamedIndividual(:part-has-skuObject-sku))
ClassAssertion(soap:PartHasSKUObjectSKU :part-has-skuObject-sku)
DataPropertyAssertion(soap:hasPositivePredicate_Description :part-has-skuObject-sku
                      ";?part has ?sku"^^xsd:string)
DataPropertyAssertion(soap:hasPositivePredicate_ReferenceParameter :part-has-skuObject-sku
                      "Part"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPositivePredicate_TargetParameter :part-has-skuObject-sku
                      "StockKeepingUnit"^^xsd:NMTOKEN)
// 4 end soap:PartHasSKUObjectSKU
//*****************************************

ObjectPropertyAssertion(soap:hasPositivePredicateSet_PartHasRefObjectPartsTray
                        :positive-predicates :part-has-physicalLocation-refObject-partsTray)

//*****************************************
// 4 start soap:PartHasRefObjectPartsTray part-has-physicalLocation-refObject-partsTray
Declaration(NamedIndividual(:part-has-physicalLocation-refObject-partsTray))
ClassAssertion(soap:PartHasRefObjectPartsTray :part-has-physicalLocation-refObject-partsTray)
DataPropertyAssertion(soap:hasPositivePredicate_Description :part-has-physicalLocation-refObject-partsTray
                      ";?part is in ?partsTray"^^xsd:string)
DataPropertyAssertion(soap:hasPositivePredicate_ReferenceParameter :part-has-physicalLocation-refObject-partsTray
                      "Part"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPositivePredicate_TargetParameter :part-has-physicalLocation-refObject-partsTray
                      "PartsTray"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasPartHasRefObjectPartsTray_Group_1
                        :part-has-physicalLocation-refObject-partsTray :G1_part-has-physicalLocation-refObject-partsTray)

//*****************************************
// 5 start soap:G1_PartHasRefObjectPartsTray G1_part-has-physicalLocation-refObject-partsTray
Declaration(NamedIndividual(:G1_part-has-physicalLocation-refObject-partsTray))
ClassAssertion(soap:G1_PartHasRefObjectPartsTray :G1_part-has-physicalLocation-refObject-partsTray)
ObjectPropertyAssertion(soap:hasG1_PartHasRefObjectPartsTray_SubGroup_1
                        :G1_part-has-physicalLocation-refObject-partsTray :SG1_part-has-physicalLocation-refObject-partsTray)

//*****************************************
// 6 start soap:SG1_PartHasRefObjectPartsTray SG1_part-has-physicalLocation-refObject-partsTray
Declaration(NamedIndividual(:SG1_part-has-physicalLocation-refObject-partsTray))
ClassAssertion(soap:SG1_PartHasRefObjectPartsTray :SG1_part-has-physicalLocation-refObject-partsTray)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :SG1_part-has-physicalLocation-refObject-partsTray
                      "Part"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :SG1_part-has-physicalLocation-refObject-partsTray
                      "PartsTray"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasSG1_PartHasRefObjectPartsTray_StateRelation
                        :SG1_part-has-physicalLocation-refObject-partsTray :PartiallyIn)
// 6 end soap:SG1_PartHasRefObjectPartsTray
//*****************************************

ObjectPropertyAssertion(soap:hasG1_PartHasRefObjectPartsTray_SubGroup_2
                        :G1_part-has-physicalLocation-refObject-partsTray :SG2_part-has-physicalLocation-refObject-partsTray)

//*****************************************
// 6 start soap:SG2_PartHasRefObjectPartsTray SG2_part-has-physicalLocation-refObject-partsTray
Declaration(NamedIndividual(:SG2_part-has-physicalLocation-refObject-partsTray))
ClassAssertion(soap:SG2_PartHasRefObjectPartsTray :SG2_part-has-physicalLocation-refObject-partsTray)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :SG2_part-has-physicalLocation-refObject-partsTray
                      "Part"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :SG2_part-has-physicalLocation-refObject-partsTray
                      "PartsTray"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasSG2_PartHasRefObjectPartsTray_StateRelation
                        :SG2_part-has-physicalLocation-refObject-partsTray :ContainedIn)
// 6 end soap:SG2_PartHasRefObjectPartsTray
//*****************************************

// 5 end soap:G1_PartHasRefObjectPartsTray
//*****************************************

// 4 end soap:PartHasRefObjectPartsTray
//*****************************************

ObjectPropertyAssertion(soap:hasPositivePredicateSet_PartHasRefObjectKit
                        :positive-predicates :part-has-physicalLocation-refObject-kit)

//*****************************************
// 4 start soap:PartHasRefObjectKit part-has-physicalLocation-refObject-kit
Declaration(NamedIndividual(:part-has-physicalLocation-refObject-kit))
ClassAssertion(soap:PartHasRefObjectKit :part-has-physicalLocation-refObject-kit)
DataPropertyAssertion(soap:hasPositivePredicate_Description :part-has-physicalLocation-refObject-kit
                      ";?part is in ?kit"^^xsd:string)
DataPropertyAssertion(soap:hasPositivePredicate_ReferenceParameter :part-has-physicalLocation-refObject-kit
                      "Part"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPositivePredicate_TargetParameter :part-has-physicalLocation-refObject-kit
                      "Kit"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasPartHasRefObjectKit_Group_1
                        :part-has-physicalLocation-refObject-kit :G1_part-has-physicalLocation-refObject-kit)

//*****************************************
// 5 start soap:G1_PartHasRefObjectKit G1_part-has-physicalLocation-refObject-kit
Declaration(NamedIndividual(:G1_part-has-physicalLocation-refObject-kit))
ClassAssertion(soap:G1_PartHasRefObjectKit :G1_part-has-physicalLocation-refObject-kit)
ObjectPropertyAssertion(soap:hasG1_PartHasRefObjectKit_SubGroup_1
                        :G1_part-has-physicalLocation-refObject-kit :SG1_part-has-physicalLocation-refObject-kit)

//*****************************************
// 6 start soap:SG1_PartHasRefObjectKit SG1_part-has-physicalLocation-refObject-kit
Declaration(NamedIndividual(:SG1_part-has-physicalLocation-refObject-kit))
ClassAssertion(soap:SG1_PartHasRefObjectKit :SG1_part-has-physicalLocation-refObject-kit)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :SG1_part-has-physicalLocation-refObject-kit
                      "Part"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :SG1_part-has-physicalLocation-refObject-kit
                      "Kit"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasSG1_PartHasRefObjectKit_StateRelation
                        :SG1_part-has-physicalLocation-refObject-kit :PartiallyIn)
// 6 end soap:SG1_PartHasRefObjectKit
//*****************************************

ObjectPropertyAssertion(soap:hasG1_PartHasRefObjectKit_SubGroup_2
                        :G1_part-has-physicalLocation-refObject-kit :SG2_part-has-physicalLocation-refObject-kit)

//*****************************************
// 6 start soap:SG2_PartHasRefObjectKit SG2_part-has-physicalLocation-refObject-kit
Declaration(NamedIndividual(:SG2_part-has-physicalLocation-refObject-kit))
ClassAssertion(soap:SG2_PartHasRefObjectKit :SG2_part-has-physicalLocation-refObject-kit)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :SG2_part-has-physicalLocation-refObject-kit
                      "Part"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :SG2_part-has-physicalLocation-refObject-kit
                      "Kit"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasSG2_PartHasRefObjectKit_StateRelation
                        :SG2_part-has-physicalLocation-refObject-kit :ContainedIn)
// 6 end soap:SG2_PartHasRefObjectKit
//*****************************************

// 5 end soap:G1_PartHasRefObjectKit
//*****************************************

// 4 end soap:PartHasRefObjectKit
//*****************************************

ObjectPropertyAssertion(soap:hasPositivePredicateSet_PartHasRefObjectEEff
                        :positive-predicates :part-has-physicalLocation-refObject-endEffector)

//*****************************************
// 4 start soap:PartHasRefObjectEEff part-has-physicalLocation-refObject-endEffector
Declaration(NamedIndividual(:part-has-physicalLocation-refObject-endEffector))
ClassAssertion(soap:PartHasRefObjectEEff :part-has-physicalLocation-refObject-endEffector)
DataPropertyAssertion(soap:hasPositivePredicate_Description :part-has-physicalLocation-refObject-endEffector
                      ";?part is held by ?endeffector"^^xsd:string)
DataPropertyAssertion(soap:hasPositivePredicate_ReferenceParameter :part-has-physicalLocation-refObject-endEffector
                      "Part"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPositivePredicate_TargetParameter :part-has-physicalLocation-refObject-endEffector
                      "EndEffector"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasPartHasRefObjectEEff_Group_1
                        :part-has-physicalLocation-refObject-endEffector :G1_part-has-physicalLocation-refObject-endEffector)

//*****************************************
// 5 start soap:G1_PartHasRefObjectEEff G1_part-has-physicalLocation-refObject-endEffector
Declaration(NamedIndividual(:G1_part-has-physicalLocation-refObject-endEffector))
ClassAssertion(soap:G1_PartHasRefObjectEEff :G1_part-has-physicalLocation-refObject-endEffector)
ObjectPropertyAssertion(soap:hasG1_PartHasRefObjectEEff_SubGroup_1
                        :G1_part-has-physicalLocation-refObject-endEffector :SG1_part-has-physicalLocation-refObject-endEffector)

//*****************************************
// 6 start soap:SG1_PartHasRefObjectEEff SG1_part-has-physicalLocation-refObject-endEffector
Declaration(NamedIndividual(:SG1_part-has-physicalLocation-refObject-endEffector))
ClassAssertion(soap:SG1_PartHasRefObjectEEff :SG1_part-has-physicalLocation-refObject-endEffector)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :SG1_part-has-physicalLocation-refObject-endEffector
                      "Part"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :SG1_part-has-physicalLocation-refObject-endEffector
                      "EndEffector"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasSG1_PartHasRefObjectEEff_StateRelation
                        :SG1_part-has-physicalLocation-refObject-endEffector :PartiallyIn)
// 6 end soap:SG1_PartHasRefObjectEEff
//*****************************************

ObjectPropertyAssertion(soap:hasG1_PartHasRefObjectEEff_SubGroup_2
                        :G1_part-has-physicalLocation-refObject-endEffector :SG2_part-has-physicalLocation-refObject-endEffector)

//*****************************************
// 6 start soap:SG2_PartHasRefObjectEEff SG2_part-has-physicalLocation-refObject-endEffector
Declaration(NamedIndividual(:SG2_part-has-physicalLocation-refObject-endEffector))
ClassAssertion(soap:SG2_PartHasRefObjectEEff :SG2_part-has-physicalLocation-refObject-endEffector)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :SG2_part-has-physicalLocation-refObject-endEffector
                      "Part"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :SG2_part-has-physicalLocation-refObject-endEffector
                      "EndEffector"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasSG2_PartHasRefObjectEEff_StateRelation
                        :SG2_part-has-physicalLocation-refObject-endEffector :ContainedIn)
// 6 end soap:SG2_PartHasRefObjectEEff
//*****************************************

// 5 end soap:G1_PartHasRefObjectEEff
//*****************************************

ObjectPropertyAssertion(soap:hasPartHasRefObjectEEff_Group_2
                        :part-has-physicalLocation-refObject-endEffector :G2_part-has-physicalLocation-refObject-endEffector)

//*****************************************
// 5 start soap:G2_PartHasRefObjectEEff G2_part-has-physicalLocation-refObject-endEffector
Declaration(NamedIndividual(:G2_part-has-physicalLocation-refObject-endEffector))
ClassAssertion(soap:G2_PartHasRefObjectEEff :G2_part-has-physicalLocation-refObject-endEffector)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :G2_part-has-physicalLocation-refObject-endEffector
                      "Part"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :G2_part-has-physicalLocation-refObject-endEffector
                      "SolidObject"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasG2_PartHasRefObjectEEff_StateRelation
                        :G2_part-has-physicalLocation-refObject-endEffector :NotUnderWithContact)
// 5 end soap:G2_PartHasRefObjectEEff
//*****************************************

// 4 end soap:PartHasRefObjectEEff
//*****************************************

ObjectPropertyAssertion(soap:hasPositivePredicateSet_PartFound
                        :positive-predicates :part-is-found)

//*****************************************
// 4 start soap:PartFound part-is-found
Declaration(NamedIndividual(:part-is-found))
ClassAssertion(soap:PartFound :part-is-found)
DataPropertyAssertion(soap:hasPositivePredicate_Description :part-is-found
                      ";?part is found"^^xsd:string)
DataPropertyAssertion(soap:hasPositivePredicate_ReferenceParameter :part-is-found
                      "Part"^^xsd:NMTOKEN)
// 4 end soap:PartFound
//*****************************************

ObjectPropertyAssertion(soap:hasPositivePredicateSet_PartsVesselHasPart
                        :positive-predicates :partsVessel-has-part)

//*****************************************
// 4 start soap:PartsVesselHasPart partsVessel-has-part
Declaration(NamedIndividual(:partsVessel-has-part))
ClassAssertion(soap:PartsVesselHasPart :partsVessel-has-part)
DataPropertyAssertion(soap:hasPositivePredicate_Description :partsVessel-has-part
                      ";?partsTray contains ?part"^^xsd:string)
DataPropertyAssertion(soap:hasPositivePredicate_ReferenceParameter :partsVessel-has-part
                      "PartsTray"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPositivePredicate_TargetParameter :partsVessel-has-part
                      "Part"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasPartsVesselHasPart_Group_1
                        :partsVessel-has-part :G1_partsVessel-has-part)

//*****************************************
// 5 start soap:G1_PartsVesselHasPart G1_partsVessel-has-part
Declaration(NamedIndividual(:G1_partsVessel-has-part))
ClassAssertion(soap:G1_PartsVesselHasPart :G1_partsVessel-has-part)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :G1_partsVessel-has-part
                      "Part"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :G1_partsVessel-has-part
                      "PartsTray"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasG1_PartsVesselHasPart_StateRelation
                        :G1_partsVessel-has-part :ContainedIn)
// 5 end soap:G1_PartsVesselHasPart
//*****************************************

// 4 end soap:PartsVesselHasPart
//*****************************************

ObjectPropertyAssertion(soap:hasPositivePredicateSet_RobotHasEEff
                        :positive-predicates :robot-has-endEffector)

//*****************************************
// 4 start soap:RobotHasEEff robot-has-endEffector
Declaration(NamedIndividual(:robot-has-endEffector))
ClassAssertion(soap:RobotHasEEff :robot-has-endEffector)
DataPropertyAssertion(soap:hasPositivePredicate_Description :robot-has-endEffector
                      ";?robot is equipped with ?endeffector"^^xsd:string)
DataPropertyAssertion(soap:hasPositivePredicate_ReferenceParameter :robot-has-endEffector
                      "Robot"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPositivePredicate_TargetParameter :robot-has-endEffector
                      "EndEffector"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasRobotHasEEff_Group_1
                        :robot-has-endEffector :G1_robot-has-endEffector)

//*****************************************
// 5 start soap:G1_RobotHasEEff G1_robot-has-endEffector
Declaration(NamedIndividual(:G1_robot-has-endEffector))
ClassAssertion(soap:G1_RobotHasEEff :G1_robot-has-endEffector)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :G1_robot-has-endEffector
                      "Robot"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :G1_robot-has-endEffector
                      "EndEffector"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasG1_RobotHasEEff_StateRelation
                        :G1_robot-has-endEffector :InContactWith)
// 5 end soap:G1_RobotHasEEff
//*****************************************

// 4 end soap:RobotHasEEff
//*****************************************

ObjectPropertyAssertion(soap:hasPositivePredicateSet_RobotHasNoEEff
                        :positive-predicates :robot-has-no-endEffector)

//*****************************************
// 4 start soap:RobotHasNoEEff robot-has-no-endEffector
Declaration(NamedIndividual(:robot-has-no-endEffector))
ClassAssertion(soap:RobotHasNoEEff :robot-has-no-endEffector)
DataPropertyAssertion(soap:hasPositivePredicate_Description :robot-has-no-endEffector
                      ";?robot has no end effector"^^xsd:string)
DataPropertyAssertion(soap:hasPositivePredicate_ReferenceParameter :robot-has-no-endEffector
                      "Robot"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasRobotHasNoEEff_Group_1
                        :robot-has-no-endEffector :G1_robot-has-no-endEffector)

//*****************************************
// 5 start soap:G1_RobotHasNoEEff G1_robot-has-no-endEffector
Declaration(NamedIndividual(:G1_robot-has-no-endEffector))
ClassAssertion(soap:G1_RobotHasNoEEff :G1_robot-has-no-endEffector)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :G1_robot-has-no-endEffector
                      "Robot"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :G1_robot-has-no-endEffector
                      "EndEffector"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasG1_RobotHasNoEEff_StateRelation
                        :G1_robot-has-no-endEffector :NotInContactWith)
// 5 end soap:G1_RobotHasNoEEff
//*****************************************

// 4 end soap:RobotHasNoEEff
//*****************************************

ObjectPropertyAssertion(soap:hasPositivePredicateSet_WorkTableHasObjectOnTableKit
                        :positive-predicates :workTable-has-objectOnTable-kit)

//*****************************************
// 4 start soap:WorkTableHasKit workTable-has-objectOnTable-kit
Declaration(NamedIndividual(:workTable-has-objectOnTable-kit))
ClassAssertion(soap:WorkTableHasKit :workTable-has-objectOnTable-kit)
DataPropertyAssertion(soap:hasPositivePredicate_Description :workTable-has-objectOnTable-kit
                      ";?worktable has ?kit on top of it"^^xsd:string)
DataPropertyAssertion(soap:hasPositivePredicate_ReferenceParameter :workTable-has-objectOnTable-kit
                      "WorkTable"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPositivePredicate_TargetParameter :workTable-has-objectOnTable-kit
                      "Kit"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasWorkTableHasKit_Group_1
                        :workTable-has-objectOnTable-kit :G1_workTable-has-objectOnTable-kit)

//*****************************************
// 5 start soap:G1_WorkTableHasKit G1_workTable-has-objectOnTable-kit
Declaration(NamedIndividual(:G1_workTable-has-objectOnTable-kit))
ClassAssertion(soap:G1_WorkTableHasKit :G1_workTable-has-objectOnTable-kit)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :G1_workTable-has-objectOnTable-kit
                      "Kit"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :G1_workTable-has-objectOnTable-kit
                      "WorkTable"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasG1_WorkTableHasKit_StateRelation
                        :G1_workTable-has-objectOnTable-kit :OnTopWithContact)
// 5 end soap:G1_WorkTableHasKit
//*****************************************

// 4 end soap:WorkTableHasKit
//*****************************************

ObjectPropertyAssertion(soap:hasPositivePredicateSet_WorkTableHasObjectOnTableKitTray
                        :positive-predicates :workTable-has-objectOnTable-kitTray)

//*****************************************
// 4 start soap:WorkTableHasKitTray workTable-has-objectOnTable-kitTray
Declaration(NamedIndividual(:workTable-has-objectOnTable-kitTray))
ClassAssertion(soap:WorkTableHasKitTray :workTable-has-objectOnTable-kitTray)
DataPropertyAssertion(soap:hasPositivePredicate_Description :workTable-has-objectOnTable-kitTray
                      ";?worktable has ?kitTray on top of it"^^xsd:string)
DataPropertyAssertion(soap:hasPositivePredicate_ReferenceParameter :workTable-has-objectOnTable-kitTray
                      "WorkTable"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPositivePredicate_TargetParameter :workTable-has-objectOnTable-kitTray
                      "KitTray"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasWorkTableHasKitTray_Group_1
                        :workTable-has-objectOnTable-kitTray :G1_workTable-has-objectOnTable-kitTray)

//*****************************************
// 5 start soap:G1_WorkTableHasKitTray G1_workTable-has-objectOnTable-kitTray
Declaration(NamedIndividual(:G1_workTable-has-objectOnTable-kitTray))
ClassAssertion(soap:G1_WorkTableHasKitTray :G1_workTable-has-objectOnTable-kitTray)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :G1_workTable-has-objectOnTable-kitTray
                      "WorkTable"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :G1_workTable-has-objectOnTable-kitTray
                      "KitTray"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasG1_WorkTableHasKitTray_StateRelation
                        :G1_workTable-has-objectOnTable-kitTray :UnderWithContact)
// 5 end soap:G1_WorkTableHasKitTray
//*****************************************

// 4 end soap:WorkTableHasKitTray
//*****************************************

ObjectPropertyAssertion(soap:hasPositivePredicateSet_WorkTableHasNoObjectOnTable
                        :positive-predicates :workTable-has-no-objectOnTable)

//*****************************************
// 4 start soap:WorkTableHasNoObjectOnTable workTable-has-no-objectOnTable
Declaration(NamedIndividual(:workTable-has-no-objectOnTable))
ClassAssertion(soap:WorkTableHasNoObjectOnTable :workTable-has-no-objectOnTable)
DataPropertyAssertion(soap:hasPositivePredicate_Description :workTable-has-no-objectOnTable
                      ";?worktable has nothing on top of it"^^xsd:string)
DataPropertyAssertion(soap:hasPositivePredicate_ReferenceParameter :workTable-has-no-objectOnTable
                      "WorkTable"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasWorkTableHasNoObjectOnTable_Group_1
                        :workTable-has-no-objectOnTable :G1_workTable-has-no-objectOnTable)

//*****************************************
// 5 start soap:G1_WorkTableHasNoObjectOnTable G1_workTable-has-no-objectOnTable
Declaration(NamedIndividual(:G1_workTable-has-no-objectOnTable))
ClassAssertion(soap:G1_WorkTableHasNoObjectOnTable :G1_workTable-has-no-objectOnTable)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :G1_workTable-has-no-objectOnTable
                      "SolidObject"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :G1_workTable-has-no-objectOnTable
                      "WorkTable"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasG1_WorkTableHasNoObjectOnTable_StateRelation
                        :G1_workTable-has-no-objectOnTable :NotOnTopWithContact)
// 5 end soap:G1_WorkTableHasNoObjectOnTable
//*****************************************

// 4 end soap:WorkTableHasNoObjectOnTable
//*****************************************

// 3 end soap:PositivePredicateSet
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_NegativePredicateSet
                        :kitting-domain :negative-predicates)

//*****************************************
// 3 start soap:NegativePredicateSet negative-predicates
Declaration(NamedIndividual(:negative-predicates))
ClassAssertion(soap:NegativePredicateSet :negative-predicates)
ObjectPropertyAssertion(soap:hasNegativePredicateSet_NotEEffHasKitTray
                        :negative-predicates :not-endEffector-has-heldObject-kitTray)

//*****************************************
// 4 start soap:NotEEffHasKitTray not-endEffector-has-heldObject-kitTray
Declaration(NamedIndividual(:not-endEffector-has-heldObject-kitTray))
ClassAssertion(soap:NotEEffHasKitTray :not-endEffector-has-heldObject-kitTray)
ObjectPropertyAssertion(soap:hasNotEEffHasKitTray_PositivePredicate
                        :not-endEffector-has-heldObject-kitTray :endEffector-has-heldObject-kitTray)
// 4 end soap:NotEEffHasKitTray
//*****************************************

ObjectPropertyAssertion(soap:hasNegativePredicateSet_NotEEffHasKit
                        :negative-predicates :not-endEffector-has-heldObject-kit)

//*****************************************
// 4 start soap:NotEEffHasKit not-endEffector-has-heldObject-kit
Declaration(NamedIndividual(:not-endEffector-has-heldObject-kit))
ClassAssertion(soap:NotEEffHasKit :not-endEffector-has-heldObject-kit)
ObjectPropertyAssertion(soap:hasNotEEffHasKit_PositivePredicate
                        :not-endEffector-has-heldObject-kit :endEffector-has-heldObject-kit)
// 4 end soap:NotEEffHasKit
//*****************************************

ObjectPropertyAssertion(soap:hasNegativePredicateSet_NotEEffHasPart
                        :negative-predicates :not-endEffector-has-heldObject-part)

//*****************************************
// 4 start soap:NotEEffHasPart not-endEffector-has-heldObject-part
Declaration(NamedIndividual(:not-endEffector-has-heldObject-part))
ClassAssertion(soap:NotEEffHasPart :not-endEffector-has-heldObject-part)
ObjectPropertyAssertion(soap:hasNotEEffHasPart_PositivePredicate
                        :not-endEffector-has-heldObject-part :endEffector-has-heldObject-part)
// 4 end soap:NotEEffHasPart
//*****************************************

ObjectPropertyAssertion(soap:hasNegativePredicateSet_NotEEffHasNoObject
                        :negative-predicates :not-endEffector-has-no-heldObject)

//*****************************************
// 4 start soap:NotEEffHasNoObject not-endEffector-has-no-heldObject
Declaration(NamedIndividual(:not-endEffector-has-no-heldObject))
ClassAssertion(soap:NotEEffHasNoObject :not-endEffector-has-no-heldObject)
ObjectPropertyAssertion(soap:hasNotEEffHasNoObject_PositivePredicate
                        :not-endEffector-has-no-heldObject :endEffector-has-no-heldObject)
// 4 end soap:NotEEffHasNoObject
//*****************************************

ObjectPropertyAssertion(soap:hasNegativePredicateSet_NotEEffHasRefObjectRobot
                        :negative-predicates :not-endEffector-has-physicalLocation-refObject-robot)

//*****************************************
// 4 start soap:NotEEffHasRefObjectRobot not-endEffector-has-physicalLocation-refObject-robot
Declaration(NamedIndividual(:not-endEffector-has-physicalLocation-refObject-robot))
ClassAssertion(soap:NotEEffHasRefObjectRobot :not-endEffector-has-physicalLocation-refObject-robot)
ObjectPropertyAssertion(soap:hasNotEEffHasRefObjectRobot_PositivePredicate
                        :not-endEffector-has-physicalLocation-refObject-robot :endEffector-has-physicalLocation-refObject-robot)
// 4 end soap:NotEEffHasRefObjectRobot
//*****************************************

ObjectPropertyAssertion(soap:hasNegativePredicateSet_NotEEffHasRefObjectEEffHolder
                        :negative-predicates :not-endEffector-has-physicalLocation-refObject-endEffectorHolder)

//*****************************************
// 4 start soap:NotEEffHasEEffHolder not-endEffector-has-physicalLocation-refObject-endEffectorHolder
Declaration(NamedIndividual(:not-endEffector-has-physicalLocation-refObject-endEffectorHolder))
ClassAssertion(soap:NotEEffHasEEffHolder :not-endEffector-has-physicalLocation-refObject-endEffectorHolder)
ObjectPropertyAssertion(soap:hasNotEEffHasEEffHolder_PositivePredicate
                        :not-endEffector-has-physicalLocation-refObject-endEffectorHolder :endEffector-has-physicalLocation-refObject-endEffectorHolder)
// 4 end soap:NotEEffHasEEffHolder
//*****************************************

ObjectPropertyAssertion(soap:hasNegativePredicateSet_NotEEffHolderHasEEff
                        :negative-predicates :not-endEffectorHolder-has-endEffector)

//*****************************************
// 4 start soap:NotEEffHolderHasEEff not-endEffectorHolder-has-endEffector
Declaration(NamedIndividual(:not-endEffectorHolder-has-endEffector))
ClassAssertion(soap:NotEEffHolderHasEEff :not-endEffectorHolder-has-endEffector)
ObjectPropertyAssertion(soap:hasNotEEffHolderHasEEff_PositivePredicate
                        :not-endEffectorHolder-has-endEffector :endEffectorHolder-has-endEffector)
// 4 end soap:NotEEffHolderHasEEff
//*****************************************

ObjectPropertyAssertion(soap:hasNegativePredicateSet_NotKitExists
                        :negative-predicates :not-kit-exists)

//*****************************************
// 4 start soap:NotKitExists not-kit-exists
Declaration(NamedIndividual(:not-kit-exists))
ClassAssertion(soap:NotKitExists :not-kit-exists)
ObjectPropertyAssertion(soap:hasNotKitExists_PositivePredicate
                        :not-kit-exists :kit-exists)
// 4 end soap:NotKitExists
//*****************************************

ObjectPropertyAssertion(soap:hasNegativePredicateSet_NotKitHasRefObjectEEff
                        :negative-predicates :not-kit-has-physicalLocation-refObject-endEffector)

//*****************************************
// 4 start soap:NotKitHasRefObjectEEff not-kit-has-physicalLocation-refObject-endEffector
Declaration(NamedIndividual(:not-kit-has-physicalLocation-refObject-endEffector))
ClassAssertion(soap:NotKitHasRefObjectEEff :not-kit-has-physicalLocation-refObject-endEffector)
ObjectPropertyAssertion(soap:hasNotKitHasRefObjectEEff_PositivePredicate
                        :not-kit-has-physicalLocation-refObject-endEffector :kit-has-physicalLocation-refObject-endEffector)
// 4 end soap:NotKitHasRefObjectEEff
//*****************************************

ObjectPropertyAssertion(soap:hasNegativePredicateSet_NotKitHasRefObjectWorkTable
                        :negative-predicates :not-kit-has-physicalLocation-refObject-workTable)

//*****************************************
// 4 start soap:NotKitHasRefObjectWorkTable not-kit-has-physicalLocation-refObject-workTable
Declaration(NamedIndividual(:not-kit-has-physicalLocation-refObject-workTable))
ClassAssertion(soap:NotKitHasRefObjectWorkTable :not-kit-has-physicalLocation-refObject-workTable)
ObjectPropertyAssertion(soap:hasNotKitHasRefObjectWorkTable_PositivePredicate
                        :not-kit-has-physicalLocation-refObject-workTable :kit-has-physicalLocation-refObject-workTable)
// 4 end soap:NotKitHasRefObjectWorkTable
//*****************************************

ObjectPropertyAssertion(soap:hasNegativePredicateSet_NotKitTrayHasRefObjectLBWEKT
                        :negative-predicates :not-kitTray-has-physicalLocation-refObject-lbwekt)

//*****************************************
// 4 start soap:NotKitTrayHasLBWEKT not-kitTray-has-physicalLocation-refObject-lbwekt
Declaration(NamedIndividual(:not-kitTray-has-physicalLocation-refObject-lbwekt))
ClassAssertion(soap:NotKitTrayHasLBWEKT :not-kitTray-has-physicalLocation-refObject-lbwekt)
ObjectPropertyAssertion(soap:hasNotKitTrayHasLBWEKT_PositivePredicate
                        :not-kitTray-has-physicalLocation-refObject-lbwekt :kitTray-has-physicalLocation-refObject-lbwekt)
// 4 end soap:NotKitTrayHasLBWEKT
//*****************************************

ObjectPropertyAssertion(soap:hasNegativePredicateSet_NotKitTrayHasRefObjectEEff
                        :negative-predicates :not-kitTray-has-physicalLocation-refObject-endEffector)

//*****************************************
// 4 start soap:NotKitTrayHasEEff not-kitTray-has-physicalLocation-refObject-endEffector
Declaration(NamedIndividual(:not-kitTray-has-physicalLocation-refObject-endEffector))
ClassAssertion(soap:NotKitTrayHasEEff :not-kitTray-has-physicalLocation-refObject-endEffector)
ObjectPropertyAssertion(soap:hasNotKitTrayHasEEff_PositivePredicate
                        :not-kitTray-has-physicalLocation-refObject-endEffector :kitTray-has-physicalLocation-refObject-endEffector)
// 4 end soap:NotKitTrayHasEEff
//*****************************************

ObjectPropertyAssertion(soap:hasNegativePredicateSet_NotKitTrayHasRefObjectKit
                        :negative-predicates :not-kitTray-has-physicalLocation-refObject-kit)

//*****************************************
// 4 start soap:NotKitTrayHasKit not-kitTray-has-physicalLocation-refObject-kit
Declaration(NamedIndividual(:not-kitTray-has-physicalLocation-refObject-kit))
ClassAssertion(soap:NotKitTrayHasKit :not-kitTray-has-physicalLocation-refObject-kit)
ObjectPropertyAssertion(soap:hasNotKitTrayHasKit_PositivePredicate
                        :not-kitTray-has-physicalLocation-refObject-kit :kitTray-has-physicalLocation-refObject-kit)
// 4 end soap:NotKitTrayHasKit
//*****************************************

ObjectPropertyAssertion(soap:hasNegativePredicateSet_NotPartHasRefObjectPartsTray
                        :negative-predicates :not-part-has-physicalLocation-refObject-partsTray)

//*****************************************
// 4 start soap:NotPartHasPartsTray not-part-has-physicalLocation-refObject-partsTray
Declaration(NamedIndividual(:not-part-has-physicalLocation-refObject-partsTray))
ClassAssertion(soap:NotPartHasPartsTray :not-part-has-physicalLocation-refObject-partsTray)
ObjectPropertyAssertion(soap:hasNotPartHasPartsTray_PositivePredicate
                        :not-part-has-physicalLocation-refObject-partsTray :part-has-physicalLocation-refObject-partsTray)
// 4 end soap:NotPartHasPartsTray
//*****************************************

ObjectPropertyAssertion(soap:hasNegativePredicateSet_NotPartHasRefObjectEEff
                        :negative-predicates :not-part-has-physicalLocation-refObject-endEffector)

//*****************************************
// 4 start soap:NotPartHasEEff not-part-has-physicalLocation-refObject-endEffector
Declaration(NamedIndividual(:not-part-has-physicalLocation-refObject-endEffector))
ClassAssertion(soap:NotPartHasEEff :not-part-has-physicalLocation-refObject-endEffector)
ObjectPropertyAssertion(soap:hasNotPartHasEEff_PositivePredicate
                        :not-part-has-physicalLocation-refObject-endEffector :part-has-physicalLocation-refObject-endEffector)
// 4 end soap:NotPartHasEEff
//*****************************************

ObjectPropertyAssertion(soap:hasNegativePredicateSet_NotRobotHasEEff
                        :negative-predicates :not-robot-has-endEffector)

//*****************************************
// 4 start soap:NotRobotHasEEff not-robot-has-endEffector
Declaration(NamedIndividual(:not-robot-has-endEffector))
ClassAssertion(soap:NotRobotHasEEff :not-robot-has-endEffector)
ObjectPropertyAssertion(soap:hasNotRobotHasEEff_PositivePredicate
                        :not-robot-has-endEffector :robot-has-endEffector)
// 4 end soap:NotRobotHasEEff
//*****************************************

ObjectPropertyAssertion(soap:hasNegativePredicateSet_NotRobotHasNoEEff
                        :negative-predicates :not-robot-has-no-endEffector)

//*****************************************
// 4 start soap:NotRobotHasNoEEff not-robot-has-no-endEffector
Declaration(NamedIndividual(:not-robot-has-no-endEffector))
ClassAssertion(soap:NotRobotHasNoEEff :not-robot-has-no-endEffector)
ObjectPropertyAssertion(soap:hasNotRobotHasNoEEff_PositivePredicate
                        :not-robot-has-no-endEffector :robot-has-no-endEffector)
// 4 end soap:NotRobotHasNoEEff
//*****************************************

ObjectPropertyAssertion(soap:hasNegativePredicateSet_NotWorkTableHasObjectOnTableKit
                        :negative-predicates :not-workTable-has-objectOnTable-kit)

//*****************************************
// 4 start soap:NotWorkTableHasKit not-workTable-has-objectOnTable-kit
Declaration(NamedIndividual(:not-workTable-has-objectOnTable-kit))
ClassAssertion(soap:NotWorkTableHasKit :not-workTable-has-objectOnTable-kit)
ObjectPropertyAssertion(soap:hasNotWorkTableHasKit_PositivePredicate
                        :not-workTable-has-objectOnTable-kit :workTable-has-objectOnTable-kit)
// 4 end soap:NotWorkTableHasKit
//*****************************************

ObjectPropertyAssertion(soap:hasNegativePredicateSet_NotWorkTableHasObjectOnTableKitTray
                        :negative-predicates :not-workTable-has-objectOnTable-kitTray)

//*****************************************
// 4 start soap:NotWorkTableHasKitTray not-workTable-has-objectOnTable-kitTray
Declaration(NamedIndividual(:not-workTable-has-objectOnTable-kitTray))
ClassAssertion(soap:NotWorkTableHasKitTray :not-workTable-has-objectOnTable-kitTray)
ObjectPropertyAssertion(soap:hasNotWorkTableHasKitTray_PositivePredicate
                        :not-workTable-has-objectOnTable-kitTray :workTable-has-objectOnTable-kitTray)
// 4 end soap:NotWorkTableHasKitTray
//*****************************************

ObjectPropertyAssertion(soap:hasNegativePredicateSet_NotKitTrayHasRefObjectWorkTable
                        :negative-predicates :not-kitTray-has-physicalLocation-refObject-workTable)

//*****************************************
// 4 start soap:NotKTrayHasRefObjectWTable not-kitTray-has-physicalLocation-refObject-workTable
Declaration(NamedIndividual(:not-kitTray-has-physicalLocation-refObject-workTable))
ClassAssertion(soap:NotKTrayHasRefObjectWTable :not-kitTray-has-physicalLocation-refObject-workTable)
ObjectPropertyAssertion(soap:hasNotKTrayHasRefObjectWTable_PositivePredicate
                        :not-kitTray-has-physicalLocation-refObject-workTable :kitTray-has-physicalLocation-refObject-workTable)
// 4 end soap:NotKTrayHasRefObjectWTable
//*****************************************

// 3 end soap:NegativePredicateSet
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_QuantityOfPartsInPartsTray
                        :kitting-domain :quantity-of-parts-in-partstray)

//*****************************************
// 3 start soap:QuantityOfPartsInPartsTray quantity-of-parts-in-partstray
Declaration(NamedIndividual(:quantity-of-parts-in-partstray))
ClassAssertion(soap:QuantityOfPartsInPartsTray :quantity-of-parts-in-partstray)
DataPropertyAssertion(soap:hasFunction_Description :quantity-of-parts-in-partstray
                      ";quantity of parts in ?partsTray"^^xsd:string)
DataPropertyAssertion(soap:hasFunction_ReferenceParameter :quantity-of-parts-in-partstray
                      "PartsTray"^^xsd:NMTOKEN)
// 3 end soap:QuantityOfPartsInPartsTray
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_QuantityOfPartsInKit
                        :kitting-domain :quantity-of-parts-in-kit)

//*****************************************
// 3 start soap:QuantityOfPartsInKit quantity-of-parts-in-kit
Declaration(NamedIndividual(:quantity-of-parts-in-kit))
ClassAssertion(soap:QuantityOfPartsInKit :quantity-of-parts-in-kit)
DataPropertyAssertion(soap:hasFunction_Description :quantity-of-parts-in-kit
                      ";quantity of parts with ?sku in ?kit"^^xsd:string)
DataPropertyAssertion(soap:hasFunction_ReferenceParameter :quantity-of-parts-in-kit
                      "StockKeepingUnit"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasFunction_TargetParameter :quantity-of-parts-in-kit
                      "Kit"^^xsd:NMTOKEN)
// 3 end soap:QuantityOfPartsInKit
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_QuantityOfKitTraysInLBWEKT
                        :kitting-domain :quantity-of-kittrays-in-lbwekt)

//*****************************************
// 3 start soap:QuantityOfKitTraysInLBWEKT quantity-of-kittrays-in-lbwekt
Declaration(NamedIndividual(:quantity-of-kittrays-in-lbwekt))
ClassAssertion(soap:QuantityOfKitTraysInLBWEKT :quantity-of-kittrays-in-lbwekt)
DataPropertyAssertion(soap:hasFunction_Description :quantity-of-kittrays-in-lbwekt
                      ";quantity of kit trays in ?lbwekt"^^xsd:string)
DataPropertyAssertion(soap:hasFunction_ReferenceParameter :quantity-of-kittrays-in-lbwekt
                      "LargeBoxWithEmptyKitTrays"^^xsd:NMTOKEN)
// 3 end soap:QuantityOfKitTraysInLBWEKT
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_QuantityOfKitsInLBWK
                        :kitting-domain :quantity-of-kits-in-lbwk)

//*****************************************
// 3 start soap:QuantityOfKitsInLBWK quantity-of-kits-in-lbwk
Declaration(NamedIndividual(:quantity-of-kits-in-lbwk))
ClassAssertion(soap:QuantityOfKitsInLBWK :quantity-of-kits-in-lbwk)
DataPropertyAssertion(soap:hasFunction_Description :quantity-of-kits-in-lbwk
                      ";quantity of kits in ?lbwk"^^xsd:string)
DataPropertyAssertion(soap:hasFunction_ReferenceParameter :quantity-of-kits-in-lbwk
                      "LargeBoxWithKits"^^xsd:NMTOKEN)
// 3 end soap:QuantityOfKitsInLBWK
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_CurrentQuantityOfPartsInKit
                        :kitting-domain :current-quantity-of-parts-in-kit)

//*****************************************
// 3 start soap:CurrentQuantityOfPartsInKit current-quantity-of-parts-in-kit
Declaration(NamedIndividual(:current-quantity-of-parts-in-kit))
ClassAssertion(soap:CurrentQuantityOfPartsInKit :current-quantity-of-parts-in-kit)
DataPropertyAssertion(soap:hasFunction_Description :current-quantity-of-parts-in-kit
                      ";current quantity of parts in ?kit"^^xsd:string)
DataPropertyAssertion(soap:hasFunction_ReferenceParameter :current-quantity-of-parts-in-kit
                      "Kit"^^xsd:NMTOKEN)
// 3 end soap:CurrentQuantityOfPartsInKit
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_FinalQuantityOfPartsInKit
                        :kitting-domain :final-quantity-of-parts-in-kit)

//*****************************************
// 3 start soap:FinalQuantityOfPartsInKit final-quantity-of-parts-in-kit
Declaration(NamedIndividual(:final-quantity-of-parts-in-kit))
ClassAssertion(soap:FinalQuantityOfPartsInKit :final-quantity-of-parts-in-kit)
DataPropertyAssertion(soap:hasFunction_Description :final-quantity-of-parts-in-kit
                      ";final quantity of parts in ?kit"^^xsd:string)
DataPropertyAssertion(soap:hasFunction_ReferenceParameter :final-quantity-of-parts-in-kit
                      "Kit"^^xsd:NMTOKEN)
// 3 end soap:FinalQuantityOfPartsInKit
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_CapacityOfPartsInKit
                        :kitting-domain :capacity-of-parts-in-kit)

//*****************************************
// 3 start soap:CapacityOfPartsInKit capacity-of-parts-in-kit
Declaration(NamedIndividual(:capacity-of-parts-in-kit))
ClassAssertion(soap:CapacityOfPartsInKit :capacity-of-parts-in-kit)
DataPropertyAssertion(soap:hasFunction_Description :capacity-of-parts-in-kit
                      ";capacity of parts of a certain ?sku that ?kit can have"^^xsd:string)
DataPropertyAssertion(soap:hasFunction_ReferenceParameter :capacity-of-parts-in-kit
                      "StockKeepingUnit"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasFunction_TargetParameter :capacity-of-parts-in-kit
                      "Kit"^^xsd:NMTOKEN)
// 3 end soap:CapacityOfPartsInKit
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_CapacityOfKitsInLBWK
                        :kitting-domain :capacity-of-kits-in-lbwk)

//*****************************************
// 3 start soap:CapacityOfKitsInLBWK capacity-of-kits-in-lbwk
Declaration(NamedIndividual(:capacity-of-kits-in-lbwk))
ClassAssertion(soap:CapacityOfKitsInLBWK :capacity-of-kits-in-lbwk)
DataPropertyAssertion(soap:hasFunction_Description :capacity-of-kits-in-lbwk
                      ";capacity of kits that ?lbwk can have"^^xsd:string)
DataPropertyAssertion(soap:hasFunction_ReferenceParameter :capacity-of-kits-in-lbwk
                      "LargeBoxWithKits"^^xsd:NMTOKEN)
// 3 end soap:CapacityOfKitsInLBWK
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_PartFoundFlag
                        :kitting-domain :part-found-flag)

//*****************************************
// 3 start soap:PartFoundFlag part-found-flag
Declaration(NamedIndividual(:part-found-flag))
ClassAssertion(soap:PartFoundFlag :part-found-flag)
DataPropertyAssertion(soap:hasFunction_Description :part-found-flag
                      ";flag set to 0 when a part is not found and to 1 when a part is found"^^xsd:string)
// 3 end soap:PartFoundFlag
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_TakeKitTray
                        :kitting-domain :take-kitTray)

//*****************************************
// 3 start soap:TakeKitTray take-kitTray
Declaration(NamedIndividual(:take-kitTray))
ClassAssertion(soap:TakeKitTray :take-kitTray)
DataPropertyAssertion(soap:hasTakeKitTray_Description :take-kitTray
                      ";Take a KitTray from a LargeBoxWithEmptyKitTrays"^^xsd:string)
ObjectPropertyAssertion(soap:hasTakeKitTray_ActionParameterSet
                        :take-kitTray :robot-TakeKitTray)

//*****************************************
// 4 start soap:ActionParameterSet robot-TakeKitTray
Declaration(NamedIndividual(:robot-TakeKitTray))
ClassAssertion(soap:ActionParameterSet :robot-TakeKitTray)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :robot-TakeKitTray
                      "Robot"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :robot-TakeKitTray
                      "1"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasTakeKitTray_ActionParameterSet
                        :take-kitTray :kitTray-TakeKitTray)

//*****************************************
// 4 start soap:ActionParameterSet kitTray-TakeKitTray
Declaration(NamedIndividual(:kitTray-TakeKitTray))
ClassAssertion(soap:ActionParameterSet :kitTray-TakeKitTray)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :kitTray-TakeKitTray
                      "KitTray"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :kitTray-TakeKitTray
                      "2"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasTakeKitTray_ActionParameterSet
                        :take-kitTray :lbwekt-TakeKitTray)

//*****************************************
// 4 start soap:ActionParameterSet lbwekt-TakeKitTray
Declaration(NamedIndividual(:lbwekt-TakeKitTray))
ClassAssertion(soap:ActionParameterSet :lbwekt-TakeKitTray)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :lbwekt-TakeKitTray
                      "LargeBoxWithEmptyKitTrays"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :lbwekt-TakeKitTray
                      "3"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasTakeKitTray_ActionParameterSet
                        :take-kitTray :endEffector-TakeKitTray)

//*****************************************
// 4 start soap:ActionParameterSet endEffector-TakeKitTray
Declaration(NamedIndividual(:endEffector-TakeKitTray))
ClassAssertion(soap:ActionParameterSet :endEffector-TakeKitTray)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :endEffector-TakeKitTray
                      "EndEffector"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :endEffector-TakeKitTray
                      "4"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasTakeKitTray_ActionParameterSet
                        :take-kitTray :sku-TakeKitTray)

//*****************************************
// 4 start soap:ActionParameterSet sku-TakeKitTray
Declaration(NamedIndividual(:sku-TakeKitTray))
ClassAssertion(soap:ActionParameterSet :sku-TakeKitTray)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :sku-TakeKitTray
                      "StockKeepingUnit"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :sku-TakeKitTray
                      "5"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasTakeKitTray_Precondition
                        :take-kitTray :precondition-TakeKitTray)

//*****************************************
// 4 start soap:PreconditionTakeKitTray precondition-TakeKitTray
Declaration(NamedIndividual(:precondition-TakeKitTray))
ClassAssertion(soap:PreconditionTakeKitTray :precondition-TakeKitTray)
ObjectPropertyAssertion(soap:hasPreconditionTakeKitTray_F2DGreaterTakeKitTray
                        :precondition-TakeKitTray :f2d-TakeKitTray)

//*****************************************
// 5 start soap:F2DGreaterTakeKitTray f2d-TakeKitTray
Declaration(NamedIndividual(:f2d-TakeKitTray))
ClassAssertion(soap:F2DGreaterTakeKitTray :f2d-TakeKitTray)
DataPropertyAssertion(soap:hasFunctionToDecimalBool_DecimalNumber :f2d-TakeKitTray
                      "0.000000"^^xsd:decimal)
ObjectPropertyAssertion(soap:hasF2DGreaterTakeKitTray_F1
                        :f2d-TakeKitTray :quantity-of-kittrays-in-lbwekt)
// 5 end soap:F2DGreaterTakeKitTray
//*****************************************

ObjectPropertyAssertion(soap:hasPreconditionTakeKitTray_EEffHasNoObject
                        :precondition-TakeKitTray :endEffector-has-no-heldObject)
ObjectPropertyAssertion(soap:hasPreconditionTakeKitTray_EEffIsForKitTraySKU
                        :precondition-TakeKitTray :endEffector-is-for-kitTraySKU)
ObjectPropertyAssertion(soap:hasPreconditionTakeKitTray_EEffHasRobot
                        :precondition-TakeKitTray :endEffector-has-physicalLocation-refObject-robot)
ObjectPropertyAssertion(soap:hasPreconditionTakeKitTray_KitTrayHasSKUObjectSKU
                        :precondition-TakeKitTray :kitTray-has-skuObject-sku)
ObjectPropertyAssertion(soap:hasPreconditionTakeKitTray_KitTrayHasRefObjectLBWEKT
                        :precondition-TakeKitTray :kitTray-has-physicalLocation-refObject-lbwekt)
ObjectPropertyAssertion(soap:hasPreconditionTakeKitTray_RobotHasEEff
                        :precondition-TakeKitTray :robot-has-endEffector)
// 4 end soap:PreconditionTakeKitTray
//*****************************************

ObjectPropertyAssertion(soap:hasTakeKitTray_Effect
                        :take-kitTray :effect-TakeKitTray)

//*****************************************
// 4 start soap:EffectTakeKitTray effect-TakeKitTray
Declaration(NamedIndividual(:effect-TakeKitTray))
ClassAssertion(soap:EffectTakeKitTray :effect-TakeKitTray)
ObjectPropertyAssertion(soap:hasEffectTakeKitTray_FODecreaseTakeKitTray
                        :effect-TakeKitTray :decrease-TakeKitTray)

//*****************************************
// 5 start soap:FOTakeKitTrayEffect decrease-TakeKitTray
Declaration(NamedIndividual(:decrease-TakeKitTray))
ClassAssertion(soap:FOTakeKitTrayEffect :decrease-TakeKitTray)
DataPropertyAssertion(soap:hasFunctionOperation_Expression :decrease-TakeKitTray
                      "decrease"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasFunctionOperation_Value :decrease-TakeKitTray
                      "1"^^xsd:positiveInteger)
ObjectPropertyAssertion(soap:hasFOTakeKitTrayEffect_Function
                        :decrease-TakeKitTray :quantity-of-kittrays-in-lbwekt)
// 5 end soap:FOTakeKitTrayEffect
//*****************************************

ObjectPropertyAssertion(soap:hasEffectTakeKitTray_EEffHasKitTray
                        :effect-TakeKitTray :endEffector-has-heldObject-kitTray)
ObjectPropertyAssertion(soap:hasEffectTakeKitTray_KitTrayHasRefObjectEEff
                        :effect-TakeKitTray :kitTray-has-physicalLocation-refObject-endEffector)
ObjectPropertyAssertion(soap:hasEffectTakeKitTray_NotEEffHasNoObject
                        :effect-TakeKitTray :not-endEffector-has-no-heldObject)
ObjectPropertyAssertion(soap:hasEffectTakeKitTray_NotKitTrayHasRefObjectLBWEKT
                        :effect-TakeKitTray :not-kitTray-has-physicalLocation-refObject-lbwekt)
// 4 end soap:EffectTakeKitTray
//*****************************************

// 3 end soap:TakeKitTray
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_PlaceKitTray
                        :kitting-domain :place-kitTray)

//*****************************************
// 3 start soap:PlaceKitTray place-kitTray
Declaration(NamedIndividual(:place-kitTray))
ClassAssertion(soap:PlaceKitTray :place-kitTray)
DataPropertyAssertion(soap:hasPlaceKitTray_Description :place-kitTray
                      ";Place a KitTray on a WorkTable"^^xsd:string)
ObjectPropertyAssertion(soap:hasPlaceKitTray_ActionParameterSet
                        :place-kitTray :robot-PlaceKitTray)

//*****************************************
// 4 start soap:ActionParameterSet robot-PlaceKitTray
Declaration(NamedIndividual(:robot-PlaceKitTray))
ClassAssertion(soap:ActionParameterSet :robot-PlaceKitTray)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :robot-PlaceKitTray
                      "Robot"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :robot-PlaceKitTray
                      "1"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasPlaceKitTray_ActionParameterSet
                        :place-kitTray :kitTray-PlaceKitTray)

//*****************************************
// 4 start soap:ActionParameterSet kitTray-PlaceKitTray
Declaration(NamedIndividual(:kitTray-PlaceKitTray))
ClassAssertion(soap:ActionParameterSet :kitTray-PlaceKitTray)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :kitTray-PlaceKitTray
                      "KitTray"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :kitTray-PlaceKitTray
                      "2"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasPlaceKitTray_ActionParameterSet
                        :place-kitTray :workTable-PlaceKitTray)

//*****************************************
// 4 start soap:ActionParameterSet workTable-PlaceKitTray
Declaration(NamedIndividual(:workTable-PlaceKitTray))
ClassAssertion(soap:ActionParameterSet :workTable-PlaceKitTray)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :workTable-PlaceKitTray
                      "WorkTable"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :workTable-PlaceKitTray
                      "3"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasPlaceKitTray_ActionParameterSet
                        :place-kitTray :endEffector-PlaceKitTray)

//*****************************************
// 4 start soap:ActionParameterSet endEffector-PlaceKitTray
Declaration(NamedIndividual(:endEffector-PlaceKitTray))
ClassAssertion(soap:ActionParameterSet :endEffector-PlaceKitTray)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :endEffector-PlaceKitTray
                      "EndEffector"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :endEffector-PlaceKitTray
                      "4"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasPlaceKitTray_Precondition
                        :place-kitTray :precondition-PlaceKitTray)

//*****************************************
// 4 start soap:PreconditionPlaceKitTray precondition-PlaceKitTray
Declaration(NamedIndividual(:precondition-PlaceKitTray))
ClassAssertion(soap:PreconditionPlaceKitTray :precondition-PlaceKitTray)
ObjectPropertyAssertion(soap:hasPreconditionPlaceKitTray_EEffHasKitTray
                        :precondition-PlaceKitTray :endEffector-has-heldObject-kitTray)
ObjectPropertyAssertion(soap:hasPreconditionPlaceKitTray_KitTrayHasRefObjectEEff
                        :precondition-PlaceKitTray :kitTray-has-physicalLocation-refObject-endEffector)
ObjectPropertyAssertion(soap:hasPreconditionPlaceKitTray_RobotHasEEff
                        :precondition-PlaceKitTray :robot-has-endEffector)
ObjectPropertyAssertion(soap:hasPreconditionPlaceKitTray_EEffHasRefObjectRobot
                        :precondition-PlaceKitTray :endEffector-has-physicalLocation-refObject-robot)
// 4 end soap:PreconditionPlaceKitTray
//*****************************************

ObjectPropertyAssertion(soap:hasPlaceKitTray_Effect
                        :place-kitTray :effect-PlaceKitTray)

//*****************************************
// 4 start soap:EffectPlaceKitTray effect-PlaceKitTray
Declaration(NamedIndividual(:effect-PlaceKitTray))
ClassAssertion(soap:EffectPlaceKitTray :effect-PlaceKitTray)
ObjectPropertyAssertion(soap:hasEffectPlaceKitTray_NotKitTrayHasRefObjectEEff
                        :effect-PlaceKitTray :not-kitTray-has-physicalLocation-refObject-endEffector)
ObjectPropertyAssertion(soap:hasEffectPlaceKitTray_NotEEffHasKitTray
                        :effect-PlaceKitTray :not-endEffector-has-heldObject-kitTray)
ObjectPropertyAssertion(soap:hasEffectPlaceKitTray_KitTrayHasRefObjectWorkTable
                        :effect-PlaceKitTray :kitTray-has-physicalLocation-refObject-workTable)
ObjectPropertyAssertion(soap:hasEffectPlaceKitTray_EEffHasNoObject
                        :effect-PlaceKitTray :endEffector-has-no-heldObject)
ObjectPropertyAssertion(soap:hasEffectPlaceKitTray_WorkTableHasObjectOnTableKitTray
                        :effect-PlaceKitTray :workTable-has-objectOnTable-kitTray)
// 4 end soap:EffectPlaceKitTray
//*****************************************

// 3 end soap:PlaceKitTray
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_CreateKit
                        :kitting-domain :create-kit)

//*****************************************
// 3 start soap:CreateKit create-kit
Declaration(NamedIndividual(:create-kit))
ClassAssertion(soap:CreateKit :create-kit)
DataPropertyAssertion(soap:hasCreateKit_Description :create-kit
                      ";Create a Kit from a KitTray"^^xsd:string)
ObjectPropertyAssertion(soap:hasCreateKit_ActionParameterSet
                        :create-kit :kit-CreateKit)

//*****************************************
// 4 start soap:ActionParameterSet kit-CreateKit
Declaration(NamedIndividual(:kit-CreateKit))
ClassAssertion(soap:ActionParameterSet :kit-CreateKit)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :kit-CreateKit
                      "Kit"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :kit-CreateKit
                      "1"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasCreateKit_ActionParameterSet
                        :create-kit :kitTray-CreateKit)

//*****************************************
// 4 start soap:ActionParameterSet kitTray-CreateKit
Declaration(NamedIndividual(:kitTray-CreateKit))
ClassAssertion(soap:ActionParameterSet :kitTray-CreateKit)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :kitTray-CreateKit
                      "KitTray"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :kitTray-CreateKit
                      "2"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasCreateKit_ActionParameterSet
                        :create-kit :workTable-CreateKit)

//*****************************************
// 4 start soap:ActionParameterSet workTable-CreateKit
Declaration(NamedIndividual(:workTable-CreateKit))
ClassAssertion(soap:ActionParameterSet :workTable-CreateKit)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :workTable-CreateKit
                      "WorkTable"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :workTable-CreateKit
                      "3"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasCreateKit_Precondition
                        :create-kit :precondition-CreateKit)

//*****************************************
// 4 start soap:PreconditionCreateKit precondition-CreateKit
Declaration(NamedIndividual(:precondition-CreateKit))
ClassAssertion(soap:PreconditionCreateKit :precondition-CreateKit)
ObjectPropertyAssertion(soap:hasPreconditionCreateKit_WorkTableHasObjectOnTableKitTray
                        :precondition-CreateKit :workTable-has-objectOnTable-kitTray)
ObjectPropertyAssertion(soap:hasPreconditionCreateKit_KitTrayHasRefObjectWorkTable
                        :precondition-CreateKit :kitTray-has-physicalLocation-refObject-workTable)
ObjectPropertyAssertion(soap:hasPreconditionCreateKit_KitHasKitTray
                        :precondition-CreateKit :kit-has-kitTray)
ObjectPropertyAssertion(soap:hasPreconditionCreateKit_KitTrayHasRefObjectKit
                        :precondition-CreateKit :kitTray-has-physicalLocation-refObject-kit)
// 4 end soap:PreconditionCreateKit
//*****************************************

ObjectPropertyAssertion(soap:hasCreateKit_Effect
                        :create-kit :effect-CreateKit)

//*****************************************
// 4 start soap:EffectCreateKit effect-CreateKit
Declaration(NamedIndividual(:effect-CreateKit))
ClassAssertion(soap:EffectCreateKit :effect-CreateKit)
ObjectPropertyAssertion(soap:hasEffectCreateKit_WorkTableHasObjectOnTableKit
                        :effect-CreateKit :workTable-has-objectOnTable-kit)
ObjectPropertyAssertion(soap:hasEffectCreateKit_KitHasRefObjectWorkTable
                        :effect-CreateKit :kit-has-physicalLocation-refObject-workTable)
ObjectPropertyAssertion(soap:hasEffectCreateKit_NotWorkTableHasObjectOnTableKitTray
                        :effect-CreateKit :not-workTable-has-objectOnTable-kitTray)
ObjectPropertyAssertion(soap:hasEffectCreateKit_NotKitTrayHasRefObjectWorkTable
                        :effect-CreateKit :not-kitTray-has-physicalLocation-refObject-workTable)
ObjectPropertyAssertion(soap:hasEffectCreateKit_KitExists
                        :effect-CreateKit :kit-exists)
// 4 end soap:EffectCreateKit
//*****************************************

// 3 end soap:CreateKit
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_TakeKit
                        :kitting-domain :take-kit)

//*****************************************
// 3 start soap:TakeKit take-kit
Declaration(NamedIndividual(:take-kit))
ClassAssertion(soap:TakeKit :take-kit)
DataPropertyAssertion(soap:hasTakeKit_Description :take-kit
                      ";Take a Kit from a WorkTable"^^xsd:string)
ObjectPropertyAssertion(soap:hasTakeKit_ActionParameterSet
                        :take-kit :robot-TakeKit)

//*****************************************
// 4 start soap:ActionParameterSet robot-TakeKit
Declaration(NamedIndividual(:robot-TakeKit))
ClassAssertion(soap:ActionParameterSet :robot-TakeKit)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :robot-TakeKit
                      "Robot"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :robot-TakeKit
                      "1"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasTakeKit_ActionParameterSet
                        :take-kit :kit-TakeKit)

//*****************************************
// 4 start soap:ActionParameterSet kit-TakeKit
Declaration(NamedIndividual(:kit-TakeKit))
ClassAssertion(soap:ActionParameterSet :kit-TakeKit)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :kit-TakeKit
                      "Kit"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :kit-TakeKit
                      "2"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasTakeKit_ActionParameterSet
                        :take-kit :kitTray-TakeKit)

//*****************************************
// 4 start soap:ActionParameterSet kitTray-TakeKit
Declaration(NamedIndividual(:kitTray-TakeKit))
ClassAssertion(soap:ActionParameterSet :kitTray-TakeKit)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :kitTray-TakeKit
                      "KitTray"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :kitTray-TakeKit
                      "3"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasTakeKit_ActionParameterSet
                        :take-kit :workTable-TakeKit)

//*****************************************
// 4 start soap:ActionParameterSet workTable-TakeKit
Declaration(NamedIndividual(:workTable-TakeKit))
ClassAssertion(soap:ActionParameterSet :workTable-TakeKit)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :workTable-TakeKit
                      "WorkTable"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :workTable-TakeKit
                      "4"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasTakeKit_ActionParameterSet
                        :take-kit :sku-TakeKit)

//*****************************************
// 4 start soap:ActionParameterSet sku-TakeKit
Declaration(NamedIndividual(:sku-TakeKit))
ClassAssertion(soap:ActionParameterSet :sku-TakeKit)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :sku-TakeKit
                      "StockKeepingUnit"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :sku-TakeKit
                      "5"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasTakeKit_ActionParameterSet
                        :take-kit :endEffector-TakeKit)

//*****************************************
// 4 start soap:ActionParameterSet endEffector-TakeKit
Declaration(NamedIndividual(:endEffector-TakeKit))
ClassAssertion(soap:ActionParameterSet :endEffector-TakeKit)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :endEffector-TakeKit
                      "EndEffector"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :endEffector-TakeKit
                      "6"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasTakeKit_Precondition
                        :take-kit :precondition-TakeKit)

//*****************************************
// 4 start soap:PreconditionTakeKit precondition-TakeKit
Declaration(NamedIndividual(:precondition-TakeKit))
ClassAssertion(soap:PreconditionTakeKit :precondition-TakeKit)
ObjectPropertyAssertion(soap:hasPreconditionTakeKit_F2FEqualTakeKit
                        :precondition-TakeKit :f2f-TakeKit)

//*****************************************
// 5 start soap:F2FEqualTakeKit f2f-TakeKit
Declaration(NamedIndividual(:f2f-TakeKit))
ClassAssertion(soap:F2FEqualTakeKit :f2f-TakeKit)
ObjectPropertyAssertion(soap:hasF2FEqualTakeKit_F1
                        :f2f-TakeKit :current-quantity-of-parts-in-kit)
ObjectPropertyAssertion(soap:hasF2FEqualTakeKit_F2
                        :f2f-TakeKit :final-quantity-of-parts-in-kit)
// 5 end soap:F2FEqualTakeKit
//*****************************************

ObjectPropertyAssertion(soap:hasPreconditionTakeKit_EEffHasNoObject
                        :precondition-TakeKit :endEffector-has-no-heldObject)
ObjectPropertyAssertion(soap:hasPreconditionTakeKit_RobotHasEEff
                        :precondition-TakeKit :robot-has-endEffector)
ObjectPropertyAssertion(soap:hasPreconditionTakeKit_KitTrayHasSKUObjectSKU
                        :precondition-TakeKit :kitTray-has-skuObject-sku)
ObjectPropertyAssertion(soap:hasPreconditionTakeKit_EEffIsForKitTraySKU
                        :precondition-TakeKit :endEffector-is-for-kitTraySKU)
ObjectPropertyAssertion(soap:hasPreconditionTakeKit_EEffHasRefObjectRobot
                        :precondition-TakeKit :endEffector-has-physicalLocation-refObject-robot)
ObjectPropertyAssertion(soap:hasPreconditionTakeKit_KitExists
                        :precondition-TakeKit :kit-exists)
ObjectPropertyAssertion(soap:hasPreconditionTakeKit_KitHasKitTray
                        :precondition-TakeKit :kit-has-kitTray)
// 4 end soap:PreconditionTakeKit
//*****************************************

ObjectPropertyAssertion(soap:hasTakeKit_Effect
                        :take-kit :effect-TakeKit)

//*****************************************
// 4 start soap:EffectTakeKit effect-TakeKit
Declaration(NamedIndividual(:effect-TakeKit))
ClassAssertion(soap:EffectTakeKit :effect-TakeKit)
ObjectPropertyAssertion(soap:hasEffectTakeKit_KitHasRefObjectEEff
                        :effect-TakeKit :kit-has-physicalLocation-refObject-endEffector)
ObjectPropertyAssertion(soap:hasEffectTakeKit_EEffHasKit
                        :effect-TakeKit :endEffector-has-heldObject-kit)
ObjectPropertyAssertion(soap:hasEffectTakeKit_NotKitHasRefObjectWorkTable
                        :effect-TakeKit :not-kit-has-physicalLocation-refObject-workTable)
ObjectPropertyAssertion(soap:hasEffectTakeKit_NotEEffHasNoObject
                        :effect-TakeKit :not-endEffector-has-no-heldObject)
ObjectPropertyAssertion(soap:hasEffectTakeKit_NotWorkTableHasObjectOnTableKit
                        :effect-TakeKit :not-workTable-has-objectOnTable-kit)
// 4 end soap:EffectTakeKit
//*****************************************

// 3 end soap:TakeKit
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_PlaceKit
                        :kitting-domain :place-kit)

//*****************************************
// 3 start soap:PlaceKit place-kit
Declaration(NamedIndividual(:place-kit))
ClassAssertion(soap:PlaceKit :place-kit)
DataPropertyAssertion(soap:hasPlaceKit_Description :place-kit
                      ";Place a Kit in a LargeBoxWithKits"^^xsd:string)
ObjectPropertyAssertion(soap:hasPlaceKit_ActionParameterSet
                        :place-kit :robot-PlaceKit)

//*****************************************
// 4 start soap:ActionParameterSet robot-PlaceKit
Declaration(NamedIndividual(:robot-PlaceKit))
ClassAssertion(soap:ActionParameterSet :robot-PlaceKit)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :robot-PlaceKit
                      "Robot"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :robot-PlaceKit
                      "1"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasPlaceKit_ActionParameterSet
                        :place-kit :kit-PlaceKit)

//*****************************************
// 4 start soap:ActionParameterSet kit-PlaceKit
Declaration(NamedIndividual(:kit-PlaceKit))
ClassAssertion(soap:ActionParameterSet :kit-PlaceKit)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :kit-PlaceKit
                      "Kit"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :kit-PlaceKit
                      "2"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasPlaceKit_ActionParameterSet
                        :place-kit :endEffector-PlaceKit)

//*****************************************
// 4 start soap:ActionParameterSet endEffector-PlaceKit
Declaration(NamedIndividual(:endEffector-PlaceKit))
ClassAssertion(soap:ActionParameterSet :endEffector-PlaceKit)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :endEffector-PlaceKit
                      "EndEffector"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :endEffector-PlaceKit
                      "3"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasPlaceKit_ActionParameterSet
                        :place-kit :lbwk-PlaceKit)

//*****************************************
// 4 start soap:ActionParameterSet lbwk-PlaceKit
Declaration(NamedIndividual(:lbwk-PlaceKit))
ClassAssertion(soap:ActionParameterSet :lbwk-PlaceKit)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :lbwk-PlaceKit
                      "LargeBoxWithKits"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :lbwk-PlaceKit
                      "4"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasPlaceKit_Precondition
                        :place-kit :precondition-PlaceKit)

//*****************************************
// 4 start soap:PreconditionPlaceKit precondition-PlaceKit
Declaration(NamedIndividual(:precondition-PlaceKit))
ClassAssertion(soap:PreconditionPlaceKit :precondition-PlaceKit)
ObjectPropertyAssertion(soap:hasPreconditionPlaceKit_F2FLessPlaceKit
                        :precondition-PlaceKit :f2f-PlaceKit)

//*****************************************
// 5 start soap:F2FLessPlaceKit f2f-PlaceKit
Declaration(NamedIndividual(:f2f-PlaceKit))
ClassAssertion(soap:F2FLessPlaceKit :f2f-PlaceKit)
ObjectPropertyAssertion(soap:hasF2FLessPlaceKit_F1
                        :f2f-PlaceKit :quantity-of-kits-in-lbwk)
ObjectPropertyAssertion(soap:hasF2FLessPlaceKit_F2
                        :f2f-PlaceKit :capacity-of-kits-in-lbwk)
// 5 end soap:F2FLessPlaceKit
//*****************************************

ObjectPropertyAssertion(soap:hasPreconditionPlaceKit_EEffHasKit
                        :precondition-PlaceKit :endEffector-has-heldObject-kit)
ObjectPropertyAssertion(soap:hasPreconditionPlaceKit_KitHasRefObjectEEff
                        :precondition-PlaceKit :kit-has-physicalLocation-refObject-endEffector)
ObjectPropertyAssertion(soap:hasPreconditionPlaceKit_RobotHasEEff
                        :precondition-PlaceKit :robot-has-endEffector)
ObjectPropertyAssertion(soap:hasPreconditionPlaceKit_EEffHasRefObjectRobot
                        :precondition-PlaceKit :endEffector-has-physicalLocation-refObject-robot)
// 4 end soap:PreconditionPlaceKit
//*****************************************

ObjectPropertyAssertion(soap:hasPlaceKit_Effect
                        :place-kit :effect-PlaceKit)

//*****************************************
// 4 start soap:EffectPlaceKit effect-PlaceKit
Declaration(NamedIndividual(:effect-PlaceKit))
ClassAssertion(soap:EffectPlaceKit :effect-PlaceKit)
ObjectPropertyAssertion(soap:hasEffectPlaceKit_NotKitExists
                        :effect-PlaceKit :not-kit-exists)
ObjectPropertyAssertion(soap:hasEffectPlaceKit_LBWKHasKit
                        :effect-PlaceKit :lbwk-has-kit)
ObjectPropertyAssertion(soap:hasEffectPlaceKit_FOIncreasePlaceKit
                        :effect-PlaceKit :increase-take-kitTray)

//*****************************************
// 5 start soap:FOIncreasePlaceKit increase-take-kitTray
Declaration(NamedIndividual(:increase-take-kitTray))
ClassAssertion(soap:FOIncreasePlaceKit :increase-take-kitTray)
DataPropertyAssertion(soap:hasFunctionOperation_Expression :increase-take-kitTray
                      "increase"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasFunctionOperation_Value :increase-take-kitTray
                      "1"^^xsd:positiveInteger)
ObjectPropertyAssertion(soap:hasFOIncreasePlaceKit_Function
                        :increase-take-kitTray :quantity-of-kits-in-lbwk)
// 5 end soap:FOIncreasePlaceKit
//*****************************************

ObjectPropertyAssertion(soap:hasEffectPlaceKit_KitHasRefObjectLBWK
                        :effect-PlaceKit :kit-has-physicalLocation-refObject-lbwk)
ObjectPropertyAssertion(soap:hasEffectPlaceKit_EEffHasNoObject
                        :effect-PlaceKit :endEffector-has-no-heldObject)
ObjectPropertyAssertion(soap:hasEffectPlaceKit_NotKitHasRefObjectEEff
                        :effect-PlaceKit :not-kit-has-physicalLocation-refObject-endEffector)
ObjectPropertyAssertion(soap:hasEffectPlaceKit_NotEEffHasKit
                        :effect-PlaceKit :not-endEffector-has-heldObject-kit)
// 4 end soap:EffectPlaceKit
//*****************************************

// 3 end soap:PlaceKit
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_LookForPart
                        :kitting-domain :look-for-part)

//*****************************************
// 3 start soap:LookForPart look-for-part
Declaration(NamedIndividual(:look-for-part))
ClassAssertion(soap:LookForPart :look-for-part)
DataPropertyAssertion(soap:hasLookForPart_Description :look-for-part
                      ";Looking for a Part given a StockKeepingUnit"^^xsd:string)
ObjectPropertyAssertion(soap:hasLookForPart_ActionParameterSet
                        :look-for-part :robot-LookForPart)

//*****************************************
// 4 start soap:ActionParameterSet robot-LookForPart
Declaration(NamedIndividual(:robot-LookForPart))
ClassAssertion(soap:ActionParameterSet :robot-LookForPart)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :robot-LookForPart
                      "Robot"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :robot-LookForPart
                      "1"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasLookForPart_ActionParameterSet
                        :look-for-part :part-LookForPart)

//*****************************************
// 4 start soap:ActionParameterSet part-LookForPart
Declaration(NamedIndividual(:part-LookForPart))
ClassAssertion(soap:ActionParameterSet :part-LookForPart)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :part-LookForPart
                      "Part"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :part-LookForPart
                      "2"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasLookForPart_ActionParameterSet
                        :look-for-part :partSku-LookForPart)

//*****************************************
// 4 start soap:ActionParameterSet partSku-LookForPart
Declaration(NamedIndividual(:partSku-LookForPart))
ClassAssertion(soap:ActionParameterSet :partSku-LookForPart)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :partSku-LookForPart
                      "StockKeepingUnit"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :partSku-LookForPart
                      "3"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasLookForPart_ActionParameterSet
                        :look-for-part :kit-LookForPart)

//*****************************************
// 4 start soap:ActionParameterSet kit-LookForPart
Declaration(NamedIndividual(:kit-LookForPart))
ClassAssertion(soap:ActionParameterSet :kit-LookForPart)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :kit-LookForPart
                      "Kit"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :kit-LookForPart
                      "4"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasLookForPart_ActionParameterSet
                        :look-for-part :endEffector-LookForPart)

//*****************************************
// 4 start soap:ActionParameterSet endEffector-LookForPart
Declaration(NamedIndividual(:endEffector-LookForPart))
ClassAssertion(soap:ActionParameterSet :endEffector-LookForPart)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :endEffector-LookForPart
                      "EndEffector"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :endEffector-LookForPart
                      "5"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasLookForPart_Precondition
                        :look-for-part :precondition-LookForPart)

//*****************************************
// 4 start soap:PreconditionLookForPart precondition-LookForPart
Declaration(NamedIndividual(:precondition-LookForPart))
ClassAssertion(soap:PreconditionLookForPart :precondition-LookForPart)
ObjectPropertyAssertion(soap:hasPreconditionLookForPart_F2DGreaterLookForPart
                        :precondition-LookForPart :f2d-LookForPart)

//*****************************************
// 5 start soap:F2DGreaterLookForPart f2d-LookForPart
Declaration(NamedIndividual(:f2d-LookForPart))
ClassAssertion(soap:F2DGreaterLookForPart :f2d-LookForPart)
DataPropertyAssertion(soap:hasFunctionToDecimalBool_DecimalNumber :f2d-LookForPart
                      "0.000000"^^xsd:decimal)
ObjectPropertyAssertion(soap:hasF2DGreaterLookForPart_F1
                        :f2d-LookForPart :part-found-flag)
// 5 end soap:F2DGreaterLookForPart
//*****************************************

ObjectPropertyAssertion(soap:hasPreconditionLookForPart_KitExists
                        :precondition-LookForPart :kit-exists)
ObjectPropertyAssertion(soap:hasPreconditionLookForPart_EEffIsForPartSKU
                        :precondition-LookForPart :endEffector-is-for-partSKU)
ObjectPropertyAssertion(soap:hasPreconditionLookForPart_EEffHasRefObjectRobot
                        :precondition-LookForPart :endEffector-has-physicalLocation-refObject-robot)
ObjectPropertyAssertion(soap:hasPreconditionLookForPart_RobotHasEEff
                        :precondition-LookForPart :robot-has-endEffector)
ObjectPropertyAssertion(soap:hasPreconditionLookForPart_EEffHasNoObject
                        :precondition-LookForPart :endEffector-has-no-heldObject)
ObjectPropertyAssertion(soap:hasPreconditionLookForPart_PartHasSKUObjectSKU
                        :precondition-LookForPart :part-has-skuObject-sku)
// 4 end soap:PreconditionLookForPart
//*****************************************

ObjectPropertyAssertion(soap:hasLookForPart_Effect
                        :look-for-part :effect-LookForPart)

//*****************************************
// 4 start soap:EffectLookForPart effect-LookForPart
Declaration(NamedIndividual(:effect-LookForPart))
ClassAssertion(soap:EffectLookForPart :effect-LookForPart)
ObjectPropertyAssertion(soap:hasEffectLookForPart_PartFound
                        :effect-LookForPart :part-is-found)
ObjectPropertyAssertion(soap:hasEffectLookForPart_DecreaseLookForPart
                        :effect-LookForPart :decrease-LookForPart)

//*****************************************
// 5 start soap:DecreaseLookForPart decrease-LookForPart
Declaration(NamedIndividual(:decrease-LookForPart))
ClassAssertion(soap:DecreaseLookForPart :decrease-LookForPart)
DataPropertyAssertion(soap:hasFunctionOperation_Expression :decrease-LookForPart
                      "decrease"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasFunctionOperation_Value :decrease-LookForPart
                      "1"^^xsd:positiveInteger)
ObjectPropertyAssertion(soap:hasDecreaseLookForPart_Function
                        :decrease-LookForPart :part-found-flag)
// 5 end soap:DecreaseLookForPart
//*****************************************

// 4 end soap:EffectLookForPart
//*****************************************

// 3 end soap:LookForPart
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_TakePart
                        :kitting-domain :take-part)

//*****************************************
// 3 start soap:TakePart take-part
Declaration(NamedIndividual(:take-part))
ClassAssertion(soap:TakePart :take-part)
DataPropertyAssertion(soap:hasTakePart_Description :take-part
                      ";Take a Part from a PartsTray"^^xsd:string)
ObjectPropertyAssertion(soap:hasTakePart_ActionParameterSet
                        :take-part :robot-TakePart)

//*****************************************
// 4 start soap:ActionParameterSet robot-TakePart
Declaration(NamedIndividual(:robot-TakePart))
ClassAssertion(soap:ActionParameterSet :robot-TakePart)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :robot-TakePart
                      "Robot"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :robot-TakePart
                      "1"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasTakePart_ActionParameterSet
                        :take-part :part-TakePart)

//*****************************************
// 4 start soap:ActionParameterSet part-TakePart
Declaration(NamedIndividual(:part-TakePart))
ClassAssertion(soap:ActionParameterSet :part-TakePart)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :part-TakePart
                      "Part"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :part-TakePart
                      "2"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasTakePart_ActionParameterSet
                        :take-part :partSku-TakePart)

//*****************************************
// 4 start soap:ActionParameterSet partSku-TakePart
Declaration(NamedIndividual(:partSku-TakePart))
ClassAssertion(soap:ActionParameterSet :partSku-TakePart)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :partSku-TakePart
                      "StockKeepingUnit"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :partSku-TakePart
                      "3"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasTakePart_ActionParameterSet
                        :take-part :partsTray-TakePart)

//*****************************************
// 4 start soap:ActionParameterSet partsTray-TakePart
Declaration(NamedIndividual(:partsTray-TakePart))
ClassAssertion(soap:ActionParameterSet :partsTray-TakePart)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :partsTray-TakePart
                      "PartsTray"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :partsTray-TakePart
                      "4"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasTakePart_ActionParameterSet
                        :take-part :endEffector-TakePart)

//*****************************************
// 4 start soap:ActionParameterSet endEffector-TakePart
Declaration(NamedIndividual(:endEffector-TakePart))
ClassAssertion(soap:ActionParameterSet :endEffector-TakePart)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :endEffector-TakePart
                      "EndEffector"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :endEffector-TakePart
                      "5"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasTakePart_ActionParameterSet
                        :take-part :kit-TakePart)

//*****************************************
// 4 start soap:ActionParameterSet kit-TakePart
Declaration(NamedIndividual(:kit-TakePart))
ClassAssertion(soap:ActionParameterSet :kit-TakePart)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :kit-TakePart
                      "Kit"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :kit-TakePart
                      "6"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasTakePart_Precondition
                        :take-part :precondition-TakePart)

//*****************************************
// 4 start soap:PreconditionTakePart precondition-TakePart
Declaration(NamedIndividual(:precondition-TakePart))
ClassAssertion(soap:PreconditionTakePart :precondition-TakePart)
ObjectPropertyAssertion(soap:hasPreconditionTakePart_KitExists
                        :precondition-TakePart :kit-exists)
ObjectPropertyAssertion(soap:hasPreconditionTakePart_PartHasSKUObjectSKU
                        :precondition-TakePart :part-has-skuObject-sku)
ObjectPropertyAssertion(soap:hasPreconditionTakePart_EEffIsForPartSKU
                        :precondition-TakePart :endEffector-is-for-partSKU)
ObjectPropertyAssertion(soap:hasPreconditionTakePart_PartHasRefObjectPartsTray
                        :precondition-TakePart :part-has-physicalLocation-refObject-partsTray)
ObjectPropertyAssertion(soap:hasPreconditionTakePart_PartsVesselHasPart
                        :precondition-TakePart :partsVessel-has-part)
ObjectPropertyAssertion(soap:hasPreconditionTakePart_EEffHasRefObjectRobot
                        :precondition-TakePart :endEffector-has-physicalLocation-refObject-robot)
ObjectPropertyAssertion(soap:hasPreconditionTakePart_RobotHasEEff
                        :precondition-TakePart :robot-has-endEffector)
ObjectPropertyAssertion(soap:hasPreconditionTakePart_EEffHasNoObject
                        :precondition-TakePart :endEffector-has-no-heldObject)
ObjectPropertyAssertion(soap:hasPreconditionTakePart_PartFound
                        :precondition-TakePart :part-is-found)
ObjectPropertyAssertion(soap:hasPreconditionTakePart_F2DGreaterTakePart
                        :precondition-TakePart :f2d-TakePart)

//*****************************************
// 5 start soap:F2DGreaterTakePart f2d-TakePart
Declaration(NamedIndividual(:f2d-TakePart))
ClassAssertion(soap:F2DGreaterTakePart :f2d-TakePart)
DataPropertyAssertion(soap:hasFunctionToDecimalBool_DecimalNumber :f2d-TakePart
                      "0.000000"^^xsd:decimal)
ObjectPropertyAssertion(soap:hasF2DGreaterTakePart_F1
                        :f2d-TakePart :quantity-of-parts-in-partstray)
// 5 end soap:F2DGreaterTakePart
//*****************************************

// 4 end soap:PreconditionTakePart
//*****************************************

ObjectPropertyAssertion(soap:hasTakePart_Effect
                        :take-part :effect-TakePart)

//*****************************************
// 4 start soap:EffectTakePart effect-TakePart
Declaration(NamedIndividual(:effect-TakePart))
ClassAssertion(soap:EffectTakePart :effect-TakePart)
ObjectPropertyAssertion(soap:hasEffectTakePart_PartHasRefObjectEEff
                        :effect-TakePart :part-has-physicalLocation-refObject-endEffector)
ObjectPropertyAssertion(soap:hasEffectTakePart_EEffHasPart
                        :effect-TakePart :endEffector-has-heldObject-part)
ObjectPropertyAssertion(soap:hasEffectTakePart_NotPartHasRefObjectPartsTray
                        :effect-TakePart :not-part-has-physicalLocation-refObject-partsTray)
ObjectPropertyAssertion(soap:hasEffectTakePart_DecreaseTakePart
                        :effect-TakePart :decrease-TakePart)

//*****************************************
// 5 start soap:DecreaseTakePart decrease-TakePart
Declaration(NamedIndividual(:decrease-TakePart))
ClassAssertion(soap:DecreaseTakePart :decrease-TakePart)
DataPropertyAssertion(soap:hasFunctionOperation_Expression :decrease-TakePart
                      "decrease"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasFunctionOperation_Value :decrease-TakePart
                      "1"^^xsd:positiveInteger)
ObjectPropertyAssertion(soap:hasDecreaseTakePart_Function
                        :decrease-TakePart :quantity-of-parts-in-partstray)
// 5 end soap:DecreaseTakePart
//*****************************************

ObjectPropertyAssertion(soap:hasEffectTakePart_NotEEffHasNoObject
                        :effect-TakePart :not-endEffector-has-no-heldObject)
// 4 end soap:EffectTakePart
//*****************************************

// 3 end soap:TakePart
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_PlacePart
                        :kitting-domain :place-part)

//*****************************************
// 3 start soap:PlacePart place-part
Declaration(NamedIndividual(:place-part))
ClassAssertion(soap:PlacePart :place-part)
DataPropertyAssertion(soap:hasPlacePart_Description :place-part
                      ";Place a Part in a Kit"^^xsd:string)
ObjectPropertyAssertion(soap:hasPlacePart_ActionParameterSet
                        :place-part :robot-PlacePart)

//*****************************************
// 4 start soap:ActionParameterSet robot-PlacePart
Declaration(NamedIndividual(:robot-PlacePart))
ClassAssertion(soap:ActionParameterSet :robot-PlacePart)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :robot-PlacePart
                      "Robot"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :robot-PlacePart
                      "1"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasPlacePart_ActionParameterSet
                        :place-part :part-PlacePart)

//*****************************************
// 4 start soap:ActionParameterSet part-PlacePart
Declaration(NamedIndividual(:part-PlacePart))
ClassAssertion(soap:ActionParameterSet :part-PlacePart)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :part-PlacePart
                      "Part"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :part-PlacePart
                      "2"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasPlacePart_ActionParameterSet
                        :place-part :partSku-PlacePart)

//*****************************************
// 4 start soap:ActionParameterSet partSku-PlacePart
Declaration(NamedIndividual(:partSku-PlacePart))
ClassAssertion(soap:ActionParameterSet :partSku-PlacePart)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :partSku-PlacePart
                      "StockKeepingUnit"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :partSku-PlacePart
                      "3"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasPlacePart_ActionParameterSet
                        :place-part :kit-PlacePart)

//*****************************************
// 4 start soap:ActionParameterSet kit-PlacePart
Declaration(NamedIndividual(:kit-PlacePart))
ClassAssertion(soap:ActionParameterSet :kit-PlacePart)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :kit-PlacePart
                      "Kit"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :kit-PlacePart
                      "4"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasPlacePart_ActionParameterSet
                        :place-part :endEffector-PlacePart)

//*****************************************
// 4 start soap:ActionParameterSet endEffector-PlacePart
Declaration(NamedIndividual(:endEffector-PlacePart))
ClassAssertion(soap:ActionParameterSet :endEffector-PlacePart)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :endEffector-PlacePart
                      "EndEffector"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :endEffector-PlacePart
                      "5"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasPlacePart_ActionParameterSet
                        :place-part :workTable-PlacePart)

//*****************************************
// 4 start soap:ActionParameterSet workTable-PlacePart
Declaration(NamedIndividual(:workTable-PlacePart))
ClassAssertion(soap:ActionParameterSet :workTable-PlacePart)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :workTable-PlacePart
                      "WorkTable"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :workTable-PlacePart
                      "6"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasPlacePart_ActionParameterSet
                        :place-part :partsTray-PlacePart)

//*****************************************
// 4 start soap:ActionParameterSet partsTray-PlacePart
Declaration(NamedIndividual(:partsTray-PlacePart))
ClassAssertion(soap:ActionParameterSet :partsTray-PlacePart)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :partsTray-PlacePart
                      "PartsTray"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :partsTray-PlacePart
                      "7"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasPlacePart_Precondition
                        :place-part :precondition-PlacePart)

//*****************************************
// 4 start soap:PreconditionPlacePart precondition-PlacePart
Declaration(NamedIndividual(:precondition-PlacePart))
ClassAssertion(soap:PreconditionPlacePart :precondition-PlacePart)
ObjectPropertyAssertion(soap:hasPreconditionPlacePart_RobotHasEEff
                        :precondition-PlacePart :robot-has-endEffector)
ObjectPropertyAssertion(soap:hasPreconditionPlacePart_EEffHasRefObjectRobot
                        :precondition-PlacePart :endEffector-has-physicalLocation-refObject-robot)
ObjectPropertyAssertion(soap:hasPreconditionPlacePart_PartHasRefObjectEEff
                        :precondition-PlacePart :part-has-physicalLocation-refObject-endEffector)
ObjectPropertyAssertion(soap:hasPreconditionPlacePart_EEffHasPart
                        :precondition-PlacePart :endEffector-has-heldObject-part)
ObjectPropertyAssertion(soap:hasPreconditionPlacePart_KitExists
                        :precondition-PlacePart :kit-exists)
ObjectPropertyAssertion(soap:hasPreconditionPlacePart_PartHasSKUObjectSKU
                        :precondition-PlacePart :part-has-skuObject-sku)
ObjectPropertyAssertion(soap:hasPreconditionPlacePart_F2FPlacePart
                        :precondition-PlacePart :f2fPlacePart)

//*****************************************
// 5 start soap:F2FPlacePart f2fPlacePart
Declaration(NamedIndividual(:f2fPlacePart))
ClassAssertion(soap:F2FPlacePart :f2fPlacePart)
ObjectPropertyAssertion(soap:hasF2FPlacePart_F1
                        :f2fPlacePart :quantity-of-parts-in-kit)
ObjectPropertyAssertion(soap:hasF2FPlacePart_F2
                        :f2fPlacePart :capacity-of-parts-in-kit)
// 5 end soap:F2FPlacePart
//*****************************************

// 4 end soap:PreconditionPlacePart
//*****************************************

ObjectPropertyAssertion(soap:hasPlacePart_Effect
                        :place-part :effect-PlacePart)

//*****************************************
// 4 start soap:EffectPlacePart effect-PlacePart
Declaration(NamedIndividual(:effect-PlacePart))
ClassAssertion(soap:EffectPlacePart :effect-PlacePart)
ObjectPropertyAssertion(soap:hasEffectPlacePart_IncreasePlacePart
                        :effect-PlacePart :increase-PlacePart)

//*****************************************
// 5 start soap:IncreasePlacePart increase-PlacePart
Declaration(NamedIndividual(:increase-PlacePart))
ClassAssertion(soap:IncreasePlacePart :increase-PlacePart)
DataPropertyAssertion(soap:hasFunctionOperation_Expression :increase-PlacePart
                      "increase"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasFunctionOperation_Value :increase-PlacePart
                      "1"^^xsd:positiveInteger)
ObjectPropertyAssertion(soap:hasIncreasePlacePart_Function
                        :increase-PlacePart :current-quantity-of-parts-in-kit)
// 5 end soap:IncreasePlacePart
//*****************************************

ObjectPropertyAssertion(soap:hasEffectPlacePart_IncreasePlacePart2
                        :effect-PlacePart :increase-PlacePart2)

//*****************************************
// 5 start soap:IncreasePlacePart2 increase-PlacePart2
Declaration(NamedIndividual(:increase-PlacePart2))
ClassAssertion(soap:IncreasePlacePart2 :increase-PlacePart2)
DataPropertyAssertion(soap:hasFunctionOperation_Expression :increase-PlacePart2
                      "increase"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasFunctionOperation_Value :increase-PlacePart2
                      "1"^^xsd:positiveInteger)
ObjectPropertyAssertion(soap:hasIncreasePlacePart2_Function
                        :increase-PlacePart2 :part-found-flag)
// 5 end soap:IncreasePlacePart2
//*****************************************

ObjectPropertyAssertion(soap:hasEffectPlacePart_IncreasePlacePart3
                        :effect-PlacePart :increase-PlacePart3)

//*****************************************
// 5 start soap:IncreasePlacePart3 increase-PlacePart3
Declaration(NamedIndividual(:increase-PlacePart3))
ClassAssertion(soap:IncreasePlacePart3 :increase-PlacePart3)
DataPropertyAssertion(soap:hasFunctionOperation_Expression :increase-PlacePart3
                      "increase"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasFunctionOperation_Value :increase-PlacePart3
                      "1"^^xsd:positiveInteger)
ObjectPropertyAssertion(soap:hasIncreasePlacePart3_Function
                        :increase-PlacePart3 :quantity-of-parts-in-kit)
// 5 end soap:IncreasePlacePart3
//*****************************************

ObjectPropertyAssertion(soap:hasEffectPlacePart_NotPartHasRefObjectEEff
                        :effect-PlacePart :not-part-has-physicalLocation-refObject-endEffector)
ObjectPropertyAssertion(soap:hasEffectPlacePart_NotEEffHasPart
                        :effect-PlacePart :not-endEffector-has-heldObject-part)
ObjectPropertyAssertion(soap:hasEffectPlacePart_PartHasRefObjectKit
                        :effect-PlacePart :part-has-physicalLocation-refObject-kit)
ObjectPropertyAssertion(soap:hasEffectPlacePart_EEffHasNoObject
                        :effect-PlacePart :endEffector-has-no-heldObject)
// 4 end soap:EffectPlacePart
//*****************************************

// 3 end soap:PlacePart
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_AttachEndEffector
                        :kitting-domain :attach-endEffector)

//*****************************************
// 3 start soap:AttachEndEffector attach-endEffector
Declaration(NamedIndividual(:attach-endEffector))
ClassAssertion(soap:AttachEndEffector :attach-endEffector)
DataPropertyAssertion(soap:hasAttachEndEffector_Description :attach-endEffector
                      ";Attach an EndEffector to a Robot"^^xsd:string)
ObjectPropertyAssertion(soap:hasAttachEndEffector_ActionParameterSet
                        :attach-endEffector :robot-AttachEndEffector)

//*****************************************
// 4 start soap:ActionParameterSet robot-AttachEndEffector
Declaration(NamedIndividual(:robot-AttachEndEffector))
ClassAssertion(soap:ActionParameterSet :robot-AttachEndEffector)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :robot-AttachEndEffector
                      "Robot"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :robot-AttachEndEffector
                      "1"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasAttachEndEffector_ActionParameterSet
                        :attach-endEffector :endEffector-AttachEndEffector)

//*****************************************
// 4 start soap:ActionParameterSet endEffector-AttachEndEffector
Declaration(NamedIndividual(:endEffector-AttachEndEffector))
ClassAssertion(soap:ActionParameterSet :endEffector-AttachEndEffector)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :endEffector-AttachEndEffector
                      "EndEffector"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :endEffector-AttachEndEffector
                      "2"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasAttachEndEffector_ActionParameterSet
                        :attach-endEffector :endEffectorHolder-AttachEndEffector)

//*****************************************
// 4 start soap:ActionParameterSet endEffectorHolder-AttachEndEffector
Declaration(NamedIndividual(:endEffectorHolder-AttachEndEffector))
ClassAssertion(soap:ActionParameterSet :endEffectorHolder-AttachEndEffector)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :endEffectorHolder-AttachEndEffector
                      "EndEffectorHolder"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :endEffectorHolder-AttachEndEffector
                      "3"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasAttachEndEffector_ActionParameterSet
                        :attach-endEffector :endEffectorChangingStation-AttachEndEffector)

//*****************************************
// 4 start soap:ActionParameterSet endEffectorChangingStation-AttachEndEffector
Declaration(NamedIndividual(:endEffectorChangingStation-AttachEndEffector))
ClassAssertion(soap:ActionParameterSet :endEffectorChangingStation-AttachEndEffector)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :endEffectorChangingStation-AttachEndEffector
                      "EndEffectorChangingStation"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :endEffectorChangingStation-AttachEndEffector
                      "4"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasAttachEndEffector_Precondition
                        :attach-endEffector :precondition-AttachEndEffector)

//*****************************************
// 4 start soap:PreconditionAttachEndEffector precondition-AttachEndEffector
Declaration(NamedIndividual(:precondition-AttachEndEffector))
ClassAssertion(soap:PreconditionAttachEndEffector :precondition-AttachEndEffector)
ObjectPropertyAssertion(soap:hasPreconditionAttachEndEffector_EEffHasRefObjectEEffHolder
                        :precondition-AttachEndEffector :endEffector-has-physicalLocation-refObject-endEffectorHolder)
ObjectPropertyAssertion(soap:hasPreconditionAttachEndEffector_EEffHolderHasEEff
                        :precondition-AttachEndEffector :endEffectorHolder-has-endEffector)
ObjectPropertyAssertion(soap:hasPreconditionAttachEndEffector_RobotHasNoEEff
                        :precondition-AttachEndEffector :robot-has-no-endEffector)
ObjectPropertyAssertion(soap:hasPreconditionAttachEndEffector_EEffHolderHasRefObjectChStation
                        :precondition-AttachEndEffector :endEffectorHolder-has-physicalLocation-refObject-changingStation)
ObjectPropertyAssertion(soap:hasPreconditionAttachEndEffector_ChStationHasEEffHolder
                        :precondition-AttachEndEffector :endEffectorChangingStation-has-endEffectorHolder)
// 4 end soap:PreconditionAttachEndEffector
//*****************************************

ObjectPropertyAssertion(soap:hasAttachEndEffector_Effect
                        :attach-endEffector :effect-AttachEndEffector)

//*****************************************
// 4 start soap:EffectAttachEndEffector effect-AttachEndEffector
Declaration(NamedIndividual(:effect-AttachEndEffector))
ClassAssertion(soap:EffectAttachEndEffector :effect-AttachEndEffector)
ObjectPropertyAssertion(soap:hasEffectAttachEndEffector_EEffHasNoObject
                        :effect-AttachEndEffector :endEffector-has-no-heldObject)
ObjectPropertyAssertion(soap:hasEffectAttachEndEffector_EEffHasRefObjectRobot
                        :effect-AttachEndEffector :endEffector-has-physicalLocation-refObject-robot)
ObjectPropertyAssertion(soap:hasEffectAttachEndEffector_RobotHasEEff
                        :effect-AttachEndEffector :robot-has-endEffector)
ObjectPropertyAssertion(soap:hasEffectAttachEndEffector_NotEEffHasRefObjectEEffHolder
                        :effect-AttachEndEffector :not-endEffector-has-physicalLocation-refObject-endEffectorHolder)
ObjectPropertyAssertion(soap:hasEffectAttachEndEffector_NotEEffHolderHasEEff
                        :effect-AttachEndEffector :not-endEffectorHolder-has-endEffector)
ObjectPropertyAssertion(soap:hasEffectAttachEndEffector_NotRobotHasNoEEff
                        :effect-AttachEndEffector :not-robot-has-no-endEffector)
// 4 end soap:EffectAttachEndEffector
//*****************************************

// 3 end soap:AttachEndEffector
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_DetachEndEffector
                        :kitting-domain :detach-endEffector)

//*****************************************
// 3 start soap:DetachEndEffector detach-endEffector
Declaration(NamedIndividual(:detach-endEffector))
ClassAssertion(soap:DetachEndEffector :detach-endEffector)
DataPropertyAssertion(soap:hasDetachEndEffector_Description :detach-endEffector
                      ";Detach an EndEffector from a Robot"^^xsd:string)
ObjectPropertyAssertion(soap:hasDetachEndEffector_ActionParameterSet
                        :detach-endEffector :robot-DetachEndEffector)

//*****************************************
// 4 start soap:ActionParameterSet robot-DetachEndEffector
Declaration(NamedIndividual(:robot-DetachEndEffector))
ClassAssertion(soap:ActionParameterSet :robot-DetachEndEffector)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :robot-DetachEndEffector
                      "Robot"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :robot-DetachEndEffector
                      "1"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasDetachEndEffector_ActionParameterSet
                        :detach-endEffector :endEffector-DetachEndEffector)

//*****************************************
// 4 start soap:ActionParameterSet endEffector-DetachEndEffector
Declaration(NamedIndividual(:endEffector-DetachEndEffector))
ClassAssertion(soap:ActionParameterSet :endEffector-DetachEndEffector)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :endEffector-DetachEndEffector
                      "EndEffector"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :endEffector-DetachEndEffector
                      "2"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasDetachEndEffector_ActionParameterSet
                        :detach-endEffector :endEffectorHolder-DetachEndEffector)

//*****************************************
// 4 start soap:ActionParameterSet endEffectorHolder-DetachEndEffector
Declaration(NamedIndividual(:endEffectorHolder-DetachEndEffector))
ClassAssertion(soap:ActionParameterSet :endEffectorHolder-DetachEndEffector)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :endEffectorHolder-DetachEndEffector
                      "EndEffectorHolder"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :endEffectorHolder-DetachEndEffector
                      "3"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasDetachEndEffector_ActionParameterSet
                        :detach-endEffector :endEffectorChangingStation-DetachEndEffector)

//*****************************************
// 4 start soap:ActionParameterSet endEffectorChangingStation-DetachEndEffector
Declaration(NamedIndividual(:endEffectorChangingStation-DetachEndEffector))
ClassAssertion(soap:ActionParameterSet :endEffectorChangingStation-DetachEndEffector)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :endEffectorChangingStation-DetachEndEffector
                      "EndEffectorChangingStation"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :endEffectorChangingStation-DetachEndEffector
                      "4"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasDetachEndEffector_Precondition
                        :detach-endEffector :precondition-DetachEndEffector)

//*****************************************
// 4 start soap:PreconditionDetachEndEffector precondition-DetachEndEffector
Declaration(NamedIndividual(:precondition-DetachEndEffector))
ClassAssertion(soap:PreconditionDetachEndEffector :precondition-DetachEndEffector)
ObjectPropertyAssertion(soap:hasPreconditionDetachEndEffector_EEffHasRefObjectRobot
                        :precondition-DetachEndEffector :endEffector-has-physicalLocation-refObject-robot)
ObjectPropertyAssertion(soap:hasPreconditionDetachEndEffector_RobotHasEEff
                        :precondition-DetachEndEffector :robot-has-endEffector)
ObjectPropertyAssertion(soap:hasPreconditionDetachEndEffector_EEffHasNoObject
                        :precondition-DetachEndEffector :endEffector-has-no-heldObject)
ObjectPropertyAssertion(soap:hasPreconditionDetachEndEffector_EEffHolderHasRefObjectChStation
                        :precondition-DetachEndEffector :endEffectorHolder-has-physicalLocation-refObject-changingStation)
ObjectPropertyAssertion(soap:hasPreconditionDetachEndEffector_ChStationHasEEffHolder
                        :precondition-DetachEndEffector :endEffectorChangingStation-has-endEffectorHolder)
// 4 end soap:PreconditionDetachEndEffector
//*****************************************

ObjectPropertyAssertion(soap:hasDetachEndEffector_Effect
                        :detach-endEffector :effect-DetachEndEffector)

//*****************************************
// 4 start soap:EffectDetachEndEffector effect-DetachEndEffector
Declaration(NamedIndividual(:effect-DetachEndEffector))
ClassAssertion(soap:EffectDetachEndEffector :effect-DetachEndEffector)
ObjectPropertyAssertion(soap:hasEffectDetachEndEffector_NotEEffHasRefObjectRobot
                        :effect-DetachEndEffector :not-endEffector-has-physicalLocation-refObject-robot)
ObjectPropertyAssertion(soap:hasEffectDetachEndEffector_NotRobotHasEEff
                        :effect-DetachEndEffector :not-robot-has-endEffector)
ObjectPropertyAssertion(soap:hasEffectDetachEndEffector_EEffHasRefObjectEEffHolder
                        :effect-DetachEndEffector :endEffector-has-physicalLocation-refObject-endEffectorHolder)
ObjectPropertyAssertion(soap:hasEffectDetachEndEffector_EEffHolderHasEEff
                        :effect-DetachEndEffector :endEffectorHolder-has-endEffector)
ObjectPropertyAssertion(soap:hasEffectDetachEndEffector_RobotHasNoEEff
                        :effect-DetachEndEffector :robot-has-no-endEffector)
// 4 end soap:EffectDetachEndEffector
//*****************************************

// 3 end soap:DetachEndEffector
//*****************************************

// 2 end soap:Domain
//*****************************************

ObjectPropertyAssertion(soap:hasSOAP_InContactWith
                        :soap :InContactWith)

//*****************************************
// 2 start soap:InContactWith InContactWith
Declaration(NamedIndividual(:InContactWith))
ClassAssertion(soap:InContactWith :InContactWith)
DataPropertyAssertion(soap:hasPositiveStateRelation_RCC8Set :InContactWith
                      "X-EC or Y-EC or Z-EC"^^xsd:string)
// 2 end soap:InContactWith
//*****************************************

ObjectPropertyAssertion(soap:hasSOAP_UnderWithContact
                        :soap :UnderWithContact)

//*****************************************
// 2 start soap:UnderWithContact UnderWithContact
Declaration(NamedIndividual(:UnderWithContact))
ClassAssertion(soap:UnderWithContact :UnderWithContact)
DataPropertyAssertion(soap:hasPositiveStateRelation_RCC8Set :UnderWithContact
                      "Z-EC and Z-Minus and (X-NTPP or X-NTPPi or X-PO or X-TPP or X-TPPi) and (Y-NTPP or Y-NTPPi or Y-PO or Y-TPP or Y-TPPi)"^^xsd:string)
// 2 end soap:UnderWithContact
//*****************************************

ObjectPropertyAssertion(soap:hasSOAP_PartiallyIn
                        :soap :PartiallyIn)

//*****************************************
// 2 start soap:PartiallyIn PartiallyIn
Declaration(NamedIndividual(:PartiallyIn))
ClassAssertion(soap:PartiallyIn :PartiallyIn)
DataPropertyAssertion(soap:hasPositiveStateRelation_RCC8Set :PartiallyIn
                      "(Z-Plus and (Z-NTPP or Z-NTPPi or Z-PO or Z-TPP or Z-TPPi)) and (X-NTPP or X-NTPPi or X-TPP or X-TPPi) and (Y-NTPP or Y-NTPPi or Y-TPP or Y-TPPi)"^^xsd:string)
// 2 end soap:PartiallyIn
//*****************************************

ObjectPropertyAssertion(soap:hasSOAP_OnTopWithContact
                        :soap :OnTopWithContact)

//*****************************************
// 2 start soap:OnTopWithContact OnTopWithContact
Declaration(NamedIndividual(:OnTopWithContact))
ClassAssertion(soap:OnTopWithContact :OnTopWithContact)
DataPropertyAssertion(soap:hasPositiveStateRelation_RCC8Set :OnTopWithContact
                      "Z-EC and Z-Plus and (X-NTPP or X-NTPPi or X-PO or X-TPP or X-TPPi) and (Y-NTPP or Y-NTPPi or Y-PO or Y-TPP or Y-TPPi)"^^xsd:string)
// 2 end soap:OnTopWithContact
//*****************************************

ObjectPropertyAssertion(soap:hasSOAP_ContainedIn
                        :soap :ContainedIn)

//*****************************************
// 2 start soap:ContainedIn ContainedIn
Declaration(NamedIndividual(:ContainedIn))
ClassAssertion(soap:ContainedIn :ContainedIn)
DataPropertyAssertion(soap:hasPositiveStateRelation_RCC8Set :ContainedIn
                      "(X-TPP or X-NTPP) and (Y-TPP or Y-NTPP) and (Z-TPP or Z-NTPP)"^^xsd:string)
// 2 end soap:ContainedIn
//*****************************************

ObjectPropertyAssertion(soap:hasSOAP_ContainedInLBWK
                        :soap :ContainedInLBWK)

//*****************************************
// 2 start soap:ContainedInLBWK ContainedInLBWK
Declaration(NamedIndividual(:ContainedInLBWK))
ClassAssertion(soap:ContainedInLBWK :ContainedInLBWK)
DataPropertyAssertion(soap:hasPositiveStateRelation_RCC8Set :ContainedInLBWK
                      "(X-TPP or X-NTPP) and (Y-TPP or Y-NTPP) and (Z-TPP or Z-NTPP)"^^xsd:string)
// 2 end soap:ContainedInLBWK
//*****************************************

ObjectPropertyAssertion(soap:hasSOAP_OnTopOf
                        :soap :OnTopOf)

//*****************************************
// 2 start soap:OnTopOf OnTopOf
Declaration(NamedIndividual(:OnTopOf))
ClassAssertion(soap:OnTopOf :OnTopOf)
DataPropertyAssertion(soap:hasPositiveStateRelation_RCC8Set :OnTopOf
                      "Greater-Z and (X-EQ or X-NTPP or X-TPP or X-PO or X-NTPPi  or X-TPPi) and (Y-EQ or Y-NTPP or Y-TPP or Y-PO or Y-NTPPi or Y-TPPi)"^^xsd:string)
// 2 end soap:OnTopOf
//*****************************************

ObjectPropertyAssertion(soap:hasSOAP_Under
                        :soap :Under)

//*****************************************
// 2 start soap:Under Under
Declaration(NamedIndividual(:Under))
ClassAssertion(soap:Under :Under)
DataPropertyAssertion(soap:hasPositiveStateRelation_RCC8Set :Under
                      "Smaller-Z and (X-EC or X-NTPP or X-TPP or X-PO or X-NTPPi or X-TPPi) and (Y-EC or Y-NTPP or Y-TPP or Y-PO or Y-NTPPi or Y-TPPi)"^^xsd:string)
// 2 end soap:Under
//*****************************************

ObjectPropertyAssertion(soap:hasSOAP_PartiallyInAndInContactWith
                        :soap :Partially-In-And-In-Contact-With)

//*****************************************
// 2 start soap:PartiallyInAndInContactWith Partially-In-And-In-Contact-With
Declaration(NamedIndividual(:Partially-In-And-In-Contact-With))
ClassAssertion(soap:PartiallyInAndInContactWith :Partially-In-And-In-Contact-With)
DataPropertyAssertion(soap:hasPositiveStateRelation_RCC8Set :Partially-In-And-In-Contact-With
                      "((Z-Plus and (Z-NTPP or Z-NTPPi or Z-PO or Z-TPP or Z-TPPi)) and (X-NTPP or X-NTPPi or X-TPP or X-TPPi) and (Y-NTPP or Y-NTPPi or Y-TPP or Y-TPPi)) and (X-EC or Y-EC or Z-EC)"^^xsd:string)
// 2 end soap:PartiallyInAndInContactWith
//*****************************************

ObjectPropertyAssertion(soap:hasSOAP_NotInContactWith
                        :soap :NotInContactWith)

//*****************************************
// 2 start soap:NotInContactWith NotInContactWith
Declaration(NamedIndividual(:NotInContactWith))
ClassAssertion(soap:NotInContactWith :NotInContactWith)
ObjectPropertyAssertion(soap:hasNotInContactWith_StateRelation
                        :NotInContactWith :InContactWith)
// 2 end soap:NotInContactWith
//*****************************************

ObjectPropertyAssertion(soap:hasSOAP_NotUnderWithContact
                        :soap :NotUnderWithContact)

//*****************************************
// 2 start soap:NotUnderWithContact NotUnderWithContact
Declaration(NamedIndividual(:NotUnderWithContact))
ClassAssertion(soap:NotUnderWithContact :NotUnderWithContact)
ObjectPropertyAssertion(soap:hasNotUnderWithContact_StateRelation
                        :NotUnderWithContact :UnderWithContact)
// 2 end soap:NotUnderWithContact
//*****************************************

ObjectPropertyAssertion(soap:hasSOAP_NotOnTopWithContact
                        :soap :NotOnTopWithContact)

//*****************************************
// 2 start soap:NotOnTopWithContact NotOnTopWithContact
Declaration(NamedIndividual(:NotOnTopWithContact))
ClassAssertion(soap:NotOnTopWithContact :NotOnTopWithContact)
ObjectPropertyAssertion(soap:hasNotOnTopWithContact_StateRelation
                        :NotOnTopWithContact :OnTopWithContact)
// 2 end soap:NotOnTopWithContact
//*****************************************

ObjectPropertyAssertion(soap:hasSOAP_NotContainedIn
                        :soap :NotContainedIn)

//*****************************************
// 2 start soap:NotContainedIn NotContainedIn
Declaration(NamedIndividual(:NotContainedIn))
ClassAssertion(soap:NotContainedIn :NotContainedIn)
ObjectPropertyAssertion(soap:hasNotContainedIn_StateRelation
                        :NotContainedIn :ContainedIn)
// 2 end soap:NotContainedIn
//*****************************************

// 1 end soap:SOAP
//*****************************************


//*****************************************
// soap:ActionParameterSet individuals 
DifferentIndividuals(
 :endEffector-AttachEndEffector
 :endEffector-DetachEndEffector
 :endEffector-LookForPart
 :endEffector-PlaceKit
 :endEffector-PlaceKitTray
 :endEffector-PlacePart
 :endEffector-TakeKit
 :endEffector-TakeKitTray
 :endEffector-TakePart
 :endEffectorChangingStation-AttachEndEffector
 :endEffectorChangingStation-DetachEndEffector
 :endEffectorHolder-AttachEndEffector
 :endEffectorHolder-DetachEndEffector
 :kit-CreateKit
 :kit-LookForPart
 :kit-PlaceKit
 :kit-PlacePart
 :kit-TakeKit
 :kit-TakePart
 :kitTray-CreateKit
 :kitTray-PlaceKitTray
 :kitTray-TakeKit
 :kitTray-TakeKitTray
 :lbwekt-TakeKitTray
 :lbwk-PlaceKit
 :part-LookForPart
 :part-PlacePart
 :part-TakePart
 :partSku-LookForPart
 :partSku-PlacePart
 :partSku-TakePart
 :partsTray-PlacePart
 :partsTray-TakePart
 :robot-AttachEndEffector
 :robot-DetachEndEffector
 :robot-LookForPart
 :robot-PlaceKit
 :robot-PlaceKitTray
 :robot-PlacePart
 :robot-TakeKit
 :robot-TakeKitTray
 :robot-TakePart
 :sku-TakeKit
 :sku-TakeKitTray
 :workTable-CreateKit
 :workTable-PlaceKitTray
 :workTable-PlacePart
 :workTable-TakeKit)

//*****************************************
// :BoxyShape individuals 
DifferentIndividuals(
 :shape_changing_station_base
 :shape_kit_box
 :shape_kit_tray
 :shape_part_a
 :shape_part_b
 :shape_part_c
 :shape_parts_tray)

//*****************************************
// :EndEffectorHolder individuals 
DifferentIndividuals(
 :part_gripper_holder
 :tray_gripper_holder)

//*****************************************
// soap:G1_EEffHasKitTray individuals 
DifferentIndividuals(
 :G1_endEffector-has-heldObject-kit
 :G1_endEffector-has-heldObject-kitTray)

//*****************************************
// soap:G2_EEffHasKitTray individuals 
DifferentIndividuals(
 :G2_endEffector-has-heldObject-kit
 :G2_endEffector-has-heldObject-kitTray)

//*****************************************
// :KitDesign individuals 
DifferentIndividuals(
 :kit_design_a2b1c1
 :kit_design_a2b2c1)

//*****************************************
// :KitTray individuals 
DifferentIndividuals(
 :kit_tray_1
 :kit_tray_2
 :kit_tray_3)

//*****************************************
// :LargeContainer individuals 
DifferentIndividuals(
 :empty_kit_tray_box
 :finished_kit_box)

//*****************************************
// :PartRefAndPose individuals 
DifferentIndividuals(
 :part_ref_and_pose_kit_a2b1c1_a_1
 :part_ref_and_pose_kit_a2b1c1_a_2
 :part_ref_and_pose_kit_a2b1c1_b_1
 :part_ref_and_pose_kit_a2b1c1_c_1
 :part_ref_and_pose_kit_a2b2c1_a_1
 :part_ref_and_pose_kit_a2b2c1_a_2
 :part_ref_and_pose_kit_a2b2c1_b_1
 :part_ref_and_pose_kit_a2b2c1_b_2
 :part_ref_and_pose_kit_a2b2c1_c_1)

//*****************************************
// :Part individuals 
DifferentIndividuals(
 :part_a_1
 :part_a_2
 :part_a_3
 :part_a_4
 :part_b_1
 :part_b_2
 :part_b_3
 :part_b_4
 :part_b_5
 :part_b_6
 :part_b_7
 :part_b_8
 :part_c_1
 :part_c_2
 :part_c_3
 :part_c_4
 :part_c_5
 :part_c_6
 :part_c_7
 :part_c_8)

//*****************************************
// :PartsTray individuals 
DifferentIndividuals(
 :part_a_tray
 :part_b_tray
 :part_c_tray)

//*****************************************
// :Point individuals 
DifferentIndividuals(
 :changing_station_base_point
 :changing_station_point
 :empty_kit_tray_box_point
 :empty_kit_tray_supply_point
 :finished_kit_box_point
 :finished_kit_receiver_point
 :kit_tray_1_point
 :kit_tray_2_point
 :kit_tray_3_point
 :part_a_1_point
 :part_a_2_point
 :part_a_3_point
 :part_a_4_point
 :part_a_tray_point
 :part_b_1_point
 :part_b_2_point
 :part_b_3_point
 :part_b_4_point
 :part_b_5_point
 :part_b_6_point
 :part_b_7_point
 :part_b_8_point
 :part_b_tray_point
 :part_c_1_point
 :part_c_2_point
 :part_c_3_point
 :part_c_4_point
 :part_c_5_point
 :part_c_6_point
 :part_c_7_point
 :part_c_8_point
 :part_c_tray_point
 :part_gripper_holder_point
 :part_gripper_point
 :point_kit_a2b1c1_a_1
 :point_kit_a2b1c1_a_2
 :point_kit_a2b1c1_b_1
 :point_kit_a2b1c1_c_1
 :point_kit_a2b2c1_a_1
 :point_kit_a2b2c1_a_2
 :point_kit_a2b2c1_b_1
 :point_kit_a2b2c1_b_2
 :point_kit_a2b2c1_c_1
 :point_max
 :point_min
 :robot_point
 :tray_gripper_holder_point
 :work_table_point)

//*****************************************
// :PoseLocationIn individuals 
DifferentIndividuals(
 :part_a_1_pose
 :part_a_2_pose
 :part_a_3_pose
 :part_a_4_pose
 :part_b_1_pose
 :part_b_2_pose
 :part_b_3_pose
 :part_b_4_pose
 :part_b_5_pose
 :part_b_6_pose
 :part_b_7_pose
 :part_b_8_pose
 :part_c_1_pose
 :part_c_2_pose
 :part_c_3_pose
 :part_c_4_pose
 :part_c_5_pose
 :part_c_6_pose
 :part_c_7_pose
 :part_c_8_pose)

//*****************************************
// :PoseOnlyLocation individuals 
DifferentIndividuals(
 :changing_station_base_pose
 :changing_station_pose
 :empty_kit_tray_box_pose
 :empty_kit_tray_supply_pose
 :finished_kit_box_pose
 :finished_kit_receiver_pose
 :kit_tray_1_pose
 :kit_tray_2_pose
 :kit_tray_3_pose
 :part_a_tray_pose
 :part_b_tray_pose
 :part_c_tray_pose
 :part_gripper_holder_pose
 :part_gripper_pose
 :robot_pose
 :tray_gripper_holder_pose
 :work_table_pose)

//*****************************************
// soap:SG1_EEffHasKitTray individuals 
DifferentIndividuals(
 :SG1_endEffector-has-heldObject-kit
 :SG1_endEffector-has-heldObject-kitTray)

//*****************************************
// soap:SG2_EEffHasKitTray individuals 
DifferentIndividuals(
 :SG2_endEffector-has-heldObject-kit
 :SG2_endEffector-has-heldObject-kitTray)

//*****************************************
// :StockKeepingUnit individuals 
DifferentIndividuals(
 :stock_keeping_unit_kit_box
 :stock_keeping_unit_kit_tray
 :stock_keeping_unit_part_a
 :stock_keeping_unit_part_b
 :stock_keeping_unit_part_c
 :stock_keeping_unit_parts_tray)

//*****************************************
// :VacuumEffectorSingleCup individuals 
DifferentIndividuals(
 :part_gripper
 :tray_gripper)

//*****************************************
// :Vector individuals 
DifferentIndividuals(
 :changing_station_base_x_axis
 :changing_station_base_z_axis
 :changing_station_x_axis
 :changing_station_z_axis
 :empty_kit_tray_box_x_axis
 :empty_kit_tray_box_z_axis
 :empty_kit_tray_supply_x_axis
 :empty_kit_tray_supply_z_axis
 :finished_kit_box_x_axis
 :finished_kit_box_z_axis
 :finished_kit_receiver_x_axis
 :finished_kit_receiver_z_axis
 :kit_tray_1_x_axis
 :kit_tray_1_z_axis
 :kit_tray_2_x_axis
 :kit_tray_2_z_axis
 :kit_tray_3_x_axis
 :kit_tray_3_z_axis
 :part_a_1_x_axis
 :part_a_1_z_axis
 :part_a_2_x_axis
 :part_a_2_z_axis
 :part_a_3_x_axis
 :part_a_3_z_axis
 :part_a_4_x_axis
 :part_a_4_z_axis
 :part_a_tray_x_axis
 :part_a_tray_z_axis
 :part_b_1_x_axis
 :part_b_1_z_axis
 :part_b_2_x_axis
 :part_b_2_z_axis
 :part_b_3_x_axis
 :part_b_3_z_axis
 :part_b_4_x_axis
 :part_b_4_z_axis
 :part_b_5_x_axis
 :part_b_5_z_axis
 :part_b_6_x_axis
 :part_b_6_z_axis
 :part_b_7_x_axis
 :part_b_7_z_axis
 :part_b_8_x_axis
 :part_b_8_z_axis
 :part_b_tray_x_axis
 :part_b_tray_z_axis
 :part_c_1_x_axis
 :part_c_1_z_axis
 :part_c_2_x_axis
 :part_c_2_z_axis
 :part_c_3_x_axis
 :part_c_3_z_axis
 :part_c_4_x_axis
 :part_c_4_z_axis
 :part_c_5_x_axis
 :part_c_5_z_axis
 :part_c_6_x_axis
 :part_c_6_z_axis
 :part_c_7_x_axis
 :part_c_7_z_axis
 :part_c_8_x_axis
 :part_c_8_z_axis
 :part_c_tray_x_axis
 :part_c_tray_z_axis
 :part_gripper_holder_x_axis
 :part_gripper_holder_z_axis
 :part_gripper_x_axis
 :part_gripper_z_axis
 :robot_x_axis
 :robot_z_axis
 :tray_gripper_holder_x_axis
 :tray_gripper_holder_z_axis
 :work_table_x_axis
 :work_table_z_axis
 :x_axis_kit_a2b1c1_a_1
 :x_axis_kit_a2b1c1_a_2
 :x_axis_kit_a2b1c1_b_1
 :x_axis_kit_a2b1c1_c_1
 :x_axis_kit_a2b2c1_a_1
 :x_axis_kit_a2b2c1_a_2
 :x_axis_kit_a2b2c1_b_1
 :x_axis_kit_a2b2c1_b_2
 :x_axis_kit_a2b2c1_c_1
 :z_axis_kit_a2b1c1_a_1
 :z_axis_kit_a2b1c1_a_2
 :z_axis_kit_a2b1c1_b_1
 :z_axis_kit_a2b1c1_c_1
 :z_axis_kit_a2b2c1_a_1
 :z_axis_kit_a2b2c1_a_2
 :z_axis_kit_a2b2c1_b_1
 :z_axis_kit_a2b2c1_b_2
 :z_axis_kit_a2b2c1_c_1)
)
