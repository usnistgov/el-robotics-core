Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)
Prefix(:=<http://www.nist.gov/el/ontologies/soapInstances.owl#>)
Prefix(soap:=<http://www.nist.gov/el/ontologies/soapClasses.owl#>)
Prefix(:=<http://www.nist.gov/el/ontologies/kittingWorkstationClasses.owl#>)
Ontology(<http://www.nist.gov/el/ontologies/soapInstances.owl>
Import(<file:soapClasses.owl>)

//*****************************************
// 1 start soap:SOAP soap
Declaration(NamedIndividual(:soap))
ClassAssertion(soap:SOAP :soap)
ObjectPropertyAssertion(soap:hasSOAP_KittingWorkstation
                        :soap :kitting_workstation_1)

//*****************************************
// 2 start :KittingWorkstation kitting_workstation_1
Declaration(NamedIndividual(:kitting_workstation_1))
ClassAssertion(:KittingWorkstation :kitting_workstation_1)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :kitting_workstation_1 :relative_location_in_1)

//*****************************************
// 3 start :RelativeLocationIn relative_location_in_1
Declaration(NamedIndividual(:relative_location_in_1))
ClassAssertion(:RelativeLocationIn :relative_location_in_1)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :relative_location_in_1 :kitting_workstation_1)
DataPropertyAssertion(:hasRelativeLocation_Description :relative_location_in_1
                      "The KittingWorkstation is in kitting_workstation_1
    "^^xsd:string)
// 3 end :RelativeLocationIn
//*****************************************

DataPropertyAssertion(:hasKittingWorkstation_AngleUnit :kitting_workstation_1
                      "degree"^^xsd:NMTOKEN)
ObjectPropertyAssertion(:hasKittingWorkstation_ChangingStation
                        :kitting_workstation_1 :changing_station_1)

//*****************************************
// 3 start :EndEffectorChangingStation changing_station_1
Declaration(NamedIndividual(:changing_station_1))
ClassAssertion(:EndEffectorChangingStation :changing_station_1)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :changing_station_1 :changing_station_pose)

//*****************************************
// 4 start :PoseOnlyLocation changing_station_pose
Declaration(NamedIndividual(:changing_station_pose))
ClassAssertion(:PoseOnlyLocation :changing_station_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :changing_station_pose :kitting_workstation_1)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :changing_station_pose :changing_station_point)

//*****************************************
// 5 start :Point changing_station_point
Declaration(NamedIndividual(:changing_station_point))
ClassAssertion(:Point :changing_station_point)
DataPropertyAssertion(:hasPoint_X :changing_station_point
                      "7.500000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :changing_station_point
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :changing_station_point
                      "0.000000"^^xsd:decimal)
// 5 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :changing_station_pose :changing_station_x_axis)

//*****************************************
// 5 start :Vector changing_station_x_axis
Declaration(NamedIndividual(:changing_station_x_axis))
ClassAssertion(:Vector :changing_station_x_axis)
DataPropertyAssertion(:hasVector_I :changing_station_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :changing_station_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :changing_station_x_axis
                      "0.000000"^^xsd:decimal)
// 5 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :changing_station_pose :changing_station_z_axis)

//*****************************************
// 5 start :Vector changing_station_z_axis
Declaration(NamedIndividual(:changing_station_z_axis))
ClassAssertion(:Vector :changing_station_z_axis)
DataPropertyAssertion(:hasVector_I :changing_station_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :changing_station_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :changing_station_z_axis
                      "1.000000"^^xsd:decimal)
// 5 end :Vector
//*****************************************

// 4 end :PoseOnlyLocation
//*****************************************

ObjectPropertyAssertion(:hasEndEffectorChangingStation_Base
                        :changing_station_1 :changing_station_base)

//*****************************************
// 4 start :MechanicalComponent changing_station_base
Declaration(NamedIndividual(:changing_station_base))
ClassAssertion(:MechanicalComponent :changing_station_base)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :changing_station_base :changing_station_base_pose)

//*****************************************
// 5 start :PoseOnlyLocation changing_station_base_pose
Declaration(NamedIndividual(:changing_station_base_pose))
ClassAssertion(:PoseOnlyLocation :changing_station_base_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :changing_station_base_pose :changing_station_1)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :changing_station_base_pose :changing_station_base_point)

//*****************************************
// 6 start :Point changing_station_base_point
Declaration(NamedIndividual(:changing_station_base_point))
ClassAssertion(:Point :changing_station_base_point)
DataPropertyAssertion(:hasPoint_X :changing_station_base_point
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :changing_station_base_point
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :changing_station_base_point
                      "0.000000"^^xsd:decimal)
// 6 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :changing_station_base_pose :changing_station_base_x_axis)

//*****************************************
// 6 start :Vector changing_station_base_x_axis
Declaration(NamedIndividual(:changing_station_base_x_axis))
ClassAssertion(:Vector :changing_station_base_x_axis)
DataPropertyAssertion(:hasVector_I :changing_station_base_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :changing_station_base_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :changing_station_base_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :changing_station_base_pose :changing_station_base_z_axis)

//*****************************************
// 6 start :Vector changing_station_base_z_axis
Declaration(NamedIndividual(:changing_station_base_z_axis))
ClassAssertion(:Vector :changing_station_base_z_axis)
DataPropertyAssertion(:hasVector_I :changing_station_base_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :changing_station_base_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :changing_station_base_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

// 5 end :PoseOnlyLocation
//*****************************************

ObjectPropertyAssertion(:hasNoSkuObject_InternalShape
                        :changing_station_base :shape_changing_station_base)

//*****************************************
// 5 start :BoxyShape shape_changing_station_base
Declaration(NamedIndividual(:shape_changing_station_base))
ClassAssertion(:BoxyShape :shape_changing_station_base)
DataPropertyAssertion(:hasShapeDesign_Description :shape_changing_station_base
                      "Shape of base of changing station"^^xsd:string)
DataPropertyAssertion(:hasBoxyShape_Length :shape_changing_station_base
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasBoxyShape_Width :shape_changing_station_base
                      "0.100000"^^xsd:decimal)
DataPropertyAssertion(:hasBoxyShape_Height :shape_changing_station_base
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasBoxyShape_HasTop :shape_changing_station_base
                      "true"^^xsd:boolean)
// 5 end :BoxyShape
//*****************************************

// 4 end :MechanicalComponent
//*****************************************

ObjectPropertyAssertion(:hasEndEffectorChangingStation_EndEffectorHolder
                        :changing_station_1 :part_gripper_holder)

//*****************************************
// 4 start :EndEffectorHolder part_gripper_holder
Declaration(NamedIndividual(:part_gripper_holder))
ClassAssertion(:EndEffectorHolder :part_gripper_holder)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :part_gripper_holder :part_gripper_holder_pose)

//*****************************************
// 5 start :PoseOnlyLocation part_gripper_holder_pose
Declaration(NamedIndividual(:part_gripper_holder_pose))
ClassAssertion(:PoseOnlyLocation :part_gripper_holder_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :part_gripper_holder_pose :changing_station_1)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :part_gripper_holder_pose :part_gripper_holder_point)

//*****************************************
// 6 start :Point part_gripper_holder_point
Declaration(NamedIndividual(:part_gripper_holder_point))
ClassAssertion(:Point :part_gripper_holder_point)
DataPropertyAssertion(:hasPoint_X :part_gripper_holder_point
                      "0.250000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :part_gripper_holder_point
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :part_gripper_holder_point
                      "0.500000"^^xsd:decimal)
// 6 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :part_gripper_holder_pose :part_gripper_holder_x_axis)

//*****************************************
// 6 start :Vector part_gripper_holder_x_axis
Declaration(NamedIndividual(:part_gripper_holder_x_axis))
ClassAssertion(:Vector :part_gripper_holder_x_axis)
DataPropertyAssertion(:hasVector_I :part_gripper_holder_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_gripper_holder_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_gripper_holder_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :part_gripper_holder_pose :part_gripper_holder_z_axis)

//*****************************************
// 6 start :Vector part_gripper_holder_z_axis
Declaration(NamedIndividual(:part_gripper_holder_z_axis))
ClassAssertion(:Vector :part_gripper_holder_z_axis)
DataPropertyAssertion(:hasVector_I :part_gripper_holder_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_gripper_holder_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_gripper_holder_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

// 5 end :PoseOnlyLocation
//*****************************************

ObjectPropertyAssertion(:hasEndEffectorHolder_EndEffector
                        :part_gripper_holder :part_gripper)

//*****************************************
// 5 start :VacuumEffectorSingleCup part_gripper
Declaration(NamedIndividual(:part_gripper))
ClassAssertion(:VacuumEffectorSingleCup :part_gripper)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :part_gripper :part_gripper_pose)

//*****************************************
// 6 start :PoseOnlyLocation part_gripper_pose
Declaration(NamedIndividual(:part_gripper_pose))
ClassAssertion(:PoseOnlyLocation :part_gripper_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :part_gripper_pose :part_gripper_holder)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :part_gripper_pose :part_gripper_point)

//*****************************************
// 7 start :Point part_gripper_point
Declaration(NamedIndividual(:part_gripper_point))
ClassAssertion(:Point :part_gripper_point)
DataPropertyAssertion(:hasPoint_X :part_gripper_point
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :part_gripper_point
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :part_gripper_point
                      "0.000000"^^xsd:decimal)
// 7 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :part_gripper_pose :part_gripper_x_axis)

//*****************************************
// 7 start :Vector part_gripper_x_axis
Declaration(NamedIndividual(:part_gripper_x_axis))
ClassAssertion(:Vector :part_gripper_x_axis)
DataPropertyAssertion(:hasVector_I :part_gripper_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_gripper_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_gripper_x_axis
                      "0.000000"^^xsd:decimal)
// 7 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :part_gripper_pose :part_gripper_z_axis)

//*****************************************
// 7 start :Vector part_gripper_z_axis
Declaration(NamedIndividual(:part_gripper_z_axis))
ClassAssertion(:Vector :part_gripper_z_axis)
DataPropertyAssertion(:hasVector_I :part_gripper_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_gripper_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_gripper_z_axis
                      "1.000000"^^xsd:decimal)
// 7 end :Vector
//*****************************************

// 6 end :PoseOnlyLocation
//*****************************************

DataPropertyAssertion(:hasEndEffector_Description :part_gripper
                      "small single cup vacuum effector"^^xsd:string)
DataPropertyAssertion(:hasEndEffector_Weight :part_gripper
                      "0.010000"^^xsd:decimal)
DataPropertyAssertion(:hasEndEffector_MaximumLoadWeight :part_gripper
                      "0.400000"^^xsd:decimal)
DataPropertyAssertion(:hasVacuumEffector_CupDiameter :part_gripper
                      "0.020000"^^xsd:decimal)
DataPropertyAssertion(:hasVacuumEffector_Length :part_gripper
                      "0.025000"^^xsd:decimal)
// 5 end :VacuumEffectorSingleCup
//*****************************************

// 4 end :EndEffectorHolder
//*****************************************

ObjectPropertyAssertion(:hasEndEffectorChangingStation_EndEffectorHolder
                        :changing_station_1 :tray_gripper_holder)

//*****************************************
// 4 start :EndEffectorHolder tray_gripper_holder
Declaration(NamedIndividual(:tray_gripper_holder))
ClassAssertion(:EndEffectorHolder :tray_gripper_holder)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :tray_gripper_holder :tray_gripper_holder_pose)

//*****************************************
// 5 start :PoseOnlyLocation tray_gripper_holder_pose
Declaration(NamedIndividual(:tray_gripper_holder_pose))
ClassAssertion(:PoseOnlyLocation :tray_gripper_holder_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :tray_gripper_holder_pose :changing_station_1)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :tray_gripper_holder_pose :tray_gripper_holder_point)

//*****************************************
// 6 start :Point tray_gripper_holder_point
Declaration(NamedIndividual(:tray_gripper_holder_point))
ClassAssertion(:Point :tray_gripper_holder_point)
DataPropertyAssertion(:hasPoint_X :tray_gripper_holder_point
                      "-0.250000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :tray_gripper_holder_point
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :tray_gripper_holder_point
                      "0.500000"^^xsd:decimal)
// 6 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :tray_gripper_holder_pose :tray_gripper_holder_x_axis)

//*****************************************
// 6 start :Vector tray_gripper_holder_x_axis
Declaration(NamedIndividual(:tray_gripper_holder_x_axis))
ClassAssertion(:Vector :tray_gripper_holder_x_axis)
DataPropertyAssertion(:hasVector_I :tray_gripper_holder_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :tray_gripper_holder_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :tray_gripper_holder_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :tray_gripper_holder_pose :tray_gripper_holder_z_axis)

//*****************************************
// 6 start :Vector tray_gripper_holder_z_axis
Declaration(NamedIndividual(:tray_gripper_holder_z_axis))
ClassAssertion(:Vector :tray_gripper_holder_z_axis)
DataPropertyAssertion(:hasVector_I :tray_gripper_holder_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :tray_gripper_holder_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :tray_gripper_holder_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

// 5 end :PoseOnlyLocation
//*****************************************

// 4 end :EndEffectorHolder
//*****************************************

// 3 end :EndEffectorChangingStation
//*****************************************

ObjectPropertyAssertion(:hasKittingWorkstation_KitDesign
                        :kitting_workstation_1 :kit_design_a2b1c1)

//*****************************************
// 3 start :KitDesign kit_design_a2b1c1
Declaration(NamedIndividual(:kit_design_a2b1c1))
ClassAssertion(:KitDesign :kit_design_a2b1c1)
ObjectPropertyAssertion(:hasKitDesign_KitTraySku
                        :kit_design_a2b1c1 :stock_keeping_unit_kit_tray)
ObjectPropertyAssertion(:hasKitDesign_PartRefAndPose
                        :kit_design_a2b1c1 :part_ref_and_pose_kit_a2b1c1_a_1)

//*****************************************
// 4 start :PartRefAndPose part_ref_and_pose_kit_a2b1c1_a_1
Declaration(NamedIndividual(:part_ref_and_pose_kit_a2b1c1_a_1))
ClassAssertion(:PartRefAndPose :part_ref_and_pose_kit_a2b1c1_a_1)
ObjectPropertyAssertion(:hasPartRefAndPose_Sku
                        :part_ref_and_pose_kit_a2b1c1_a_1 :stock_keeping_unit_part_a)
ObjectPropertyAssertion(:hasPartRefAndPose_Point
                        :part_ref_and_pose_kit_a2b1c1_a_1 :point_kit_a2b1c1_a_1)

//*****************************************
// 5 start :Point point_kit_a2b1c1_a_1
Declaration(NamedIndividual(:point_kit_a2b1c1_a_1))
ClassAssertion(:Point :point_kit_a2b1c1_a_1)
DataPropertyAssertion(:hasPoint_X :point_kit_a2b1c1_a_1
                      "0.200000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :point_kit_a2b1c1_a_1
                      "0.300000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :point_kit_a2b1c1_a_1
                      "0.000000"^^xsd:decimal)
// 5 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPartRefAndPose_XAxis
                        :part_ref_and_pose_kit_a2b1c1_a_1 :x_axis_kit_a2b1c1_a_1)

//*****************************************
// 5 start :Vector x_axis_kit_a2b1c1_a_1
Declaration(NamedIndividual(:x_axis_kit_a2b1c1_a_1))
ClassAssertion(:Vector :x_axis_kit_a2b1c1_a_1)
DataPropertyAssertion(:hasVector_I :x_axis_kit_a2b1c1_a_1
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :x_axis_kit_a2b1c1_a_1
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :x_axis_kit_a2b1c1_a_1
                      "0.000000"^^xsd:decimal)
// 5 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPartRefAndPose_ZAxis
                        :part_ref_and_pose_kit_a2b1c1_a_1 :z_axis_kit_a2b1c1_a_1)

//*****************************************
// 5 start :Vector z_axis_kit_a2b1c1_a_1
Declaration(NamedIndividual(:z_axis_kit_a2b1c1_a_1))
ClassAssertion(:Vector :z_axis_kit_a2b1c1_a_1)
DataPropertyAssertion(:hasVector_I :z_axis_kit_a2b1c1_a_1
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :z_axis_kit_a2b1c1_a_1
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :z_axis_kit_a2b1c1_a_1
                      "1.000000"^^xsd:decimal)
// 5 end :Vector
//*****************************************

// 4 end :PartRefAndPose
//*****************************************

ObjectPropertyAssertion(:hasKitDesign_PartRefAndPose
                        :kit_design_a2b1c1 :part_ref_and_pose_kit_a2b1c1_a_2)

//*****************************************
// 4 start :PartRefAndPose part_ref_and_pose_kit_a2b1c1_a_2
Declaration(NamedIndividual(:part_ref_and_pose_kit_a2b1c1_a_2))
ClassAssertion(:PartRefAndPose :part_ref_and_pose_kit_a2b1c1_a_2)
ObjectPropertyAssertion(:hasPartRefAndPose_Sku
                        :part_ref_and_pose_kit_a2b1c1_a_2 :stock_keeping_unit_part_a)
ObjectPropertyAssertion(:hasPartRefAndPose_Point
                        :part_ref_and_pose_kit_a2b1c1_a_2 :point_kit_a2b1c1_a_2)

//*****************************************
// 5 start :Point point_kit_a2b1c1_a_2
Declaration(NamedIndividual(:point_kit_a2b1c1_a_2))
ClassAssertion(:Point :point_kit_a2b1c1_a_2)
DataPropertyAssertion(:hasPoint_X :point_kit_a2b1c1_a_2
                      "0.400000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :point_kit_a2b1c1_a_2
                      "0.300000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :point_kit_a2b1c1_a_2
                      "0.000000"^^xsd:decimal)
// 5 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPartRefAndPose_XAxis
                        :part_ref_and_pose_kit_a2b1c1_a_2 :x_axis_kit_a2b1c1_a_2)

//*****************************************
// 5 start :Vector x_axis_kit_a2b1c1_a_2
Declaration(NamedIndividual(:x_axis_kit_a2b1c1_a_2))
ClassAssertion(:Vector :x_axis_kit_a2b1c1_a_2)
DataPropertyAssertion(:hasVector_I :x_axis_kit_a2b1c1_a_2
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :x_axis_kit_a2b1c1_a_2
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :x_axis_kit_a2b1c1_a_2
                      "0.000000"^^xsd:decimal)
// 5 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPartRefAndPose_ZAxis
                        :part_ref_and_pose_kit_a2b1c1_a_2 :z_axis_kit_a2b1c1_a_2)

//*****************************************
// 5 start :Vector z_axis_kit_a2b1c1_a_2
Declaration(NamedIndividual(:z_axis_kit_a2b1c1_a_2))
ClassAssertion(:Vector :z_axis_kit_a2b1c1_a_2)
DataPropertyAssertion(:hasVector_I :z_axis_kit_a2b1c1_a_2
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :z_axis_kit_a2b1c1_a_2
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :z_axis_kit_a2b1c1_a_2
                      "1.000000"^^xsd:decimal)
// 5 end :Vector
//*****************************************

// 4 end :PartRefAndPose
//*****************************************

ObjectPropertyAssertion(:hasKitDesign_PartRefAndPose
                        :kit_design_a2b1c1 :part_ref_and_pose_kit_a2b1c1_b_1)

//*****************************************
// 4 start :PartRefAndPose part_ref_and_pose_kit_a2b1c1_b_1
Declaration(NamedIndividual(:part_ref_and_pose_kit_a2b1c1_b_1))
ClassAssertion(:PartRefAndPose :part_ref_and_pose_kit_a2b1c1_b_1)
ObjectPropertyAssertion(:hasPartRefAndPose_Sku
                        :part_ref_and_pose_kit_a2b1c1_b_1 :stock_keeping_unit_part_b)
ObjectPropertyAssertion(:hasPartRefAndPose_Point
                        :part_ref_and_pose_kit_a2b1c1_b_1 :point_kit_a2b1c1_b_1)

//*****************************************
// 5 start :Point point_kit_a2b1c1_b_1
Declaration(NamedIndividual(:point_kit_a2b1c1_b_1))
ClassAssertion(:Point :point_kit_a2b1c1_b_1)
DataPropertyAssertion(:hasPoint_X :point_kit_a2b1c1_b_1
                      "0.200000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :point_kit_a2b1c1_b_1
                      "0.500000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :point_kit_a2b1c1_b_1
                      "0.000000"^^xsd:decimal)
// 5 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPartRefAndPose_XAxis
                        :part_ref_and_pose_kit_a2b1c1_b_1 :x_axis_kit_a2b1c1_b_1)

//*****************************************
// 5 start :Vector x_axis_kit_a2b1c1_b_1
Declaration(NamedIndividual(:x_axis_kit_a2b1c1_b_1))
ClassAssertion(:Vector :x_axis_kit_a2b1c1_b_1)
DataPropertyAssertion(:hasVector_I :x_axis_kit_a2b1c1_b_1
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :x_axis_kit_a2b1c1_b_1
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :x_axis_kit_a2b1c1_b_1
                      "0.000000"^^xsd:decimal)
// 5 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPartRefAndPose_ZAxis
                        :part_ref_and_pose_kit_a2b1c1_b_1 :z_axis_kit_a2b1c1_b_1)

//*****************************************
// 5 start :Vector z_axis_kit_a2b1c1_b_1
Declaration(NamedIndividual(:z_axis_kit_a2b1c1_b_1))
ClassAssertion(:Vector :z_axis_kit_a2b1c1_b_1)
DataPropertyAssertion(:hasVector_I :z_axis_kit_a2b1c1_b_1
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :z_axis_kit_a2b1c1_b_1
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :z_axis_kit_a2b1c1_b_1
                      "1.000000"^^xsd:decimal)
// 5 end :Vector
//*****************************************

// 4 end :PartRefAndPose
//*****************************************

ObjectPropertyAssertion(:hasKitDesign_PartRefAndPose
                        :kit_design_a2b1c1 :part_ref_and_pose_kit_a2b1c1_c_1)

//*****************************************
// 4 start :PartRefAndPose part_ref_and_pose_kit_a2b1c1_c_1
Declaration(NamedIndividual(:part_ref_and_pose_kit_a2b1c1_c_1))
ClassAssertion(:PartRefAndPose :part_ref_and_pose_kit_a2b1c1_c_1)
ObjectPropertyAssertion(:hasPartRefAndPose_Sku
                        :part_ref_and_pose_kit_a2b1c1_c_1 :stock_keeping_unit_part_c)
ObjectPropertyAssertion(:hasPartRefAndPose_Point
                        :part_ref_and_pose_kit_a2b1c1_c_1 :point_kit_a2b1c1_c_1)

//*****************************************
// 5 start :Point point_kit_a2b1c1_c_1
Declaration(NamedIndividual(:point_kit_a2b1c1_c_1))
ClassAssertion(:Point :point_kit_a2b1c1_c_1)
DataPropertyAssertion(:hasPoint_X :point_kit_a2b1c1_c_1
                      "0.400000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :point_kit_a2b1c1_c_1
                      "0.500000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :point_kit_a2b1c1_c_1
                      "0.000000"^^xsd:decimal)
// 5 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPartRefAndPose_XAxis
                        :part_ref_and_pose_kit_a2b1c1_c_1 :x_axis_kit_a2b1c1_c_1)

//*****************************************
// 5 start :Vector x_axis_kit_a2b1c1_c_1
Declaration(NamedIndividual(:x_axis_kit_a2b1c1_c_1))
ClassAssertion(:Vector :x_axis_kit_a2b1c1_c_1)
DataPropertyAssertion(:hasVector_I :x_axis_kit_a2b1c1_c_1
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :x_axis_kit_a2b1c1_c_1
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :x_axis_kit_a2b1c1_c_1
                      "0.000000"^^xsd:decimal)
// 5 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPartRefAndPose_ZAxis
                        :part_ref_and_pose_kit_a2b1c1_c_1 :z_axis_kit_a2b1c1_c_1)

//*****************************************
// 5 start :Vector z_axis_kit_a2b1c1_c_1
Declaration(NamedIndividual(:z_axis_kit_a2b1c1_c_1))
ClassAssertion(:Vector :z_axis_kit_a2b1c1_c_1)
DataPropertyAssertion(:hasVector_I :z_axis_kit_a2b1c1_c_1
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :z_axis_kit_a2b1c1_c_1
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :z_axis_kit_a2b1c1_c_1
                      "1.000000"^^xsd:decimal)
// 5 end :Vector
//*****************************************

// 4 end :PartRefAndPose
//*****************************************

// 3 end :KitDesign
//*****************************************

ObjectPropertyAssertion(:hasKittingWorkstation_KitDesign
                        :kitting_workstation_1 :kit_design_a2b2c1)

//*****************************************
// 3 start :KitDesign kit_design_a2b2c1
Declaration(NamedIndividual(:kit_design_a2b2c1))
ClassAssertion(:KitDesign :kit_design_a2b2c1)
ObjectPropertyAssertion(:hasKitDesign_KitTraySku
                        :kit_design_a2b2c1 :stock_keeping_unit_kit_tray)
ObjectPropertyAssertion(:hasKitDesign_PartRefAndPose
                        :kit_design_a2b2c1 :part_ref_and_pose_kit_a2b2c1_a_1)

//*****************************************
// 4 start :PartRefAndPose part_ref_and_pose_kit_a2b2c1_a_1
Declaration(NamedIndividual(:part_ref_and_pose_kit_a2b2c1_a_1))
ClassAssertion(:PartRefAndPose :part_ref_and_pose_kit_a2b2c1_a_1)
ObjectPropertyAssertion(:hasPartRefAndPose_Sku
                        :part_ref_and_pose_kit_a2b2c1_a_1 :stock_keeping_unit_part_a)
ObjectPropertyAssertion(:hasPartRefAndPose_Point
                        :part_ref_and_pose_kit_a2b2c1_a_1 :point_kit_a2b2c1_a_1)

//*****************************************
// 5 start :Point point_kit_a2b2c1_a_1
Declaration(NamedIndividual(:point_kit_a2b2c1_a_1))
ClassAssertion(:Point :point_kit_a2b2c1_a_1)
DataPropertyAssertion(:hasPoint_X :point_kit_a2b2c1_a_1
                      "-0.159000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :point_kit_a2b2c1_a_1
                      "0.145000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :point_kit_a2b2c1_a_1
                      "0.036000"^^xsd:decimal)
// 5 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPartRefAndPose_XAxis
                        :part_ref_and_pose_kit_a2b2c1_a_1 :x_axis_kit_a2b2c1_a_1)

//*****************************************
// 5 start :Vector x_axis_kit_a2b2c1_a_1
Declaration(NamedIndividual(:x_axis_kit_a2b2c1_a_1))
ClassAssertion(:Vector :x_axis_kit_a2b2c1_a_1)
DataPropertyAssertion(:hasVector_I :x_axis_kit_a2b2c1_a_1
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :x_axis_kit_a2b2c1_a_1
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :x_axis_kit_a2b2c1_a_1
                      "0.000000"^^xsd:decimal)
// 5 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPartRefAndPose_ZAxis
                        :part_ref_and_pose_kit_a2b2c1_a_1 :z_axis_kit_a2b2c1_a_1)

//*****************************************
// 5 start :Vector z_axis_kit_a2b2c1_a_1
Declaration(NamedIndividual(:z_axis_kit_a2b2c1_a_1))
ClassAssertion(:Vector :z_axis_kit_a2b2c1_a_1)
DataPropertyAssertion(:hasVector_I :z_axis_kit_a2b2c1_a_1
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :z_axis_kit_a2b2c1_a_1
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :z_axis_kit_a2b2c1_a_1
                      "1.000000"^^xsd:decimal)
// 5 end :Vector
//*****************************************

// 4 end :PartRefAndPose
//*****************************************

ObjectPropertyAssertion(:hasKitDesign_PartRefAndPose
                        :kit_design_a2b2c1 :part_ref_and_pose_kit_a2b2c1_a_2)

//*****************************************
// 4 start :PartRefAndPose part_ref_and_pose_kit_a2b2c1_a_2
Declaration(NamedIndividual(:part_ref_and_pose_kit_a2b2c1_a_2))
ClassAssertion(:PartRefAndPose :part_ref_and_pose_kit_a2b2c1_a_2)
ObjectPropertyAssertion(:hasPartRefAndPose_Sku
                        :part_ref_and_pose_kit_a2b2c1_a_2 :stock_keeping_unit_part_a)
ObjectPropertyAssertion(:hasPartRefAndPose_Point
                        :part_ref_and_pose_kit_a2b2c1_a_2 :point_kit_a2b2c1_a_2)

//*****************************************
// 5 start :Point point_kit_a2b2c1_a_2
Declaration(NamedIndividual(:point_kit_a2b2c1_a_2))
ClassAssertion(:Point :point_kit_a2b2c1_a_2)
DataPropertyAssertion(:hasPoint_X :point_kit_a2b2c1_a_2
                      "-0.159000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :point_kit_a2b2c1_a_2
                      "-0.149000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :point_kit_a2b2c1_a_2
                      "0.036000"^^xsd:decimal)
// 5 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPartRefAndPose_XAxis
                        :part_ref_and_pose_kit_a2b2c1_a_2 :x_axis_kit_a2b2c1_a_2)

//*****************************************
// 5 start :Vector x_axis_kit_a2b2c1_a_2
Declaration(NamedIndividual(:x_axis_kit_a2b2c1_a_2))
ClassAssertion(:Vector :x_axis_kit_a2b2c1_a_2)
DataPropertyAssertion(:hasVector_I :x_axis_kit_a2b2c1_a_2
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :x_axis_kit_a2b2c1_a_2
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :x_axis_kit_a2b2c1_a_2
                      "0.000000"^^xsd:decimal)
// 5 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPartRefAndPose_ZAxis
                        :part_ref_and_pose_kit_a2b2c1_a_2 :z_axis_kit_a2b2c1_a_2)

//*****************************************
// 5 start :Vector z_axis_kit_a2b2c1_a_2
Declaration(NamedIndividual(:z_axis_kit_a2b2c1_a_2))
ClassAssertion(:Vector :z_axis_kit_a2b2c1_a_2)
DataPropertyAssertion(:hasVector_I :z_axis_kit_a2b2c1_a_2
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :z_axis_kit_a2b2c1_a_2
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :z_axis_kit_a2b2c1_a_2
                      "1.000000"^^xsd:decimal)
// 5 end :Vector
//*****************************************

// 4 end :PartRefAndPose
//*****************************************

ObjectPropertyAssertion(:hasKitDesign_PartRefAndPose
                        :kit_design_a2b2c1 :part_ref_and_pose_kit_a2b2c1_b_1)

//*****************************************
// 4 start :PartRefAndPose part_ref_and_pose_kit_a2b2c1_b_1
Declaration(NamedIndividual(:part_ref_and_pose_kit_a2b2c1_b_1))
ClassAssertion(:PartRefAndPose :part_ref_and_pose_kit_a2b2c1_b_1)
ObjectPropertyAssertion(:hasPartRefAndPose_Sku
                        :part_ref_and_pose_kit_a2b2c1_b_1 :stock_keeping_unit_part_b)
ObjectPropertyAssertion(:hasPartRefAndPose_Point
                        :part_ref_and_pose_kit_a2b2c1_b_1 :point_kit_a2b2c1_b_1)

//*****************************************
// 5 start :Point point_kit_a2b2c1_b_1
Declaration(NamedIndividual(:point_kit_a2b2c1_b_1))
ClassAssertion(:Point :point_kit_a2b2c1_b_1)
DataPropertyAssertion(:hasPoint_X :point_kit_a2b2c1_b_1
                      "0.219000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :point_kit_a2b2c1_b_1
                      "-0.166000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :point_kit_a2b2c1_b_1
                      "0.080000"^^xsd:decimal)
// 5 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPartRefAndPose_XAxis
                        :part_ref_and_pose_kit_a2b2c1_b_1 :x_axis_kit_a2b2c1_b_1)

//*****************************************
// 5 start :Vector x_axis_kit_a2b2c1_b_1
Declaration(NamedIndividual(:x_axis_kit_a2b2c1_b_1))
ClassAssertion(:Vector :x_axis_kit_a2b2c1_b_1)
DataPropertyAssertion(:hasVector_I :x_axis_kit_a2b2c1_b_1
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :x_axis_kit_a2b2c1_b_1
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :x_axis_kit_a2b2c1_b_1
                      "0.000000"^^xsd:decimal)
// 5 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPartRefAndPose_ZAxis
                        :part_ref_and_pose_kit_a2b2c1_b_1 :z_axis_kit_a2b2c1_b_1)

//*****************************************
// 5 start :Vector z_axis_kit_a2b2c1_b_1
Declaration(NamedIndividual(:z_axis_kit_a2b2c1_b_1))
ClassAssertion(:Vector :z_axis_kit_a2b2c1_b_1)
DataPropertyAssertion(:hasVector_I :z_axis_kit_a2b2c1_b_1
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :z_axis_kit_a2b2c1_b_1
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :z_axis_kit_a2b2c1_b_1
                      "1.000000"^^xsd:decimal)
// 5 end :Vector
//*****************************************

// 4 end :PartRefAndPose
//*****************************************

ObjectPropertyAssertion(:hasKitDesign_PartRefAndPose
                        :kit_design_a2b2c1 :part_ref_and_pose_kit_a2b2c1_b_2)

//*****************************************
// 4 start :PartRefAndPose part_ref_and_pose_kit_a2b2c1_b_2
Declaration(NamedIndividual(:part_ref_and_pose_kit_a2b2c1_b_2))
ClassAssertion(:PartRefAndPose :part_ref_and_pose_kit_a2b2c1_b_2)
ObjectPropertyAssertion(:hasPartRefAndPose_Sku
                        :part_ref_and_pose_kit_a2b2c1_b_2 :stock_keeping_unit_part_b)
ObjectPropertyAssertion(:hasPartRefAndPose_Point
                        :part_ref_and_pose_kit_a2b2c1_b_2 :point_kit_a2b2c1_b_2)

//*****************************************
// 5 start :Point point_kit_a2b2c1_b_2
Declaration(NamedIndividual(:point_kit_a2b2c1_b_2))
ClassAssertion(:Point :point_kit_a2b2c1_b_2)
DataPropertyAssertion(:hasPoint_X :point_kit_a2b2c1_b_2
                      "0.171000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :point_kit_a2b2c1_b_2
                      "0.215000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :point_kit_a2b2c1_b_2
                      "0.080000"^^xsd:decimal)
// 5 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPartRefAndPose_XAxis
                        :part_ref_and_pose_kit_a2b2c1_b_2 :x_axis_kit_a2b2c1_b_2)

//*****************************************
// 5 start :Vector x_axis_kit_a2b2c1_b_2
Declaration(NamedIndividual(:x_axis_kit_a2b2c1_b_2))
ClassAssertion(:Vector :x_axis_kit_a2b2c1_b_2)
DataPropertyAssertion(:hasVector_I :x_axis_kit_a2b2c1_b_2
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :x_axis_kit_a2b2c1_b_2
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :x_axis_kit_a2b2c1_b_2
                      "0.000000"^^xsd:decimal)
// 5 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPartRefAndPose_ZAxis
                        :part_ref_and_pose_kit_a2b2c1_b_2 :z_axis_kit_a2b2c1_b_2)

//*****************************************
// 5 start :Vector z_axis_kit_a2b2c1_b_2
Declaration(NamedIndividual(:z_axis_kit_a2b2c1_b_2))
ClassAssertion(:Vector :z_axis_kit_a2b2c1_b_2)
DataPropertyAssertion(:hasVector_I :z_axis_kit_a2b2c1_b_2
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :z_axis_kit_a2b2c1_b_2
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :z_axis_kit_a2b2c1_b_2
                      "1.000000"^^xsd:decimal)
// 5 end :Vector
//*****************************************

// 4 end :PartRefAndPose
//*****************************************

ObjectPropertyAssertion(:hasKitDesign_PartRefAndPose
                        :kit_design_a2b2c1 :part_ref_and_pose_kit_a2b2c1_c_1)

//*****************************************
// 4 start :PartRefAndPose part_ref_and_pose_kit_a2b2c1_c_1
Declaration(NamedIndividual(:part_ref_and_pose_kit_a2b2c1_c_1))
ClassAssertion(:PartRefAndPose :part_ref_and_pose_kit_a2b2c1_c_1)
ObjectPropertyAssertion(:hasPartRefAndPose_Sku
                        :part_ref_and_pose_kit_a2b2c1_c_1 :stock_keeping_unit_part_c)
ObjectPropertyAssertion(:hasPartRefAndPose_Point
                        :part_ref_and_pose_kit_a2b2c1_c_1 :point_kit_a2b2c1_c_1)

//*****************************************
// 5 start :Point point_kit_a2b2c1_c_1
Declaration(NamedIndividual(:point_kit_a2b2c1_c_1))
ClassAssertion(:Point :point_kit_a2b2c1_c_1)
DataPropertyAssertion(:hasPoint_X :point_kit_a2b2c1_c_1
                      "0.060000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :point_kit_a2b2c1_c_1
                      "-0.090000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :point_kit_a2b2c1_c_1
                      "0.045000"^^xsd:decimal)
// 5 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPartRefAndPose_XAxis
                        :part_ref_and_pose_kit_a2b2c1_c_1 :x_axis_kit_a2b2c1_c_1)

//*****************************************
// 5 start :Vector x_axis_kit_a2b2c1_c_1
Declaration(NamedIndividual(:x_axis_kit_a2b2c1_c_1))
ClassAssertion(:Vector :x_axis_kit_a2b2c1_c_1)
DataPropertyAssertion(:hasVector_I :x_axis_kit_a2b2c1_c_1
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :x_axis_kit_a2b2c1_c_1
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :x_axis_kit_a2b2c1_c_1
                      "0.000000"^^xsd:decimal)
// 5 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPartRefAndPose_ZAxis
                        :part_ref_and_pose_kit_a2b2c1_c_1 :z_axis_kit_a2b2c1_c_1)

//*****************************************
// 5 start :Vector z_axis_kit_a2b2c1_c_1
Declaration(NamedIndividual(:z_axis_kit_a2b2c1_c_1))
ClassAssertion(:Vector :z_axis_kit_a2b2c1_c_1)
DataPropertyAssertion(:hasVector_I :z_axis_kit_a2b2c1_c_1
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :z_axis_kit_a2b2c1_c_1
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :z_axis_kit_a2b2c1_c_1
                      "1.000000"^^xsd:decimal)
// 5 end :Vector
//*****************************************

// 4 end :PartRefAndPose
//*****************************************

// 3 end :KitDesign
//*****************************************

DataPropertyAssertion(:hasKittingWorkstation_LengthUnit :kitting_workstation_1
                      "meter"^^xsd:NMTOKEN)
ObjectPropertyAssertion(:hasKittingWorkstation_Object
                        :kitting_workstation_1 :empty_kit_tray_supply)

//*****************************************
// 3 start :LargeBoxWithEmptyKitTrays empty_kit_tray_supply
Declaration(NamedIndividual(:empty_kit_tray_supply))
ClassAssertion(:LargeBoxWithEmptyKitTrays :empty_kit_tray_supply)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :empty_kit_tray_supply :empty_kit_tray_supply_pose)

//*****************************************
// 4 start :PoseOnlyLocation empty_kit_tray_supply_pose
Declaration(NamedIndividual(:empty_kit_tray_supply_pose))
ClassAssertion(:PoseOnlyLocation :empty_kit_tray_supply_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :empty_kit_tray_supply_pose :kitting_workstation_1)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :empty_kit_tray_supply_pose :empty_kit_tray_supply_point)

//*****************************************
// 5 start :Point empty_kit_tray_supply_point
Declaration(NamedIndividual(:empty_kit_tray_supply_point))
ClassAssertion(:Point :empty_kit_tray_supply_point)
DataPropertyAssertion(:hasPoint_X :empty_kit_tray_supply_point
                      "0.500000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :empty_kit_tray_supply_point
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :empty_kit_tray_supply_point
                      "0.000000"^^xsd:decimal)
// 5 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :empty_kit_tray_supply_pose :empty_kit_tray_supply_x_axis)

//*****************************************
// 5 start :Vector empty_kit_tray_supply_x_axis
Declaration(NamedIndividual(:empty_kit_tray_supply_x_axis))
ClassAssertion(:Vector :empty_kit_tray_supply_x_axis)
DataPropertyAssertion(:hasVector_I :empty_kit_tray_supply_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :empty_kit_tray_supply_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :empty_kit_tray_supply_x_axis
                      "0.000000"^^xsd:decimal)
// 5 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :empty_kit_tray_supply_pose :empty_kit_tray_supply_z_axis)

//*****************************************
// 5 start :Vector empty_kit_tray_supply_z_axis
Declaration(NamedIndividual(:empty_kit_tray_supply_z_axis))
ClassAssertion(:Vector :empty_kit_tray_supply_z_axis)
DataPropertyAssertion(:hasVector_I :empty_kit_tray_supply_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :empty_kit_tray_supply_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :empty_kit_tray_supply_z_axis
                      "1.000000"^^xsd:decimal)
// 5 end :Vector
//*****************************************

// 4 end :PoseOnlyLocation
//*****************************************

ObjectPropertyAssertion(:hasLargeBoxWithEmptyKitTrays_LargeContainer
                        :empty_kit_tray_supply :empty_kit_tray_box)

//*****************************************
// 4 start :LargeContainer empty_kit_tray_box
Declaration(NamedIndividual(:empty_kit_tray_box))
ClassAssertion(:LargeContainer :empty_kit_tray_box)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :empty_kit_tray_box :empty_kit_tray_box_pose)

//*****************************************
// 5 start :PoseOnlyLocation empty_kit_tray_box_pose
Declaration(NamedIndividual(:empty_kit_tray_box_pose))
ClassAssertion(:PoseOnlyLocation :empty_kit_tray_box_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :empty_kit_tray_box_pose :empty_kit_tray_supply)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :empty_kit_tray_box_pose :empty_kit_tray_box_point)

//*****************************************
// 6 start :Point empty_kit_tray_box_point
Declaration(NamedIndividual(:empty_kit_tray_box_point))
ClassAssertion(:Point :empty_kit_tray_box_point)
DataPropertyAssertion(:hasPoint_X :empty_kit_tray_box_point
                      "0.500000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :empty_kit_tray_box_point
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :empty_kit_tray_box_point
                      "0.000000"^^xsd:decimal)
// 6 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :empty_kit_tray_box_pose :empty_kit_tray_box_x_axis)

//*****************************************
// 6 start :Vector empty_kit_tray_box_x_axis
Declaration(NamedIndividual(:empty_kit_tray_box_x_axis))
ClassAssertion(:Vector :empty_kit_tray_box_x_axis)
DataPropertyAssertion(:hasVector_I :empty_kit_tray_box_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :empty_kit_tray_box_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :empty_kit_tray_box_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :empty_kit_tray_box_pose :empty_kit_tray_box_z_axis)

//*****************************************
// 6 start :Vector empty_kit_tray_box_z_axis
Declaration(NamedIndividual(:empty_kit_tray_box_z_axis))
ClassAssertion(:Vector :empty_kit_tray_box_z_axis)
DataPropertyAssertion(:hasVector_I :empty_kit_tray_box_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :empty_kit_tray_box_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :empty_kit_tray_box_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

// 5 end :PoseOnlyLocation
//*****************************************

ObjectPropertyAssertion(:hasSkuObject_Sku
                        :empty_kit_tray_box :stock_keeping_unit_kit_box)
DataPropertyAssertion(:hasLargeContainer_SerialNumber :empty_kit_tray_box
                      "4"^^xsd:NMTOKEN)
// 4 end :LargeContainer
//*****************************************

ObjectPropertyAssertion(:hasLargeBoxWithEmptyKitTrays_KitTray
                        :empty_kit_tray_supply :kit_tray_1)

//*****************************************
// 4 start :KitTray kit_tray_1
Declaration(NamedIndividual(:kit_tray_1))
ClassAssertion(:KitTray :kit_tray_1)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :kit_tray_1 :kit_tray_1_pose)

//*****************************************
// 5 start :PoseOnlyLocation kit_tray_1_pose
Declaration(NamedIndividual(:kit_tray_1_pose))
ClassAssertion(:PoseOnlyLocation :kit_tray_1_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :kit_tray_1_pose :empty_kit_tray_supply)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :kit_tray_1_pose :kit_tray_1_point)

//*****************************************
// 6 start :Point kit_tray_1_point
Declaration(NamedIndividual(:kit_tray_1_point))
ClassAssertion(:Point :kit_tray_1_point)
DataPropertyAssertion(:hasPoint_X :kit_tray_1_point
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :kit_tray_1_point
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :kit_tray_1_point
                      "0.000000"^^xsd:decimal)
// 6 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :kit_tray_1_pose :kit_tray_1_x_axis)

//*****************************************
// 6 start :Vector kit_tray_1_x_axis
Declaration(NamedIndividual(:kit_tray_1_x_axis))
ClassAssertion(:Vector :kit_tray_1_x_axis)
DataPropertyAssertion(:hasVector_I :kit_tray_1_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :kit_tray_1_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :kit_tray_1_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :kit_tray_1_pose :kit_tray_1_z_axis)

//*****************************************
// 6 start :Vector kit_tray_1_z_axis
Declaration(NamedIndividual(:kit_tray_1_z_axis))
ClassAssertion(:Vector :kit_tray_1_z_axis)
DataPropertyAssertion(:hasVector_I :kit_tray_1_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :kit_tray_1_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :kit_tray_1_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

// 5 end :PoseOnlyLocation
//*****************************************

ObjectPropertyAssertion(:hasSkuObject_Sku
                        :kit_tray_1 :stock_keeping_unit_kit_tray)
DataPropertyAssertion(:hasKitTray_SerialNumber :kit_tray_1
                      "1"^^xsd:NMTOKEN)
// 4 end :KitTray
//*****************************************

ObjectPropertyAssertion(:hasLargeBoxWithEmptyKitTrays_KitTray
                        :empty_kit_tray_supply :kit_tray_2)

//*****************************************
// 4 start :KitTray kit_tray_2
Declaration(NamedIndividual(:kit_tray_2))
ClassAssertion(:KitTray :kit_tray_2)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :kit_tray_2 :kit_tray_2_pose)

//*****************************************
// 5 start :PoseOnlyLocation kit_tray_2_pose
Declaration(NamedIndividual(:kit_tray_2_pose))
ClassAssertion(:PoseOnlyLocation :kit_tray_2_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :kit_tray_2_pose :empty_kit_tray_supply)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :kit_tray_2_pose :kit_tray_2_point)

//*****************************************
// 6 start :Point kit_tray_2_point
Declaration(NamedIndividual(:kit_tray_2_point))
ClassAssertion(:Point :kit_tray_2_point)
DataPropertyAssertion(:hasPoint_X :kit_tray_2_point
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :kit_tray_2_point
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :kit_tray_2_point
                      "0.150000"^^xsd:decimal)
// 6 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :kit_tray_2_pose :kit_tray_2_x_axis)

//*****************************************
// 6 start :Vector kit_tray_2_x_axis
Declaration(NamedIndividual(:kit_tray_2_x_axis))
ClassAssertion(:Vector :kit_tray_2_x_axis)
DataPropertyAssertion(:hasVector_I :kit_tray_2_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :kit_tray_2_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :kit_tray_2_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :kit_tray_2_pose :kit_tray_2_z_axis)

//*****************************************
// 6 start :Vector kit_tray_2_z_axis
Declaration(NamedIndividual(:kit_tray_2_z_axis))
ClassAssertion(:Vector :kit_tray_2_z_axis)
DataPropertyAssertion(:hasVector_I :kit_tray_2_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :kit_tray_2_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :kit_tray_2_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

// 5 end :PoseOnlyLocation
//*****************************************

ObjectPropertyAssertion(:hasSkuObject_Sku
                        :kit_tray_2 :stock_keeping_unit_kit_tray)
DataPropertyAssertion(:hasKitTray_SerialNumber :kit_tray_2
                      "2"^^xsd:NMTOKEN)
// 4 end :KitTray
//*****************************************

ObjectPropertyAssertion(:hasLargeBoxWithEmptyKitTrays_KitTray
                        :empty_kit_tray_supply :kit_tray_3)

//*****************************************
// 4 start :KitTray kit_tray_3
Declaration(NamedIndividual(:kit_tray_3))
ClassAssertion(:KitTray :kit_tray_3)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :kit_tray_3 :kit_tray_3_pose)

//*****************************************
// 5 start :PoseOnlyLocation kit_tray_3_pose
Declaration(NamedIndividual(:kit_tray_3_pose))
ClassAssertion(:PoseOnlyLocation :kit_tray_3_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :kit_tray_3_pose :empty_kit_tray_supply)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :kit_tray_3_pose :kit_tray_3_point)

//*****************************************
// 6 start :Point kit_tray_3_point
Declaration(NamedIndividual(:kit_tray_3_point))
ClassAssertion(:Point :kit_tray_3_point)
DataPropertyAssertion(:hasPoint_X :kit_tray_3_point
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :kit_tray_3_point
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :kit_tray_3_point
                      "0.300000"^^xsd:decimal)
// 6 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :kit_tray_3_pose :kit_tray_3_x_axis)

//*****************************************
// 6 start :Vector kit_tray_3_x_axis
Declaration(NamedIndividual(:kit_tray_3_x_axis))
ClassAssertion(:Vector :kit_tray_3_x_axis)
DataPropertyAssertion(:hasVector_I :kit_tray_3_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :kit_tray_3_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :kit_tray_3_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :kit_tray_3_pose :kit_tray_3_z_axis)

//*****************************************
// 6 start :Vector kit_tray_3_z_axis
Declaration(NamedIndividual(:kit_tray_3_z_axis))
ClassAssertion(:Vector :kit_tray_3_z_axis)
DataPropertyAssertion(:hasVector_I :kit_tray_3_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :kit_tray_3_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :kit_tray_3_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

// 5 end :PoseOnlyLocation
//*****************************************

ObjectPropertyAssertion(:hasSkuObject_Sku
                        :kit_tray_3 :stock_keeping_unit_kit_tray)
DataPropertyAssertion(:hasKitTray_SerialNumber :kit_tray_3
                      "3"^^xsd:NMTOKEN)
// 4 end :KitTray
//*****************************************

// 3 end :LargeBoxWithEmptyKitTrays
//*****************************************

ObjectPropertyAssertion(:hasKittingWorkstation_Object
                        :kitting_workstation_1 :finished_kit_receiver)

//*****************************************
// 3 start :LargeBoxWithKits finished_kit_receiver
Declaration(NamedIndividual(:finished_kit_receiver))
ClassAssertion(:LargeBoxWithKits :finished_kit_receiver)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :finished_kit_receiver :finished_kit_receiver_pose)

//*****************************************
// 4 start :PoseOnlyLocation finished_kit_receiver_pose
Declaration(NamedIndividual(:finished_kit_receiver_pose))
ClassAssertion(:PoseOnlyLocation :finished_kit_receiver_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :finished_kit_receiver_pose :kitting_workstation_1)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :finished_kit_receiver_pose :finished_kit_receiver_point)

//*****************************************
// 5 start :Point finished_kit_receiver_point
Declaration(NamedIndividual(:finished_kit_receiver_point))
ClassAssertion(:Point :finished_kit_receiver_point)
DataPropertyAssertion(:hasPoint_X :finished_kit_receiver_point
                      "1.500000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :finished_kit_receiver_point
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :finished_kit_receiver_point
                      "0.000000"^^xsd:decimal)
// 5 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :finished_kit_receiver_pose :finished_kit_receiver_x_axis)

//*****************************************
// 5 start :Vector finished_kit_receiver_x_axis
Declaration(NamedIndividual(:finished_kit_receiver_x_axis))
ClassAssertion(:Vector :finished_kit_receiver_x_axis)
DataPropertyAssertion(:hasVector_I :finished_kit_receiver_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :finished_kit_receiver_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :finished_kit_receiver_x_axis
                      "0.000000"^^xsd:decimal)
// 5 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :finished_kit_receiver_pose :finished_kit_receiver_z_axis)

//*****************************************
// 5 start :Vector finished_kit_receiver_z_axis
Declaration(NamedIndividual(:finished_kit_receiver_z_axis))
ClassAssertion(:Vector :finished_kit_receiver_z_axis)
DataPropertyAssertion(:hasVector_I :finished_kit_receiver_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :finished_kit_receiver_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :finished_kit_receiver_z_axis
                      "1.000000"^^xsd:decimal)
// 5 end :Vector
//*****************************************

// 4 end :PoseOnlyLocation
//*****************************************

ObjectPropertyAssertion(:hasLargeBoxWithKits_LargeContainer
                        :finished_kit_receiver :finished_kit_box)

//*****************************************
// 4 start :LargeContainer finished_kit_box
Declaration(NamedIndividual(:finished_kit_box))
ClassAssertion(:LargeContainer :finished_kit_box)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :finished_kit_box :finished_kit_box_pose)

//*****************************************
// 5 start :PoseOnlyLocation finished_kit_box_pose
Declaration(NamedIndividual(:finished_kit_box_pose))
ClassAssertion(:PoseOnlyLocation :finished_kit_box_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :finished_kit_box_pose :finished_kit_receiver)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :finished_kit_box_pose :finished_kit_box_point)

//*****************************************
// 6 start :Point finished_kit_box_point
Declaration(NamedIndividual(:finished_kit_box_point))
ClassAssertion(:Point :finished_kit_box_point)
DataPropertyAssertion(:hasPoint_X :finished_kit_box_point
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :finished_kit_box_point
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :finished_kit_box_point
                      "0.000000"^^xsd:decimal)
// 6 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :finished_kit_box_pose :finished_kit_box_x_axis)

//*****************************************
// 6 start :Vector finished_kit_box_x_axis
Declaration(NamedIndividual(:finished_kit_box_x_axis))
ClassAssertion(:Vector :finished_kit_box_x_axis)
DataPropertyAssertion(:hasVector_I :finished_kit_box_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :finished_kit_box_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :finished_kit_box_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :finished_kit_box_pose :finished_kit_box_z_axis)

//*****************************************
// 6 start :Vector finished_kit_box_z_axis
Declaration(NamedIndividual(:finished_kit_box_z_axis))
ClassAssertion(:Vector :finished_kit_box_z_axis)
DataPropertyAssertion(:hasVector_I :finished_kit_box_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :finished_kit_box_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :finished_kit_box_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

// 5 end :PoseOnlyLocation
//*****************************************

ObjectPropertyAssertion(:hasSkuObject_Sku
                        :finished_kit_box :stock_keeping_unit_kit_box)
DataPropertyAssertion(:hasLargeContainer_SerialNumber :finished_kit_box
                      "5"^^xsd:NMTOKEN)
// 4 end :LargeContainer
//*****************************************

ObjectPropertyAssertion(:hasLargeBoxWithKits_KitDesign
                        :finished_kit_receiver :kit_design_a2b1c1)
DataPropertyAssertion(:hasLargeBoxWithKits_Capacity :finished_kit_receiver
                      "12"^^xsd:positiveInteger)
// 3 end :LargeBoxWithKits
//*****************************************

ObjectPropertyAssertion(:hasKittingWorkstation_Object
                        :kitting_workstation_1 :part_a_tray)

//*****************************************
// 3 start :PartsTray part_a_tray
Declaration(NamedIndividual(:part_a_tray))
ClassAssertion(:PartsTray :part_a_tray)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :part_a_tray :part_a_tray_pose)

//*****************************************
// 4 start :PoseOnlyLocation part_a_tray_pose
Declaration(NamedIndividual(:part_a_tray_pose))
ClassAssertion(:PoseOnlyLocation :part_a_tray_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :part_a_tray_pose :kitting_workstation_1)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :part_a_tray_pose :part_a_tray_point)

//*****************************************
// 5 start :Point part_a_tray_point
Declaration(NamedIndividual(:part_a_tray_point))
ClassAssertion(:Point :part_a_tray_point)
DataPropertyAssertion(:hasPoint_X :part_a_tray_point
                      "4.500000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :part_a_tray_point
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :part_a_tray_point
                      "0.000000"^^xsd:decimal)
// 5 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :part_a_tray_pose :part_a_tray_x_axis)

//*****************************************
// 5 start :Vector part_a_tray_x_axis
Declaration(NamedIndividual(:part_a_tray_x_axis))
ClassAssertion(:Vector :part_a_tray_x_axis)
DataPropertyAssertion(:hasVector_I :part_a_tray_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_a_tray_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_a_tray_x_axis
                      "0.000000"^^xsd:decimal)
// 5 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :part_a_tray_pose :part_a_tray_z_axis)

//*****************************************
// 5 start :Vector part_a_tray_z_axis
Declaration(NamedIndividual(:part_a_tray_z_axis))
ClassAssertion(:Vector :part_a_tray_z_axis)
DataPropertyAssertion(:hasVector_I :part_a_tray_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_a_tray_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_a_tray_z_axis
                      "1.000000"^^xsd:decimal)
// 5 end :Vector
//*****************************************

// 4 end :PoseOnlyLocation
//*****************************************

ObjectPropertyAssertion(:hasSkuObject_Sku
                        :part_a_tray :stock_keeping_unit_parts_tray)
DataPropertyAssertion(:hasPartsVessel_SerialNumber :part_a_tray
                      "6"^^xsd:NMTOKEN)
ObjectPropertyAssertion(:hasPartsVessel_PartSku
                        :part_a_tray :stock_keeping_unit_part_a)
DataPropertyAssertion(:hasPartsVessel_PartQuantity :part_a_tray
                      "4"^^xsd:nonNegativeInteger)
ObjectPropertyAssertion(:hasPartsVessel_Part
                        :part_a_tray :part_a_1)

//*****************************************
// 4 start :Part part_a_1
Declaration(NamedIndividual(:part_a_1))
ClassAssertion(:Part :part_a_1)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :part_a_1 :part_a_1_pose)

//*****************************************
// 5 start :PoseLocationIn part_a_1_pose
Declaration(NamedIndividual(:part_a_1_pose))
ClassAssertion(:PoseLocationIn :part_a_1_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :part_a_1_pose :part_a_tray)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :part_a_1_pose :part_a_1_point)

//*****************************************
// 6 start :Point part_a_1_point
Declaration(NamedIndividual(:part_a_1_point))
ClassAssertion(:Point :part_a_1_point)
DataPropertyAssertion(:hasPoint_X :part_a_1_point
                      "0.159000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :part_a_1_point
                      "0.159000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :part_a_1_point
                      "0.027500"^^xsd:decimal)
// 6 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :part_a_1_pose :part_a_1_x_axis)

//*****************************************
// 6 start :Vector part_a_1_x_axis
Declaration(NamedIndividual(:part_a_1_x_axis))
ClassAssertion(:Vector :part_a_1_x_axis)
DataPropertyAssertion(:hasVector_I :part_a_1_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_a_1_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_a_1_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :part_a_1_pose :part_a_1_z_axis)

//*****************************************
// 6 start :Vector part_a_1_z_axis
Declaration(NamedIndividual(:part_a_1_z_axis))
ClassAssertion(:Vector :part_a_1_z_axis)
DataPropertyAssertion(:hasVector_I :part_a_1_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_a_1_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_a_1_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

// 5 end :PoseLocationIn
//*****************************************

ObjectPropertyAssertion(:hasSkuObject_Sku
                        :part_a_1 :stock_keeping_unit_part_a)
DataPropertyAssertion(:hasPart_SerialNumber :part_a_1
                      "a1"^^xsd:NMTOKEN)
// 4 end :Part
//*****************************************

ObjectPropertyAssertion(:hasPartsVessel_Part
                        :part_a_tray :part_a_2)

//*****************************************
// 4 start :Part part_a_2
Declaration(NamedIndividual(:part_a_2))
ClassAssertion(:Part :part_a_2)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :part_a_2 :part_a_2_pose)

//*****************************************
// 5 start :PoseLocationIn part_a_2_pose
Declaration(NamedIndividual(:part_a_2_pose))
ClassAssertion(:PoseLocationIn :part_a_2_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :part_a_2_pose :part_a_tray)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :part_a_2_pose :part_a_2_point)

//*****************************************
// 6 start :Point part_a_2_point
Declaration(NamedIndividual(:part_a_2_point))
ClassAssertion(:Point :part_a_2_point)
DataPropertyAssertion(:hasPoint_X :part_a_2_point
                      "0.159000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :part_a_2_point
                      "-0.159000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :part_a_2_point
                      "0.027500"^^xsd:decimal)
// 6 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :part_a_2_pose :part_a_2_x_axis)

//*****************************************
// 6 start :Vector part_a_2_x_axis
Declaration(NamedIndividual(:part_a_2_x_axis))
ClassAssertion(:Vector :part_a_2_x_axis)
DataPropertyAssertion(:hasVector_I :part_a_2_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_a_2_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_a_2_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :part_a_2_pose :part_a_2_z_axis)

//*****************************************
// 6 start :Vector part_a_2_z_axis
Declaration(NamedIndividual(:part_a_2_z_axis))
ClassAssertion(:Vector :part_a_2_z_axis)
DataPropertyAssertion(:hasVector_I :part_a_2_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_a_2_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_a_2_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

// 5 end :PoseLocationIn
//*****************************************

ObjectPropertyAssertion(:hasSkuObject_Sku
                        :part_a_2 :stock_keeping_unit_part_a)
DataPropertyAssertion(:hasPart_SerialNumber :part_a_2
                      "a2"^^xsd:NMTOKEN)
// 4 end :Part
//*****************************************

ObjectPropertyAssertion(:hasPartsVessel_Part
                        :part_a_tray :part_a_3)

//*****************************************
// 4 start :Part part_a_3
Declaration(NamedIndividual(:part_a_3))
ClassAssertion(:Part :part_a_3)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :part_a_3 :part_a_3_pose)

//*****************************************
// 5 start :PoseLocationIn part_a_3_pose
Declaration(NamedIndividual(:part_a_3_pose))
ClassAssertion(:PoseLocationIn :part_a_3_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :part_a_3_pose :part_a_tray)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :part_a_3_pose :part_a_3_point)

//*****************************************
// 6 start :Point part_a_3_point
Declaration(NamedIndividual(:part_a_3_point))
ClassAssertion(:Point :part_a_3_point)
DataPropertyAssertion(:hasPoint_X :part_a_3_point
                      "-0.159000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :part_a_3_point
                      "-0.159000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :part_a_3_point
                      "0.027500"^^xsd:decimal)
// 6 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :part_a_3_pose :part_a_3_x_axis)

//*****************************************
// 6 start :Vector part_a_3_x_axis
Declaration(NamedIndividual(:part_a_3_x_axis))
ClassAssertion(:Vector :part_a_3_x_axis)
DataPropertyAssertion(:hasVector_I :part_a_3_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_a_3_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_a_3_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :part_a_3_pose :part_a_3_z_axis)

//*****************************************
// 6 start :Vector part_a_3_z_axis
Declaration(NamedIndividual(:part_a_3_z_axis))
ClassAssertion(:Vector :part_a_3_z_axis)
DataPropertyAssertion(:hasVector_I :part_a_3_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_a_3_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_a_3_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

// 5 end :PoseLocationIn
//*****************************************

ObjectPropertyAssertion(:hasSkuObject_Sku
                        :part_a_3 :stock_keeping_unit_part_a)
DataPropertyAssertion(:hasPart_SerialNumber :part_a_3
                      "a3"^^xsd:NMTOKEN)
// 4 end :Part
//*****************************************

ObjectPropertyAssertion(:hasPartsVessel_Part
                        :part_a_tray :part_a_4)

//*****************************************
// 4 start :Part part_a_4
Declaration(NamedIndividual(:part_a_4))
ClassAssertion(:Part :part_a_4)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :part_a_4 :part_a_4_pose)

//*****************************************
// 5 start :PoseLocationIn part_a_4_pose
Declaration(NamedIndividual(:part_a_4_pose))
ClassAssertion(:PoseLocationIn :part_a_4_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :part_a_4_pose :part_a_tray)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :part_a_4_pose :part_a_4_point)

//*****************************************
// 6 start :Point part_a_4_point
Declaration(NamedIndividual(:part_a_4_point))
ClassAssertion(:Point :part_a_4_point)
DataPropertyAssertion(:hasPoint_X :part_a_4_point
                      "-0.159000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :part_a_4_point
                      "0.159000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :part_a_4_point
                      "0.027500"^^xsd:decimal)
// 6 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :part_a_4_pose :part_a_4_x_axis)

//*****************************************
// 6 start :Vector part_a_4_x_axis
Declaration(NamedIndividual(:part_a_4_x_axis))
ClassAssertion(:Vector :part_a_4_x_axis)
DataPropertyAssertion(:hasVector_I :part_a_4_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_a_4_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_a_4_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :part_a_4_pose :part_a_4_z_axis)

//*****************************************
// 6 start :Vector part_a_4_z_axis
Declaration(NamedIndividual(:part_a_4_z_axis))
ClassAssertion(:Vector :part_a_4_z_axis)
DataPropertyAssertion(:hasVector_I :part_a_4_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_a_4_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_a_4_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

// 5 end :PoseLocationIn
//*****************************************

ObjectPropertyAssertion(:hasSkuObject_Sku
                        :part_a_4 :stock_keeping_unit_part_a)
DataPropertyAssertion(:hasPart_SerialNumber :part_a_4
                      "a4"^^xsd:NMTOKEN)
// 4 end :Part
//*****************************************

// 3 end :PartsTray
//*****************************************

ObjectPropertyAssertion(:hasKittingWorkstation_Object
                        :kitting_workstation_1 :part_b_tray)

//*****************************************
// 3 start :PartsTray part_b_tray
Declaration(NamedIndividual(:part_b_tray))
ClassAssertion(:PartsTray :part_b_tray)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :part_b_tray :part_b_tray_pose)

//*****************************************
// 4 start :PoseOnlyLocation part_b_tray_pose
Declaration(NamedIndividual(:part_b_tray_pose))
ClassAssertion(:PoseOnlyLocation :part_b_tray_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :part_b_tray_pose :kitting_workstation_1)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :part_b_tray_pose :part_b_tray_point)

//*****************************************
// 5 start :Point part_b_tray_point
Declaration(NamedIndividual(:part_b_tray_point))
ClassAssertion(:Point :part_b_tray_point)
DataPropertyAssertion(:hasPoint_X :part_b_tray_point
                      "5.500000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :part_b_tray_point
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :part_b_tray_point
                      "0.000000"^^xsd:decimal)
// 5 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :part_b_tray_pose :part_b_tray_x_axis)

//*****************************************
// 5 start :Vector part_b_tray_x_axis
Declaration(NamedIndividual(:part_b_tray_x_axis))
ClassAssertion(:Vector :part_b_tray_x_axis)
DataPropertyAssertion(:hasVector_I :part_b_tray_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_b_tray_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_b_tray_x_axis
                      "0.000000"^^xsd:decimal)
// 5 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :part_b_tray_pose :part_b_tray_z_axis)

//*****************************************
// 5 start :Vector part_b_tray_z_axis
Declaration(NamedIndividual(:part_b_tray_z_axis))
ClassAssertion(:Vector :part_b_tray_z_axis)
DataPropertyAssertion(:hasVector_I :part_b_tray_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_b_tray_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_b_tray_z_axis
                      "1.000000"^^xsd:decimal)
// 5 end :Vector
//*****************************************

// 4 end :PoseOnlyLocation
//*****************************************

ObjectPropertyAssertion(:hasSkuObject_Sku
                        :part_b_tray :stock_keeping_unit_parts_tray)
DataPropertyAssertion(:hasPartsVessel_SerialNumber :part_b_tray
                      "7"^^xsd:NMTOKEN)
ObjectPropertyAssertion(:hasPartsVessel_PartSku
                        :part_b_tray :stock_keeping_unit_part_b)
DataPropertyAssertion(:hasPartsVessel_PartQuantity :part_b_tray
                      "8"^^xsd:nonNegativeInteger)
ObjectPropertyAssertion(:hasPartsVessel_Part
                        :part_b_tray :part_b_1)

//*****************************************
// 4 start :Part part_b_1
Declaration(NamedIndividual(:part_b_1))
ClassAssertion(:Part :part_b_1)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :part_b_1 :part_b_1_pose)

//*****************************************
// 5 start :PoseLocationIn part_b_1_pose
Declaration(NamedIndividual(:part_b_1_pose))
ClassAssertion(:PoseLocationIn :part_b_1_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :part_b_1_pose :part_b_tray)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :part_b_1_pose :part_b_1_point)

//*****************************************
// 6 start :Point part_b_1_point
Declaration(NamedIndividual(:part_b_1_point))
ClassAssertion(:Point :part_b_1_point)
DataPropertyAssertion(:hasPoint_X :part_b_1_point
                      "-0.080000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :part_b_1_point
                      "0.120000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :part_b_1_point
                      "0.067500"^^xsd:decimal)
// 6 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :part_b_1_pose :part_b_1_x_axis)

//*****************************************
// 6 start :Vector part_b_1_x_axis
Declaration(NamedIndividual(:part_b_1_x_axis))
ClassAssertion(:Vector :part_b_1_x_axis)
DataPropertyAssertion(:hasVector_I :part_b_1_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_b_1_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_b_1_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :part_b_1_pose :part_b_1_z_axis)

//*****************************************
// 6 start :Vector part_b_1_z_axis
Declaration(NamedIndividual(:part_b_1_z_axis))
ClassAssertion(:Vector :part_b_1_z_axis)
DataPropertyAssertion(:hasVector_I :part_b_1_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_b_1_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_b_1_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

// 5 end :PoseLocationIn
//*****************************************

ObjectPropertyAssertion(:hasSkuObject_Sku
                        :part_b_1 :stock_keeping_unit_part_b)
DataPropertyAssertion(:hasPart_SerialNumber :part_b_1
                      "b1"^^xsd:NMTOKEN)
// 4 end :Part
//*****************************************

ObjectPropertyAssertion(:hasPartsVessel_Part
                        :part_b_tray :part_b_2)

//*****************************************
// 4 start :Part part_b_2
Declaration(NamedIndividual(:part_b_2))
ClassAssertion(:Part :part_b_2)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :part_b_2 :part_b_2_pose)

//*****************************************
// 5 start :PoseLocationIn part_b_2_pose
Declaration(NamedIndividual(:part_b_2_pose))
ClassAssertion(:PoseLocationIn :part_b_2_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :part_b_2_pose :part_b_tray)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :part_b_2_pose :part_b_2_point)

//*****************************************
// 6 start :Point part_b_2_point
Declaration(NamedIndividual(:part_b_2_point))
ClassAssertion(:Point :part_b_2_point)
DataPropertyAssertion(:hasPoint_X :part_b_2_point
                      "-0.240000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :part_b_2_point
                      "0.120000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :part_b_2_point
                      "0.067500"^^xsd:decimal)
// 6 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :part_b_2_pose :part_b_2_x_axis)

//*****************************************
// 6 start :Vector part_b_2_x_axis
Declaration(NamedIndividual(:part_b_2_x_axis))
ClassAssertion(:Vector :part_b_2_x_axis)
DataPropertyAssertion(:hasVector_I :part_b_2_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_b_2_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_b_2_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :part_b_2_pose :part_b_2_z_axis)

//*****************************************
// 6 start :Vector part_b_2_z_axis
Declaration(NamedIndividual(:part_b_2_z_axis))
ClassAssertion(:Vector :part_b_2_z_axis)
DataPropertyAssertion(:hasVector_I :part_b_2_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_b_2_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_b_2_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

// 5 end :PoseLocationIn
//*****************************************

ObjectPropertyAssertion(:hasSkuObject_Sku
                        :part_b_2 :stock_keeping_unit_part_b)
DataPropertyAssertion(:hasPart_SerialNumber :part_b_2
                      "b2"^^xsd:NMTOKEN)
// 4 end :Part
//*****************************************

ObjectPropertyAssertion(:hasPartsVessel_Part
                        :part_b_tray :part_b_3)

//*****************************************
// 4 start :Part part_b_3
Declaration(NamedIndividual(:part_b_3))
ClassAssertion(:Part :part_b_3)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :part_b_3 :part_b_3_pose)

//*****************************************
// 5 start :PoseLocationIn part_b_3_pose
Declaration(NamedIndividual(:part_b_3_pose))
ClassAssertion(:PoseLocationIn :part_b_3_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :part_b_3_pose :part_b_tray)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :part_b_3_pose :part_b_3_point)

//*****************************************
// 6 start :Point part_b_3_point
Declaration(NamedIndividual(:part_b_3_point))
ClassAssertion(:Point :part_b_3_point)
DataPropertyAssertion(:hasPoint_X :part_b_3_point
                      "0.080000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :part_b_3_point
                      "0.120000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :part_b_3_point
                      "0.067500"^^xsd:decimal)
// 6 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :part_b_3_pose :part_b_3_x_axis)

//*****************************************
// 6 start :Vector part_b_3_x_axis
Declaration(NamedIndividual(:part_b_3_x_axis))
ClassAssertion(:Vector :part_b_3_x_axis)
DataPropertyAssertion(:hasVector_I :part_b_3_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_b_3_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_b_3_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :part_b_3_pose :part_b_3_z_axis)

//*****************************************
// 6 start :Vector part_b_3_z_axis
Declaration(NamedIndividual(:part_b_3_z_axis))
ClassAssertion(:Vector :part_b_3_z_axis)
DataPropertyAssertion(:hasVector_I :part_b_3_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_b_3_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_b_3_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

// 5 end :PoseLocationIn
//*****************************************

ObjectPropertyAssertion(:hasSkuObject_Sku
                        :part_b_3 :stock_keeping_unit_part_b)
DataPropertyAssertion(:hasPart_SerialNumber :part_b_3
                      "b3"^^xsd:NMTOKEN)
// 4 end :Part
//*****************************************

ObjectPropertyAssertion(:hasPartsVessel_Part
                        :part_b_tray :part_b_4)

//*****************************************
// 4 start :Part part_b_4
Declaration(NamedIndividual(:part_b_4))
ClassAssertion(:Part :part_b_4)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :part_b_4 :part_b_4_pose)

//*****************************************
// 5 start :PoseLocationIn part_b_4_pose
Declaration(NamedIndividual(:part_b_4_pose))
ClassAssertion(:PoseLocationIn :part_b_4_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :part_b_4_pose :part_b_tray)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :part_b_4_pose :part_b_4_point)

//*****************************************
// 6 start :Point part_b_4_point
Declaration(NamedIndividual(:part_b_4_point))
ClassAssertion(:Point :part_b_4_point)
DataPropertyAssertion(:hasPoint_X :part_b_4_point
                      "0.240000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :part_b_4_point
                      "0.120000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :part_b_4_point
                      "0.067500"^^xsd:decimal)
// 6 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :part_b_4_pose :part_b_4_x_axis)

//*****************************************
// 6 start :Vector part_b_4_x_axis
Declaration(NamedIndividual(:part_b_4_x_axis))
ClassAssertion(:Vector :part_b_4_x_axis)
DataPropertyAssertion(:hasVector_I :part_b_4_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_b_4_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_b_4_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :part_b_4_pose :part_b_4_z_axis)

//*****************************************
// 6 start :Vector part_b_4_z_axis
Declaration(NamedIndividual(:part_b_4_z_axis))
ClassAssertion(:Vector :part_b_4_z_axis)
DataPropertyAssertion(:hasVector_I :part_b_4_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_b_4_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_b_4_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

// 5 end :PoseLocationIn
//*****************************************

ObjectPropertyAssertion(:hasSkuObject_Sku
                        :part_b_4 :stock_keeping_unit_part_b)
DataPropertyAssertion(:hasPart_SerialNumber :part_b_4
                      "b4"^^xsd:NMTOKEN)
// 4 end :Part
//*****************************************

ObjectPropertyAssertion(:hasPartsVessel_Part
                        :part_b_tray :part_b_5)

//*****************************************
// 4 start :Part part_b_5
Declaration(NamedIndividual(:part_b_5))
ClassAssertion(:Part :part_b_5)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :part_b_5 :part_b_5_pose)

//*****************************************
// 5 start :PoseLocationIn part_b_5_pose
Declaration(NamedIndividual(:part_b_5_pose))
ClassAssertion(:PoseLocationIn :part_b_5_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :part_b_5_pose :part_b_tray)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :part_b_5_pose :part_b_5_point)

//*****************************************
// 6 start :Point part_b_5_point
Declaration(NamedIndividual(:part_b_5_point))
ClassAssertion(:Point :part_b_5_point)
DataPropertyAssertion(:hasPoint_X :part_b_5_point
                      "-0.080000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :part_b_5_point
                      "-0.120000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :part_b_5_point
                      "0.067500"^^xsd:decimal)
// 6 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :part_b_5_pose :part_b_5_x_axis)

//*****************************************
// 6 start :Vector part_b_5_x_axis
Declaration(NamedIndividual(:part_b_5_x_axis))
ClassAssertion(:Vector :part_b_5_x_axis)
DataPropertyAssertion(:hasVector_I :part_b_5_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_b_5_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_b_5_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :part_b_5_pose :part_b_5_z_axis)

//*****************************************
// 6 start :Vector part_b_5_z_axis
Declaration(NamedIndividual(:part_b_5_z_axis))
ClassAssertion(:Vector :part_b_5_z_axis)
DataPropertyAssertion(:hasVector_I :part_b_5_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_b_5_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_b_5_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

// 5 end :PoseLocationIn
//*****************************************

ObjectPropertyAssertion(:hasSkuObject_Sku
                        :part_b_5 :stock_keeping_unit_part_b)
DataPropertyAssertion(:hasPart_SerialNumber :part_b_5
                      "b5"^^xsd:NMTOKEN)
// 4 end :Part
//*****************************************

ObjectPropertyAssertion(:hasPartsVessel_Part
                        :part_b_tray :part_b_6)

//*****************************************
// 4 start :Part part_b_6
Declaration(NamedIndividual(:part_b_6))
ClassAssertion(:Part :part_b_6)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :part_b_6 :part_b_6_pose)

//*****************************************
// 5 start :PoseLocationIn part_b_6_pose
Declaration(NamedIndividual(:part_b_6_pose))
ClassAssertion(:PoseLocationIn :part_b_6_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :part_b_6_pose :part_b_tray)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :part_b_6_pose :part_b_6_point)

//*****************************************
// 6 start :Point part_b_6_point
Declaration(NamedIndividual(:part_b_6_point))
ClassAssertion(:Point :part_b_6_point)
DataPropertyAssertion(:hasPoint_X :part_b_6_point
                      "-0.240000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :part_b_6_point
                      "-0.120000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :part_b_6_point
                      "0.067500"^^xsd:decimal)
// 6 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :part_b_6_pose :part_b_6_x_axis)

//*****************************************
// 6 start :Vector part_b_6_x_axis
Declaration(NamedIndividual(:part_b_6_x_axis))
ClassAssertion(:Vector :part_b_6_x_axis)
DataPropertyAssertion(:hasVector_I :part_b_6_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_b_6_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_b_6_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :part_b_6_pose :part_b_6_z_axis)

//*****************************************
// 6 start :Vector part_b_6_z_axis
Declaration(NamedIndividual(:part_b_6_z_axis))
ClassAssertion(:Vector :part_b_6_z_axis)
DataPropertyAssertion(:hasVector_I :part_b_6_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_b_6_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_b_6_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

// 5 end :PoseLocationIn
//*****************************************

ObjectPropertyAssertion(:hasSkuObject_Sku
                        :part_b_6 :stock_keeping_unit_part_b)
DataPropertyAssertion(:hasPart_SerialNumber :part_b_6
                      "b6"^^xsd:NMTOKEN)
// 4 end :Part
//*****************************************

ObjectPropertyAssertion(:hasPartsVessel_Part
                        :part_b_tray :part_b_7)

//*****************************************
// 4 start :Part part_b_7
Declaration(NamedIndividual(:part_b_7))
ClassAssertion(:Part :part_b_7)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :part_b_7 :part_b_7_pose)

//*****************************************
// 5 start :PoseLocationIn part_b_7_pose
Declaration(NamedIndividual(:part_b_7_pose))
ClassAssertion(:PoseLocationIn :part_b_7_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :part_b_7_pose :part_b_tray)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :part_b_7_pose :part_b_7_point)

//*****************************************
// 6 start :Point part_b_7_point
Declaration(NamedIndividual(:part_b_7_point))
ClassAssertion(:Point :part_b_7_point)
DataPropertyAssertion(:hasPoint_X :part_b_7_point
                      "0.080000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :part_b_7_point
                      "-0.120000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :part_b_7_point
                      "0.067500"^^xsd:decimal)
// 6 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :part_b_7_pose :part_b_7_x_axis)

//*****************************************
// 6 start :Vector part_b_7_x_axis
Declaration(NamedIndividual(:part_b_7_x_axis))
ClassAssertion(:Vector :part_b_7_x_axis)
DataPropertyAssertion(:hasVector_I :part_b_7_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_b_7_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_b_7_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :part_b_7_pose :part_b_7_z_axis)

//*****************************************
// 6 start :Vector part_b_7_z_axis
Declaration(NamedIndividual(:part_b_7_z_axis))
ClassAssertion(:Vector :part_b_7_z_axis)
DataPropertyAssertion(:hasVector_I :part_b_7_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_b_7_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_b_7_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

// 5 end :PoseLocationIn
//*****************************************

ObjectPropertyAssertion(:hasSkuObject_Sku
                        :part_b_7 :stock_keeping_unit_part_b)
DataPropertyAssertion(:hasPart_SerialNumber :part_b_7
                      "b7"^^xsd:NMTOKEN)
// 4 end :Part
//*****************************************

ObjectPropertyAssertion(:hasPartsVessel_Part
                        :part_b_tray :part_b_8)

//*****************************************
// 4 start :Part part_b_8
Declaration(NamedIndividual(:part_b_8))
ClassAssertion(:Part :part_b_8)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :part_b_8 :part_b_8_pose)

//*****************************************
// 5 start :PoseLocationIn part_b_8_pose
Declaration(NamedIndividual(:part_b_8_pose))
ClassAssertion(:PoseLocationIn :part_b_8_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :part_b_8_pose :part_b_tray)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :part_b_8_pose :part_b_8_point)

//*****************************************
// 6 start :Point part_b_8_point
Declaration(NamedIndividual(:part_b_8_point))
ClassAssertion(:Point :part_b_8_point)
DataPropertyAssertion(:hasPoint_X :part_b_8_point
                      "0.240000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :part_b_8_point
                      "-0.120000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :part_b_8_point
                      "0.067500"^^xsd:decimal)
// 6 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :part_b_8_pose :part_b_8_x_axis)

//*****************************************
// 6 start :Vector part_b_8_x_axis
Declaration(NamedIndividual(:part_b_8_x_axis))
ClassAssertion(:Vector :part_b_8_x_axis)
DataPropertyAssertion(:hasVector_I :part_b_8_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_b_8_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_b_8_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :part_b_8_pose :part_b_8_z_axis)

//*****************************************
// 6 start :Vector part_b_8_z_axis
Declaration(NamedIndividual(:part_b_8_z_axis))
ClassAssertion(:Vector :part_b_8_z_axis)
DataPropertyAssertion(:hasVector_I :part_b_8_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_b_8_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_b_8_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

// 5 end :PoseLocationIn
//*****************************************

ObjectPropertyAssertion(:hasSkuObject_Sku
                        :part_b_8 :stock_keeping_unit_part_b)
DataPropertyAssertion(:hasPart_SerialNumber :part_b_8
                      "b8"^^xsd:NMTOKEN)
// 4 end :Part
//*****************************************

// 3 end :PartsTray
//*****************************************

ObjectPropertyAssertion(:hasKittingWorkstation_Object
                        :kitting_workstation_1 :part_c_tray)

//*****************************************
// 3 start :PartsTray part_c_tray
Declaration(NamedIndividual(:part_c_tray))
ClassAssertion(:PartsTray :part_c_tray)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :part_c_tray :part_c_tray_pose)

//*****************************************
// 4 start :PoseOnlyLocation part_c_tray_pose
Declaration(NamedIndividual(:part_c_tray_pose))
ClassAssertion(:PoseOnlyLocation :part_c_tray_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :part_c_tray_pose :kitting_workstation_1)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :part_c_tray_pose :part_c_tray_point)

//*****************************************
// 5 start :Point part_c_tray_point
Declaration(NamedIndividual(:part_c_tray_point))
ClassAssertion(:Point :part_c_tray_point)
DataPropertyAssertion(:hasPoint_X :part_c_tray_point
                      "6.500000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :part_c_tray_point
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :part_c_tray_point
                      "0.000000"^^xsd:decimal)
// 5 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :part_c_tray_pose :part_c_tray_x_axis)

//*****************************************
// 5 start :Vector part_c_tray_x_axis
Declaration(NamedIndividual(:part_c_tray_x_axis))
ClassAssertion(:Vector :part_c_tray_x_axis)
DataPropertyAssertion(:hasVector_I :part_c_tray_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_c_tray_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_c_tray_x_axis
                      "0.000000"^^xsd:decimal)
// 5 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :part_c_tray_pose :part_c_tray_z_axis)

//*****************************************
// 5 start :Vector part_c_tray_z_axis
Declaration(NamedIndividual(:part_c_tray_z_axis))
ClassAssertion(:Vector :part_c_tray_z_axis)
DataPropertyAssertion(:hasVector_I :part_c_tray_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_c_tray_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_c_tray_z_axis
                      "1.000000"^^xsd:decimal)
// 5 end :Vector
//*****************************************

// 4 end :PoseOnlyLocation
//*****************************************

ObjectPropertyAssertion(:hasSkuObject_Sku
                        :part_c_tray :stock_keeping_unit_parts_tray)
DataPropertyAssertion(:hasPartsVessel_SerialNumber :part_c_tray
                      "8"^^xsd:NMTOKEN)
ObjectPropertyAssertion(:hasPartsVessel_PartSku
                        :part_c_tray :stock_keeping_unit_part_c)
DataPropertyAssertion(:hasPartsVessel_PartQuantity :part_c_tray
                      "8"^^xsd:nonNegativeInteger)
ObjectPropertyAssertion(:hasPartsVessel_Part
                        :part_c_tray :part_c_1)

//*****************************************
// 4 start :Part part_c_1
Declaration(NamedIndividual(:part_c_1))
ClassAssertion(:Part :part_c_1)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :part_c_1 :part_c_1_pose)

//*****************************************
// 5 start :PoseLocationIn part_c_1_pose
Declaration(NamedIndividual(:part_c_1_pose))
ClassAssertion(:PoseLocationIn :part_c_1_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :part_c_1_pose :part_c_tray)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :part_c_1_pose :part_c_1_point)

//*****************************************
// 6 start :Point part_c_1_point
Declaration(NamedIndividual(:part_c_1_point))
ClassAssertion(:Point :part_c_1_point)
DataPropertyAssertion(:hasPoint_X :part_c_1_point
                      "0.110000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :part_c_1_point
                      "0.216000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :part_c_1_point
                      "0.035000"^^xsd:decimal)
// 6 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :part_c_1_pose :part_c_1_x_axis)

//*****************************************
// 6 start :Vector part_c_1_x_axis
Declaration(NamedIndividual(:part_c_1_x_axis))
ClassAssertion(:Vector :part_c_1_x_axis)
DataPropertyAssertion(:hasVector_I :part_c_1_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_c_1_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_c_1_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :part_c_1_pose :part_c_1_z_axis)

//*****************************************
// 6 start :Vector part_c_1_z_axis
Declaration(NamedIndividual(:part_c_1_z_axis))
ClassAssertion(:Vector :part_c_1_z_axis)
DataPropertyAssertion(:hasVector_I :part_c_1_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_c_1_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_c_1_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

// 5 end :PoseLocationIn
//*****************************************

ObjectPropertyAssertion(:hasSkuObject_Sku
                        :part_c_1 :stock_keeping_unit_part_c)
DataPropertyAssertion(:hasPart_SerialNumber :part_c_1
                      "c1"^^xsd:NMTOKEN)
// 4 end :Part
//*****************************************

ObjectPropertyAssertion(:hasPartsVessel_Part
                        :part_c_tray :part_c_2)

//*****************************************
// 4 start :Part part_c_2
Declaration(NamedIndividual(:part_c_2))
ClassAssertion(:Part :part_c_2)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :part_c_2 :part_c_2_pose)

//*****************************************
// 5 start :PoseLocationIn part_c_2_pose
Declaration(NamedIndividual(:part_c_2_pose))
ClassAssertion(:PoseLocationIn :part_c_2_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :part_c_2_pose :part_c_tray)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :part_c_2_pose :part_c_2_point)

//*****************************************
// 6 start :Point part_c_2_point
Declaration(NamedIndividual(:part_c_2_point))
ClassAssertion(:Point :part_c_2_point)
DataPropertyAssertion(:hasPoint_X :part_c_2_point
                      "0.330000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :part_c_2_point
                      "0.216000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :part_c_2_point
                      "0.035000"^^xsd:decimal)
// 6 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :part_c_2_pose :part_c_2_x_axis)

//*****************************************
// 6 start :Vector part_c_2_x_axis
Declaration(NamedIndividual(:part_c_2_x_axis))
ClassAssertion(:Vector :part_c_2_x_axis)
DataPropertyAssertion(:hasVector_I :part_c_2_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_c_2_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_c_2_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :part_c_2_pose :part_c_2_z_axis)

//*****************************************
// 6 start :Vector part_c_2_z_axis
Declaration(NamedIndividual(:part_c_2_z_axis))
ClassAssertion(:Vector :part_c_2_z_axis)
DataPropertyAssertion(:hasVector_I :part_c_2_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_c_2_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_c_2_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

// 5 end :PoseLocationIn
//*****************************************

ObjectPropertyAssertion(:hasSkuObject_Sku
                        :part_c_2 :stock_keeping_unit_part_c)
DataPropertyAssertion(:hasPart_SerialNumber :part_c_2
                      "c2"^^xsd:NMTOKEN)
// 4 end :Part
//*****************************************

ObjectPropertyAssertion(:hasPartsVessel_Part
                        :part_c_tray :part_c_3)

//*****************************************
// 4 start :Part part_c_3
Declaration(NamedIndividual(:part_c_3))
ClassAssertion(:Part :part_c_3)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :part_c_3 :part_c_3_pose)

//*****************************************
// 5 start :PoseLocationIn part_c_3_pose
Declaration(NamedIndividual(:part_c_3_pose))
ClassAssertion(:PoseLocationIn :part_c_3_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :part_c_3_pose :part_c_tray)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :part_c_3_pose :part_c_3_point)

//*****************************************
// 6 start :Point part_c_3_point
Declaration(NamedIndividual(:part_c_3_point))
ClassAssertion(:Point :part_c_3_point)
DataPropertyAssertion(:hasPoint_X :part_c_3_point
                      "-0.110000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :part_c_3_point
                      "0.216000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :part_c_3_point
                      "0.035000"^^xsd:decimal)
// 6 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :part_c_3_pose :part_c_3_x_axis)

//*****************************************
// 6 start :Vector part_c_3_x_axis
Declaration(NamedIndividual(:part_c_3_x_axis))
ClassAssertion(:Vector :part_c_3_x_axis)
DataPropertyAssertion(:hasVector_I :part_c_3_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_c_3_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_c_3_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :part_c_3_pose :part_c_3_z_axis)

//*****************************************
// 6 start :Vector part_c_3_z_axis
Declaration(NamedIndividual(:part_c_3_z_axis))
ClassAssertion(:Vector :part_c_3_z_axis)
DataPropertyAssertion(:hasVector_I :part_c_3_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_c_3_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_c_3_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

// 5 end :PoseLocationIn
//*****************************************

ObjectPropertyAssertion(:hasSkuObject_Sku
                        :part_c_3 :stock_keeping_unit_part_c)
DataPropertyAssertion(:hasPart_SerialNumber :part_c_3
                      "c3"^^xsd:NMTOKEN)
// 4 end :Part
//*****************************************

ObjectPropertyAssertion(:hasPartsVessel_Part
                        :part_c_tray :part_c_4)

//*****************************************
// 4 start :Part part_c_4
Declaration(NamedIndividual(:part_c_4))
ClassAssertion(:Part :part_c_4)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :part_c_4 :part_c_4_pose)

//*****************************************
// 5 start :PoseLocationIn part_c_4_pose
Declaration(NamedIndividual(:part_c_4_pose))
ClassAssertion(:PoseLocationIn :part_c_4_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :part_c_4_pose :part_c_tray)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :part_c_4_pose :part_c_4_point)

//*****************************************
// 6 start :Point part_c_4_point
Declaration(NamedIndividual(:part_c_4_point))
ClassAssertion(:Point :part_c_4_point)
DataPropertyAssertion(:hasPoint_X :part_c_4_point
                      "-0.330000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :part_c_4_point
                      "0.216000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :part_c_4_point
                      "0.035000"^^xsd:decimal)
// 6 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :part_c_4_pose :part_c_4_x_axis)

//*****************************************
// 6 start :Vector part_c_4_x_axis
Declaration(NamedIndividual(:part_c_4_x_axis))
ClassAssertion(:Vector :part_c_4_x_axis)
DataPropertyAssertion(:hasVector_I :part_c_4_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_c_4_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_c_4_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :part_c_4_pose :part_c_4_z_axis)

//*****************************************
// 6 start :Vector part_c_4_z_axis
Declaration(NamedIndividual(:part_c_4_z_axis))
ClassAssertion(:Vector :part_c_4_z_axis)
DataPropertyAssertion(:hasVector_I :part_c_4_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_c_4_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_c_4_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

// 5 end :PoseLocationIn
//*****************************************

ObjectPropertyAssertion(:hasSkuObject_Sku
                        :part_c_4 :stock_keeping_unit_part_c)
DataPropertyAssertion(:hasPart_SerialNumber :part_c_4
                      "c4"^^xsd:NMTOKEN)
// 4 end :Part
//*****************************************

ObjectPropertyAssertion(:hasPartsVessel_Part
                        :part_c_tray :part_c_5)

//*****************************************
// 4 start :Part part_c_5
Declaration(NamedIndividual(:part_c_5))
ClassAssertion(:Part :part_c_5)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :part_c_5 :part_c_5_pose)

//*****************************************
// 5 start :PoseLocationIn part_c_5_pose
Declaration(NamedIndividual(:part_c_5_pose))
ClassAssertion(:PoseLocationIn :part_c_5_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :part_c_5_pose :part_c_tray)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :part_c_5_pose :part_c_5_point)

//*****************************************
// 6 start :Point part_c_5_point
Declaration(NamedIndividual(:part_c_5_point))
ClassAssertion(:Point :part_c_5_point)
DataPropertyAssertion(:hasPoint_X :part_c_5_point
                      "0.110000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :part_c_5_point
                      "-0.216000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :part_c_5_point
                      "0.035000"^^xsd:decimal)
// 6 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :part_c_5_pose :part_c_5_x_axis)

//*****************************************
// 6 start :Vector part_c_5_x_axis
Declaration(NamedIndividual(:part_c_5_x_axis))
ClassAssertion(:Vector :part_c_5_x_axis)
DataPropertyAssertion(:hasVector_I :part_c_5_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_c_5_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_c_5_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :part_c_5_pose :part_c_5_z_axis)

//*****************************************
// 6 start :Vector part_c_5_z_axis
Declaration(NamedIndividual(:part_c_5_z_axis))
ClassAssertion(:Vector :part_c_5_z_axis)
DataPropertyAssertion(:hasVector_I :part_c_5_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_c_5_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_c_5_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

// 5 end :PoseLocationIn
//*****************************************

ObjectPropertyAssertion(:hasSkuObject_Sku
                        :part_c_5 :stock_keeping_unit_part_c)
DataPropertyAssertion(:hasPart_SerialNumber :part_c_5
                      "c5"^^xsd:NMTOKEN)
// 4 end :Part
//*****************************************

ObjectPropertyAssertion(:hasPartsVessel_Part
                        :part_c_tray :part_c_6)

//*****************************************
// 4 start :Part part_c_6
Declaration(NamedIndividual(:part_c_6))
ClassAssertion(:Part :part_c_6)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :part_c_6 :part_c_6_pose)

//*****************************************
// 5 start :PoseLocationIn part_c_6_pose
Declaration(NamedIndividual(:part_c_6_pose))
ClassAssertion(:PoseLocationIn :part_c_6_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :part_c_6_pose :part_c_tray)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :part_c_6_pose :part_c_6_point)

//*****************************************
// 6 start :Point part_c_6_point
Declaration(NamedIndividual(:part_c_6_point))
ClassAssertion(:Point :part_c_6_point)
DataPropertyAssertion(:hasPoint_X :part_c_6_point
                      "0.330000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :part_c_6_point
                      "-0.216000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :part_c_6_point
                      "0.035000"^^xsd:decimal)
// 6 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :part_c_6_pose :part_c_6_x_axis)

//*****************************************
// 6 start :Vector part_c_6_x_axis
Declaration(NamedIndividual(:part_c_6_x_axis))
ClassAssertion(:Vector :part_c_6_x_axis)
DataPropertyAssertion(:hasVector_I :part_c_6_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_c_6_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_c_6_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :part_c_6_pose :part_c_6_z_axis)

//*****************************************
// 6 start :Vector part_c_6_z_axis
Declaration(NamedIndividual(:part_c_6_z_axis))
ClassAssertion(:Vector :part_c_6_z_axis)
DataPropertyAssertion(:hasVector_I :part_c_6_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_c_6_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_c_6_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

// 5 end :PoseLocationIn
//*****************************************

ObjectPropertyAssertion(:hasSkuObject_Sku
                        :part_c_6 :stock_keeping_unit_part_c)
DataPropertyAssertion(:hasPart_SerialNumber :part_c_6
                      "c6"^^xsd:NMTOKEN)
// 4 end :Part
//*****************************************

ObjectPropertyAssertion(:hasPartsVessel_Part
                        :part_c_tray :part_c_7)

//*****************************************
// 4 start :Part part_c_7
Declaration(NamedIndividual(:part_c_7))
ClassAssertion(:Part :part_c_7)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :part_c_7 :part_c_7_pose)

//*****************************************
// 5 start :PoseLocationIn part_c_7_pose
Declaration(NamedIndividual(:part_c_7_pose))
ClassAssertion(:PoseLocationIn :part_c_7_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :part_c_7_pose :part_c_tray)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :part_c_7_pose :part_c_7_point)

//*****************************************
// 6 start :Point part_c_7_point
Declaration(NamedIndividual(:part_c_7_point))
ClassAssertion(:Point :part_c_7_point)
DataPropertyAssertion(:hasPoint_X :part_c_7_point
                      "-0.110000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :part_c_7_point
                      "-0.216000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :part_c_7_point
                      "0.035000"^^xsd:decimal)
// 6 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :part_c_7_pose :part_c_7_x_axis)

//*****************************************
// 6 start :Vector part_c_7_x_axis
Declaration(NamedIndividual(:part_c_7_x_axis))
ClassAssertion(:Vector :part_c_7_x_axis)
DataPropertyAssertion(:hasVector_I :part_c_7_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_c_7_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_c_7_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :part_c_7_pose :part_c_7_z_axis)

//*****************************************
// 6 start :Vector part_c_7_z_axis
Declaration(NamedIndividual(:part_c_7_z_axis))
ClassAssertion(:Vector :part_c_7_z_axis)
DataPropertyAssertion(:hasVector_I :part_c_7_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_c_7_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_c_7_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

// 5 end :PoseLocationIn
//*****************************************

ObjectPropertyAssertion(:hasSkuObject_Sku
                        :part_c_7 :stock_keeping_unit_part_c)
DataPropertyAssertion(:hasPart_SerialNumber :part_c_7
                      "c7"^^xsd:NMTOKEN)
// 4 end :Part
//*****************************************

ObjectPropertyAssertion(:hasPartsVessel_Part
                        :part_c_tray :part_c_8)

//*****************************************
// 4 start :Part part_c_8
Declaration(NamedIndividual(:part_c_8))
ClassAssertion(:Part :part_c_8)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :part_c_8 :part_c_8_pose)

//*****************************************
// 5 start :PoseLocationIn part_c_8_pose
Declaration(NamedIndividual(:part_c_8_pose))
ClassAssertion(:PoseLocationIn :part_c_8_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :part_c_8_pose :part_c_tray)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :part_c_8_pose :part_c_8_point)

//*****************************************
// 6 start :Point part_c_8_point
Declaration(NamedIndividual(:part_c_8_point))
ClassAssertion(:Point :part_c_8_point)
DataPropertyAssertion(:hasPoint_X :part_c_8_point
                      "-0.330000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :part_c_8_point
                      "-0.216000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :part_c_8_point
                      "0.035000"^^xsd:decimal)
// 6 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :part_c_8_pose :part_c_8_x_axis)

//*****************************************
// 6 start :Vector part_c_8_x_axis
Declaration(NamedIndividual(:part_c_8_x_axis))
ClassAssertion(:Vector :part_c_8_x_axis)
DataPropertyAssertion(:hasVector_I :part_c_8_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_c_8_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_c_8_x_axis
                      "0.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :part_c_8_pose :part_c_8_z_axis)

//*****************************************
// 6 start :Vector part_c_8_z_axis
Declaration(NamedIndividual(:part_c_8_z_axis))
ClassAssertion(:Vector :part_c_8_z_axis)
DataPropertyAssertion(:hasVector_I :part_c_8_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_c_8_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_c_8_z_axis
                      "1.000000"^^xsd:decimal)
// 6 end :Vector
//*****************************************

// 5 end :PoseLocationIn
//*****************************************

ObjectPropertyAssertion(:hasSkuObject_Sku
                        :part_c_8 :stock_keeping_unit_part_c)
DataPropertyAssertion(:hasPart_SerialNumber :part_c_8
                      "c8"^^xsd:NMTOKEN)
// 4 end :Part
//*****************************************

// 3 end :PartsTray
//*****************************************

ObjectPropertyAssertion(:hasKittingWorkstation_Object
                        :kitting_workstation_1 :work_table_1)

//*****************************************
// 3 start :WorkTable work_table_1
Declaration(NamedIndividual(:work_table_1))
ClassAssertion(:WorkTable :work_table_1)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :work_table_1 :work_table_pose)

//*****************************************
// 4 start :PoseOnlyLocation work_table_pose
Declaration(NamedIndividual(:work_table_pose))
ClassAssertion(:PoseOnlyLocation :work_table_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :work_table_pose :kitting_workstation_1)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :work_table_pose :work_table_point)

//*****************************************
// 5 start :Point work_table_point
Declaration(NamedIndividual(:work_table_point))
ClassAssertion(:Point :work_table_point)
DataPropertyAssertion(:hasPoint_X :work_table_point
                      "3.000000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :work_table_point
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :work_table_point
                      "0.000000"^^xsd:decimal)
// 5 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :work_table_pose :work_table_x_axis)

//*****************************************
// 5 start :Vector work_table_x_axis
Declaration(NamedIndividual(:work_table_x_axis))
ClassAssertion(:Vector :work_table_x_axis)
DataPropertyAssertion(:hasVector_I :work_table_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :work_table_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :work_table_x_axis
                      "0.000000"^^xsd:decimal)
// 5 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :work_table_pose :work_table_z_axis)

//*****************************************
// 5 start :Vector work_table_z_axis
Declaration(NamedIndividual(:work_table_z_axis))
ClassAssertion(:Vector :work_table_z_axis)
DataPropertyAssertion(:hasVector_I :work_table_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :work_table_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :work_table_z_axis
                      "1.000000"^^xsd:decimal)
// 5 end :Vector
//*****************************************

// 4 end :PoseOnlyLocation
//*****************************************

ObjectPropertyAssertion(:hasNoSkuObject_InternalShape
                        :work_table_1 :shape_work_table)

//*****************************************
// 4 start :CylindricalShape shape_work_table
Declaration(NamedIndividual(:shape_work_table))
ClassAssertion(:CylindricalShape :shape_work_table)
DataPropertyAssertion(:hasShapeDesign_Description :shape_work_table
                      "Shape of the work table"^^xsd:string)
DataPropertyAssertion(:hasCylindricalShape_Diameter :shape_work_table
                      "1.600000"^^xsd:decimal)
DataPropertyAssertion(:hasCylindricalShape_Height :shape_work_table
                      "0.500000"^^xsd:decimal)
DataPropertyAssertion(:hasCylindricalShape_HasTop :shape_work_table
                      "true"^^xsd:boolean)
// 4 end :CylindricalShape
//*****************************************

// 3 end :WorkTable
//*****************************************

ObjectPropertyAssertion(:hasKittingWorkstation_Robot
                        :kitting_workstation_1 :robot_1)

//*****************************************
// 3 start :Robot robot_1
Declaration(NamedIndividual(:robot_1))
ClassAssertion(:Robot :robot_1)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :robot_1 :robot_pose)

//*****************************************
// 4 start :PoseOnlyLocation robot_pose
Declaration(NamedIndividual(:robot_pose))
ClassAssertion(:PoseOnlyLocation :robot_pose)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :robot_pose :kitting_workstation_1)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :robot_pose :robot_point)

//*****************************************
// 5 start :Point robot_point
Declaration(NamedIndividual(:robot_point))
ClassAssertion(:Point :robot_point)
DataPropertyAssertion(:hasPoint_X :robot_point
                      "3.000000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :robot_point
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :robot_point
                      "2.000000"^^xsd:decimal)
// 5 end :Point
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :robot_pose :robot_x_axis)

//*****************************************
// 5 start :Vector robot_x_axis
Declaration(NamedIndividual(:robot_x_axis))
ClassAssertion(:Vector :robot_x_axis)
DataPropertyAssertion(:hasVector_I :robot_x_axis
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :robot_x_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :robot_x_axis
                      "0.000000"^^xsd:decimal)
// 5 end :Vector
//*****************************************

ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :robot_pose :robot_z_axis)

//*****************************************
// 5 start :Vector robot_z_axis
Declaration(NamedIndividual(:robot_z_axis))
ClassAssertion(:Vector :robot_z_axis)
DataPropertyAssertion(:hasVector_I :robot_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :robot_z_axis
                      "0.000000"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :robot_z_axis
                      "1.000000"^^xsd:decimal)
// 5 end :Vector
//*****************************************

// 4 end :PoseOnlyLocation
//*****************************************

DataPropertyAssertion(:hasRobot_Description :robot_1
                      "this is the robot"^^xsd:string)
ObjectPropertyAssertion(:hasRobot_EndEffector
                        :robot_1 :tray_gripper)

//*****************************************
// 4 start :VacuumEffectorSingleCup tray_gripper
Declaration(NamedIndividual(:tray_gripper))
ClassAssertion(:VacuumEffectorSingleCup :tray_gripper)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :tray_gripper :relative_location_on_1)

//*****************************************
// 5 start :RelativeLocationOn relative_location_on_1
Declaration(NamedIndividual(:relative_location_on_1))
ClassAssertion(:RelativeLocationOn :relative_location_on_1)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :relative_location_on_1 :robot_1)
DataPropertyAssertion(:hasRelativeLocation_Description :relative_location_on_1
                      "The tray_gripper is on robot_1"^^xsd:string)
// 5 end :RelativeLocationOn
//*****************************************

DataPropertyAssertion(:hasEndEffector_Description :tray_gripper
                      "large single cup vacuum effector"^^xsd:string)
DataPropertyAssertion(:hasEndEffector_Weight :tray_gripper
                      "0.040000"^^xsd:decimal)
DataPropertyAssertion(:hasEndEffector_MaximumLoadWeight :tray_gripper
                      "0.500000"^^xsd:decimal)
DataPropertyAssertion(:hasVacuumEffector_CupDiameter :tray_gripper
                      "0.040000"^^xsd:decimal)
DataPropertyAssertion(:hasVacuumEffector_Length :tray_gripper
                      "0.100000"^^xsd:decimal)
// 4 end :VacuumEffectorSingleCup
//*****************************************

DataPropertyAssertion(:hasRobot_MaximumLoadWeight :robot_1
                      "7.000000"^^xsd:decimal)
ObjectPropertyAssertion(:hasRobot_WorkVolume
                        :robot_1 :box_volume_1)

//*****************************************
// 4 start :BoxVolume box_volume_1
Declaration(NamedIndividual(:box_volume_1))
ClassAssertion(:BoxVolume :box_volume_1)
ObjectPropertyAssertion(:hasBoxVolume_MaximumPoint
                        :box_volume_1 :point_max)

//*****************************************
// 5 start :Point point_max
Declaration(NamedIndividual(:point_max))
ClassAssertion(:Point :point_max)
DataPropertyAssertion(:hasPoint_X :point_max
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :point_max
                      "1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :point_max
                      "2.000000"^^xsd:decimal)
// 5 end :Point
//*****************************************

ObjectPropertyAssertion(:hasBoxVolume_MinimumPoint
                        :box_volume_1 :point_min)

//*****************************************
// 5 start :Point point_min
Declaration(NamedIndividual(:point_min))
ClassAssertion(:Point :point_min)
DataPropertyAssertion(:hasPoint_X :point_min
                      "-1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :point_min
                      "-1.000000"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :point_min
                      "0.000000"^^xsd:decimal)
// 5 end :Point
//*****************************************

// 4 end :BoxVolume
//*****************************************

// 3 end :Robot
//*****************************************

ObjectPropertyAssertion(:hasKittingWorkstation_Sku
                        :kitting_workstation_1 :stock_keeping_unit_part_a)

//*****************************************
// 3 start :StockKeepingUnit stock_keeping_unit_part_a
Declaration(NamedIndividual(:stock_keeping_unit_part_a))
ClassAssertion(:StockKeepingUnit :stock_keeping_unit_part_a)
DataPropertyAssertion(:hasStockKeepingUnit_Description :stock_keeping_unit_part_a
                      "SKU for Part A"^^xsd:string)
ObjectPropertyAssertion(:hasStockKeepingUnit_InternalShape
                        :stock_keeping_unit_part_a :shape_part_a)

//*****************************************
// 4 start :BoxyShape shape_part_a
Declaration(NamedIndividual(:shape_part_a))
ClassAssertion(:BoxyShape :shape_part_a)
DataPropertyAssertion(:hasShapeDesign_Description :shape_part_a
                      "Shape of PartA"^^xsd:string)
DataPropertyAssertion(:hasBoxyShape_Length :shape_part_a
                      "0.100000"^^xsd:decimal)
DataPropertyAssertion(:hasBoxyShape_Width :shape_part_a
                      "0.080000"^^xsd:decimal)
DataPropertyAssertion(:hasBoxyShape_Height :shape_part_a
                      "0.150000"^^xsd:decimal)
DataPropertyAssertion(:hasBoxyShape_HasTop :shape_part_a
                      "true"^^xsd:boolean)
// 4 end :BoxyShape
//*****************************************

DataPropertyAssertion(:hasStockKeepingUnit_Weight :stock_keeping_unit_part_a
                      "0.180000"^^xsd:decimal)
ObjectPropertyAssertion(:hasStockKeepingUnit_EndEffector
                        :stock_keeping_unit_part_a :part_gripper)
// 3 end :StockKeepingUnit
//*****************************************

ObjectPropertyAssertion(:hasKittingWorkstation_Sku
                        :kitting_workstation_1 :stock_keeping_unit_part_b)

//*****************************************
// 3 start :StockKeepingUnit stock_keeping_unit_part_b
Declaration(NamedIndividual(:stock_keeping_unit_part_b))
ClassAssertion(:StockKeepingUnit :stock_keeping_unit_part_b)
DataPropertyAssertion(:hasStockKeepingUnit_Description :stock_keeping_unit_part_b
                      "SKU for Part B"^^xsd:string)
ObjectPropertyAssertion(:hasStockKeepingUnit_InternalShape
                        :stock_keeping_unit_part_b :shape_part_b)

//*****************************************
// 4 start :BoxyShape shape_part_b
Declaration(NamedIndividual(:shape_part_b))
ClassAssertion(:BoxyShape :shape_part_b)
DataPropertyAssertion(:hasShapeDesign_Description :shape_part_b
                      "Shape of PartB"^^xsd:string)
DataPropertyAssertion(:hasBoxyShape_Length :shape_part_b
                      "0.120000"^^xsd:decimal)
DataPropertyAssertion(:hasBoxyShape_Width :shape_part_b
                      "0.080000"^^xsd:decimal)
DataPropertyAssertion(:hasBoxyShape_Height :shape_part_b
                      "0.150000"^^xsd:decimal)
DataPropertyAssertion(:hasBoxyShape_HasTop :shape_part_b
                      "true"^^xsd:boolean)
// 4 end :BoxyShape
//*****************************************

DataPropertyAssertion(:hasStockKeepingUnit_Weight :stock_keeping_unit_part_b
                      "0.180000"^^xsd:decimal)
ObjectPropertyAssertion(:hasStockKeepingUnit_EndEffector
                        :stock_keeping_unit_part_b :part_gripper)
// 3 end :StockKeepingUnit
//*****************************************

ObjectPropertyAssertion(:hasKittingWorkstation_Sku
                        :kitting_workstation_1 :stock_keeping_unit_part_c)

//*****************************************
// 3 start :StockKeepingUnit stock_keeping_unit_part_c
Declaration(NamedIndividual(:stock_keeping_unit_part_c))
ClassAssertion(:StockKeepingUnit :stock_keeping_unit_part_c)
DataPropertyAssertion(:hasStockKeepingUnit_Description :stock_keeping_unit_part_c
                      "SKU for Part C"^^xsd:string)
ObjectPropertyAssertion(:hasStockKeepingUnit_InternalShape
                        :stock_keeping_unit_part_c :shape_part_c)

//*****************************************
// 4 start :BoxyShape shape_part_c
Declaration(NamedIndividual(:shape_part_c))
ClassAssertion(:BoxyShape :shape_part_c)
DataPropertyAssertion(:hasShapeDesign_Description :shape_part_c
                      "Shape of PartC"^^xsd:string)
DataPropertyAssertion(:hasBoxyShape_Length :shape_part_c
                      "0.150000"^^xsd:decimal)
DataPropertyAssertion(:hasBoxyShape_Width :shape_part_c
                      "0.080000"^^xsd:decimal)
DataPropertyAssertion(:hasBoxyShape_Height :shape_part_c
                      "0.150000"^^xsd:decimal)
DataPropertyAssertion(:hasBoxyShape_HasTop :shape_part_c
                      "true"^^xsd:boolean)
// 4 end :BoxyShape
//*****************************************

DataPropertyAssertion(:hasStockKeepingUnit_Weight :stock_keeping_unit_part_c
                      "0.180000"^^xsd:decimal)
ObjectPropertyAssertion(:hasStockKeepingUnit_EndEffector
                        :stock_keeping_unit_part_c :part_gripper)
// 3 end :StockKeepingUnit
//*****************************************

ObjectPropertyAssertion(:hasKittingWorkstation_Sku
                        :kitting_workstation_1 :stock_keeping_unit_kit_tray)

//*****************************************
// 3 start :StockKeepingUnit stock_keeping_unit_kit_tray
Declaration(NamedIndividual(:stock_keeping_unit_kit_tray))
ClassAssertion(:StockKeepingUnit :stock_keeping_unit_kit_tray)
DataPropertyAssertion(:hasStockKeepingUnit_Description :stock_keeping_unit_kit_tray
                      "SKU for KitTrays"^^xsd:string)
ObjectPropertyAssertion(:hasStockKeepingUnit_InternalShape
                        :stock_keeping_unit_kit_tray :shape_kit_tray)

//*****************************************
// 4 start :BoxyShape shape_kit_tray
Declaration(NamedIndividual(:shape_kit_tray))
ClassAssertion(:BoxyShape :shape_kit_tray)
DataPropertyAssertion(:hasShapeDesign_Description :shape_kit_tray
                      "Shape of KitTrays"^^xsd:string)
DataPropertyAssertion(:hasBoxyShape_Length :shape_kit_tray
                      "0.500000"^^xsd:decimal)
DataPropertyAssertion(:hasBoxyShape_Width :shape_kit_tray
                      "0.300000"^^xsd:decimal)
DataPropertyAssertion(:hasBoxyShape_Height :shape_kit_tray
                      "0.150000"^^xsd:decimal)
DataPropertyAssertion(:hasBoxyShape_HasTop :shape_kit_tray
                      "false"^^xsd:boolean)
// 4 end :BoxyShape
//*****************************************

DataPropertyAssertion(:hasStockKeepingUnit_Weight :stock_keeping_unit_kit_tray
                      "0.200000"^^xsd:decimal)
ObjectPropertyAssertion(:hasStockKeepingUnit_EndEffector
                        :stock_keeping_unit_kit_tray :tray_gripper)
// 3 end :StockKeepingUnit
//*****************************************

ObjectPropertyAssertion(:hasKittingWorkstation_Sku
                        :kitting_workstation_1 :stock_keeping_unit_kit_box)

//*****************************************
// 3 start :StockKeepingUnit stock_keeping_unit_kit_box
Declaration(NamedIndividual(:stock_keeping_unit_kit_box))
ClassAssertion(:StockKeepingUnit :stock_keeping_unit_kit_box)
DataPropertyAssertion(:hasStockKeepingUnit_Description :stock_keeping_unit_kit_box
                      "SKU for Boxes for Kits and KitTrays"^^xsd:string)
ObjectPropertyAssertion(:hasStockKeepingUnit_InternalShape
                        :stock_keeping_unit_kit_box :shape_kit_box)

//*****************************************
// 4 start :BoxyShape shape_kit_box
Declaration(NamedIndividual(:shape_kit_box))
ClassAssertion(:BoxyShape :shape_kit_box)
DataPropertyAssertion(:hasShapeDesign_Description :shape_kit_box
                      "Shape of boxes to hold kits and kit trays"^^xsd:string)
DataPropertyAssertion(:hasBoxyShape_Length :shape_kit_box
                      "0.900000"^^xsd:decimal)
DataPropertyAssertion(:hasBoxyShape_Width :shape_kit_box
                      "0.700000"^^xsd:decimal)
DataPropertyAssertion(:hasBoxyShape_Height :shape_kit_box
                      "0.800000"^^xsd:decimal)
DataPropertyAssertion(:hasBoxyShape_HasTop :shape_kit_box
                      "false"^^xsd:boolean)
// 4 end :BoxyShape
//*****************************************

DataPropertyAssertion(:hasStockKeepingUnit_Weight :stock_keeping_unit_kit_box
                      "1.200000"^^xsd:decimal)
// 3 end :StockKeepingUnit
//*****************************************

ObjectPropertyAssertion(:hasKittingWorkstation_Sku
                        :kitting_workstation_1 :stock_keeping_unit_parts_tray)

//*****************************************
// 3 start :StockKeepingUnit stock_keeping_unit_parts_tray
Declaration(NamedIndividual(:stock_keeping_unit_parts_tray))
ClassAssertion(:StockKeepingUnit :stock_keeping_unit_parts_tray)
DataPropertyAssertion(:hasStockKeepingUnit_Description :stock_keeping_unit_parts_tray
                      "SKU for PartsTrays"^^xsd:string)
ObjectPropertyAssertion(:hasStockKeepingUnit_InternalShape
                        :stock_keeping_unit_parts_tray :shape_parts_tray)

//*****************************************
// 4 start :BoxyShape shape_parts_tray
Declaration(NamedIndividual(:shape_parts_tray))
ClassAssertion(:BoxyShape :shape_parts_tray)
DataPropertyAssertion(:hasShapeDesign_Description :shape_parts_tray
                      "Shape of PartsTrays"^^xsd:string)
DataPropertyAssertion(:hasBoxyShape_Length :shape_parts_tray
                      "0.600000"^^xsd:decimal)
DataPropertyAssertion(:hasBoxyShape_Width :shape_parts_tray
                      "0.300000"^^xsd:decimal)
DataPropertyAssertion(:hasBoxyShape_Height :shape_parts_tray
                      "0.200000"^^xsd:decimal)
DataPropertyAssertion(:hasBoxyShape_HasTop :shape_parts_tray
                      "false"^^xsd:boolean)
// 4 end :BoxyShape
//*****************************************

DataPropertyAssertion(:hasStockKeepingUnit_Weight :stock_keeping_unit_parts_tray
                      "0.200000"^^xsd:decimal)
ObjectPropertyAssertion(:hasStockKeepingUnit_EndEffector
                        :stock_keeping_unit_parts_tray :tray_gripper)
// 3 end :StockKeepingUnit
//*****************************************

DataPropertyAssertion(:hasKittingWorkstation_WeightUnit :kitting_workstation_1
                      "kilogram"^^xsd:NMTOKEN)
// 2 end :KittingWorkstation
//*****************************************

ObjectPropertyAssertion(soap:hasSOAP_Domain
                        :soap :kitting-domain)

//*****************************************
// 2 start soap:Domain kitting-domain
Declaration(NamedIndividual(:kitting-domain))
ClassAssertion(soap:Domain :kitting-domain)
DataPropertyAssertion(soap:hasDomain_Requirement :kitting-domain
                      "strips"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasDomain_Requirement :kitting-domain
                      "typing"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasDomain_Requirement :kitting-domain
                      "action-costs"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasDomain_Requirement :kitting-domain
                      "fluents"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasDomain_Variable :kitting-domain
                      "EndEffector"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasDomain_Variable :kitting-domain
                      "EndEffectorHolder"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasDomain_Variable :kitting-domain
                      "Kit"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasDomain_Variable :kitting-domain
                      "KitTray"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasDomain_Variable :kitting-domain
                      "LargeBoxWithEmptyKitTrays"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasDomain_Variable :kitting-domain
                      "LargeBoxWithKits"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasDomain_Variable :kitting-domain
                      "Part"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasDomain_Variable :kitting-domain
                      "PartsTray"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasDomain_Variable :kitting-domain
                      "EndEffectorChangingStation"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasDomain_Variable :kitting-domain
                      "Robot"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasDomain_Variable :kitting-domain
                      "WorkTable"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasDomain_PositivePredicateSet
                        :kitting-domain :positive_predicate_set)

//*****************************************
// 3 start soap:PositivePredicateSet positive_predicate_set
Declaration(NamedIndividual(:positive_predicate_set))
ClassAssertion(soap:PositivePredicateSet :positive_predicate_set)
ObjectPropertyAssertion(soap:hasPositivePredicateSet_EEffLocEEffHolder
                        :positive_predicate_set :endeffector-location-endeffectorholder)

//*****************************************
// 4 start soap:EEffLocEEffHolder endeffector-location-endeffectorholder
Declaration(NamedIndividual(:endeffector-location-endeffectorholder))
ClassAssertion(soap:EEffLocEEffHolder :endeffector-location-endeffectorholder)
DataPropertyAssertion(soap:hasPositivePredicate_Description :endeffector-location-endeffectorholder
                      "TRUE iff ?endeffector is in ?endeffectorholder"^^xsd:string)
DataPropertyAssertion(soap:hasPositivePredicate_ReferenceParameter :endeffector-location-endeffectorholder
                      "EndEffector"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPositivePredicate_TargetParameter :endeffector-location-endeffectorholder
                      "EndEffectorHolder"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasEEffLocEEffHolder_GroupEEffLocEEffHolder
                        :endeffector-location-endeffectorholder :group_eff_loc_effholder)

//*****************************************
// 5 start soap:GroupEEffLocEEffHolder group_eff_loc_effholder
Declaration(NamedIndividual(:group_eff_loc_effholder))
ClassAssertion(soap:GroupEEffLocEEffHolder :group_eff_loc_effholder)
ObjectPropertyAssertion(soap:hasGroupEEffLocEEffHolder_SubGroup_1
                        :group_eff_loc_effholder :group_eff_loc_effholder_1)

//*****************************************
// 6 start soap:SubGroupEEffectorLocEEffectorHolder_1 group_eff_loc_effholder_1
Declaration(NamedIndividual(:group_eff_loc_effholder_1))
ClassAssertion(soap:SubGroupEEffectorLocEEffectorHolder_1 :group_eff_loc_effholder_1)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :group_eff_loc_effholder_1
                      "EndEffector"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :group_eff_loc_effholder_1
                      "EndEffectorHolder"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasSubGroupEEffectorLocEEffectorHolder_1_StateRelation
                        :group_eff_loc_effholder_1 :PartiallyIn)
// 6 end soap:SubGroupEEffectorLocEEffectorHolder_1
//*****************************************

ObjectPropertyAssertion(soap:hasGroupEEffLocEEffHolder_SubGroup_2
                        :group_eff_loc_effholder :group_eff_loc_effholder_2)

//*****************************************
// 6 start soap:SubGroupEEffectorLocEEffectorHolder_2 group_eff_loc_effholder_2
Declaration(NamedIndividual(:group_eff_loc_effholder_2))
ClassAssertion(soap:SubGroupEEffectorLocEEffectorHolder_2 :group_eff_loc_effholder_2)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :group_eff_loc_effholder_2
                      "EndEffector"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :group_eff_loc_effholder_2
                      "EndEffectorHolder"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasSubGroupEEffectorLocEEffectorHolder_2_StateRelation
                        :group_eff_loc_effholder_2 :ContainedIn)
// 6 end soap:SubGroupEEffectorLocEEffectorHolder_2
//*****************************************

// 5 end soap:GroupEEffLocEEffHolder
//*****************************************

// 4 end soap:EEffLocEEffHolder
//*****************************************

ObjectPropertyAssertion(soap:hasPositivePredicateSet_RobotEmpty
                        :positive_predicate_set :robot-empty)

//*****************************************
// 4 start soap:RobotEmpty robot-empty
Declaration(NamedIndividual(:robot-empty))
ClassAssertion(soap:RobotEmpty :robot-empty)
DataPropertyAssertion(soap:hasPositivePredicate_Description :robot-empty
                      ";TRUE iff ?robot is not holding anything"^^xsd:string)
DataPropertyAssertion(soap:hasPositivePredicate_ReferenceParameter :robot-empty
                      "Robot"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasRobotEmpty_GroupRobotEmpty
                        :robot-empty :group_robot_empty)

//*****************************************
// 5 start soap:GroupRobotEmpty group_robot_empty
Declaration(NamedIndividual(:group_robot_empty))
ClassAssertion(soap:GroupRobotEmpty :group_robot_empty)
ObjectPropertyAssertion(soap:hasGroupRobotEmpty_SubGroup_1
                        :group_robot_empty :subgroup_robot_empty_1)

//*****************************************
// 6 start soap:SubGroupRobotEmpty_1 subgroup_robot_empty_1
Declaration(NamedIndividual(:subgroup_robot_empty_1))
ClassAssertion(soap:SubGroupRobotEmpty_1 :subgroup_robot_empty_1)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :subgroup_robot_empty_1
                      "EndEffector"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :subgroup_robot_empty_1
                      "Robot"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasSubGroupRobotEmpty_1_StateRelation
                        :subgroup_robot_empty_1 :InContactWith)
// 6 end soap:SubGroupRobotEmpty_1
//*****************************************

ObjectPropertyAssertion(soap:hasGroupRobotEmpty_SubGroup_2
                        :group_robot_empty :subgroup_robot_empty_2)

//*****************************************
// 6 start soap:SubGroupRobotEmpty_2 subgroup_robot_empty_2
Declaration(NamedIndividual(:subgroup_robot_empty_2))
ClassAssertion(soap:SubGroupRobotEmpty_2 :subgroup_robot_empty_2)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :subgroup_robot_empty_2
                      "SolidObject"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :subgroup_robot_empty_2
                      "EndEffector"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasSubGroupRobotEmpty_2_StateRelation
                        :subgroup_robot_empty_2 :NotUnderWithContact)
// 6 end soap:SubGroupRobotEmpty_2
//*****************************************

// 5 end soap:GroupRobotEmpty
//*****************************************

// 4 end soap:RobotEmpty
//*****************************************

ObjectPropertyAssertion(soap:hasPositivePredicateSet_EEffLocRobot
                        :positive_predicate_set :endeffector-location-robot)

//*****************************************
// 4 start soap:EEffLocRobot endeffector-location-robot
Declaration(NamedIndividual(:endeffector-location-robot))
ClassAssertion(soap:EEffLocRobot :endeffector-location-robot)
DataPropertyAssertion(soap:hasPositivePredicate_Description :endeffector-location-robot
                      ";TRUE iff ?endeffector is in ?endeffectorholder"^^xsd:string)
DataPropertyAssertion(soap:hasPositivePredicate_ReferenceParameter :endeffector-location-robot
                      "EndEffector"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPositivePredicate_TargetParameter :endeffector-location-robot
                      "Robot"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasEEffLocRobot_GroupEEffLocRobot
                        :endeffector-location-robot :group_endeffector_location_robot)

//*****************************************
// 5 start soap:GroupEEffLocRobot group_endeffector_location_robot
Declaration(NamedIndividual(:group_endeffector_location_robot))
ClassAssertion(soap:GroupEEffLocRobot :group_endeffector_location_robot)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :group_endeffector_location_robot
                      "EndEffector"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :group_endeffector_location_robot
                      "Robot"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasGroupEEffLocRobot_StateRelation
                        :group_endeffector_location_robot :InContactWith)
// 5 end soap:GroupEEffLocRobot
//*****************************************

// 4 end soap:EEffLocRobot
//*****************************************

ObjectPropertyAssertion(soap:hasPositivePredicateSet_RobotWithEEff
                        :positive_predicate_set :robot-with-endeffector)

//*****************************************
// 4 start soap:RobotWithEEff robot-with-endeffector
Declaration(NamedIndividual(:robot-with-endeffector))
ClassAssertion(soap:RobotWithEEff :robot-with-endeffector)
DataPropertyAssertion(soap:hasPositivePredicate_Description :robot-with-endeffector
                      ";TRUE iff ?robot is equipped with ?endeffector"^^xsd:string)
DataPropertyAssertion(soap:hasPositivePredicate_ReferenceParameter :robot-with-endeffector
                      "Robot"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPositivePredicate_TargetParameter :robot-with-endeffector
                      "EndEffector"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasRobotWithEEff_GroupRobotWithEEff
                        :robot-with-endeffector :group_robot_with_endeffector)

//*****************************************
// 5 start soap:GroupRobotWithEEff group_robot_with_endeffector
Declaration(NamedIndividual(:group_robot_with_endeffector))
ClassAssertion(soap:GroupRobotWithEEff :group_robot_with_endeffector)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :group_robot_with_endeffector
                      "EndEffector"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :group_robot_with_endeffector
                      "Robot"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasGroupRobotWithEEff_StateRelation
                        :group_robot_with_endeffector :InContactWith)
// 5 end soap:GroupRobotWithEEff
//*****************************************

// 4 end soap:RobotWithEEff
//*****************************************

ObjectPropertyAssertion(soap:hasPositivePredicateSet_RobotWithNoEEff
                        :positive_predicate_set :robot-with-no-endeffector)

//*****************************************
// 4 start soap:RobotWithNoEEff robot-with-no-endeffector
Declaration(NamedIndividual(:robot-with-no-endeffector))
ClassAssertion(soap:RobotWithNoEEff :robot-with-no-endeffector)
DataPropertyAssertion(soap:hasPositivePredicate_Description :robot-with-no-endeffector
                      ";TRUE iff ?robot is equipped with ?endeffector"^^xsd:string)
DataPropertyAssertion(soap:hasPositivePredicate_ReferenceParameter :robot-with-no-endeffector
                      "Robot"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasRobotWithNoEEff_GroupRobotWithNoEEff
                        :robot-with-no-endeffector :group_robot_with_no_endeffector)

//*****************************************
// 5 start soap:GroupRobotWithNoEEff group_robot_with_no_endeffector
Declaration(NamedIndividual(:group_robot_with_no_endeffector))
ClassAssertion(soap:GroupRobotWithNoEEff :group_robot_with_no_endeffector)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :group_robot_with_no_endeffector
                      "EndEffector"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :group_robot_with_no_endeffector
                      "Robot"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasGroupRobotWithNoEEff_StateRelation
                        :group_robot_with_no_endeffector :NotInContactWith)
// 5 end soap:GroupRobotWithNoEEff
//*****************************************

// 4 end soap:RobotWithNoEEff
//*****************************************

ObjectPropertyAssertion(soap:hasPositivePredicateSet_EEffHolderLocChStation
                        :positive_predicate_set :endeffectorholder-location-changing-station)

//*****************************************
// 4 start soap:EEffHolderLocChStation endeffectorholder-location-changing-station
Declaration(NamedIndividual(:endeffectorholder-location-changing-station))
ClassAssertion(soap:EEffHolderLocChStation :endeffectorholder-location-changing-station)
DataPropertyAssertion(soap:hasPositivePredicate_Description :endeffectorholder-location-changing-station
                      ";TRUE iff ?endeffectorholder is in ?endeffectorchangingstation"^^xsd:string)
DataPropertyAssertion(soap:hasPositivePredicate_ReferenceParameter :endeffectorholder-location-changing-station
                      "EndEffectorHolder"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPositivePredicate_TargetParameter :endeffectorholder-location-changing-station
                      "EndEffectorChangingStation"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasEEffHolderLocChStation_GroupEEffHolderLocChStation
                        :endeffectorholder-location-changing-station :group_endeffectorholder-location-changing-station)

//*****************************************
// 5 start soap:GroupEEffHolderLocChStation group_endeffectorholder-location-changing-station
Declaration(NamedIndividual(:group_endeffectorholder-location-changing-station))
ClassAssertion(soap:GroupEEffHolderLocChStation :group_endeffectorholder-location-changing-station)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :group_endeffectorholder-location-changing-station
                      "EndEffectorHolder"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :group_endeffectorholder-location-changing-station
                      "EndEffectorChangingStation"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasGroupEEffHolderLocChStation_StateRelation
                        :group_endeffectorholder-location-changing-station :NotInContactWith)
// 5 end soap:GroupEEffHolderLocChStation
//*****************************************

// 4 end soap:EEffHolderLocChStation
//*****************************************

ObjectPropertyAssertion(soap:hasPositivePredicateSet_EEffHolderHoldsEEff
                        :positive_predicate_set :endeffectorholder-holds-endeffector)

//*****************************************
// 4 start soap:EEffHolderHoldsEEff endeffectorholder-holds-endeffector
Declaration(NamedIndividual(:endeffectorholder-holds-endeffector))
ClassAssertion(soap:EEffHolderHoldsEEff :endeffectorholder-holds-endeffector)
DataPropertyAssertion(soap:hasPositivePredicate_Description :endeffectorholder-holds-endeffector
                      ";TRUE iff ?endeffectorholder is holding endeffecor"^^xsd:string)
DataPropertyAssertion(soap:hasPositivePredicate_ReferenceParameter :endeffectorholder-holds-endeffector
                      "EndEffectorHolder"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPositivePredicate_TargetParameter :endeffectorholder-holds-endeffector
                      "EndEffector"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasEEffHolderHoldsEEff_GroupEEffHolderHoldsEEff
                        :endeffectorholder-holds-endeffector :group_endeffectorholder-holds-endeffector)

//*****************************************
// 5 start soap:GroupEEffHolderHoldsEEff group_endeffectorholder-holds-endeffector
Declaration(NamedIndividual(:group_endeffectorholder-holds-endeffector))
ClassAssertion(soap:GroupEEffHolderHoldsEEff :group_endeffectorholder-holds-endeffector)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :group_endeffectorholder-holds-endeffector
                      "EndEffector"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :group_endeffectorholder-holds-endeffector
                      "EndEffectorHolder"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasGroupEEffHolderHoldsEEff_StateRelation
                        :group_endeffectorholder-holds-endeffector :ContainedIn)
// 5 end soap:GroupEEffHolderHoldsEEff
//*****************************************

// 4 end soap:EEffHolderHoldsEEff
//*****************************************

ObjectPropertyAssertion(soap:hasPositivePredicateSet_ChStationHasEEffHolder
                        :positive_predicate_set :endeffectorchangingstation-has-endeffectorholder)

//*****************************************
// 4 start soap:ChStationHasEEffHolder endeffectorchangingstation-has-endeffectorholder
Declaration(NamedIndividual(:endeffectorchangingstation-has-endeffectorholder))
ClassAssertion(soap:ChStationHasEEffHolder :endeffectorchangingstation-has-endeffectorholder)
DataPropertyAssertion(soap:hasPositivePredicate_Description :endeffectorchangingstation-has-endeffectorholder
                      ";TRUE iff ?endeffectorholder is holding endeffecor"^^xsd:string)
DataPropertyAssertion(soap:hasPositivePredicate_ReferenceParameter :endeffectorchangingstation-has-endeffectorholder
                      "EndEffectorChangingStation"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPositivePredicate_TargetParameter :endeffectorchangingstation-has-endeffectorholder
                      "EndEffectorHolder"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasChStationHasEEffHolder_GroupChStationHasEEffHolder
                        :endeffectorchangingstation-has-endeffectorholder :group_endeffectorchangingstation-has-endeffectorholder)

//*****************************************
// 5 start soap:GroupChStationHasEEffHolder group_endeffectorchangingstation-has-endeffectorholder
Declaration(NamedIndividual(:group_endeffectorchangingstation-has-endeffectorholder))
ClassAssertion(soap:GroupChStationHasEEffHolder :group_endeffectorchangingstation-has-endeffectorholder)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :group_endeffectorchangingstation-has-endeffectorholder
                      "EndEffectorChangingStation"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :group_endeffectorchangingstation-has-endeffectorholder
                      "EndEffectorHolder"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasGroupChStationHasEEffHolder_StateRelation
                        :group_endeffectorchangingstation-has-endeffectorholder :InContactWith)
// 5 end soap:GroupChStationHasEEffHolder
//*****************************************

// 4 end soap:ChStationHasEEffHolder
//*****************************************

ObjectPropertyAssertion(soap:hasPositivePredicateSet_EEffHolderEmpty
                        :positive_predicate_set :endeffectorholder-empty)

//*****************************************
// 4 start soap:EEffHolderEmpty endeffectorholder-empty
Declaration(NamedIndividual(:endeffectorholder-empty))
ClassAssertion(soap:EEffHolderEmpty :endeffectorholder-empty)
DataPropertyAssertion(soap:hasPositivePredicate_Description :endeffectorholder-empty
                      ";TRUE iff ?endeffectorholder is empty (?endeffectorholder does not hold an endeffector)"^^xsd:string)
DataPropertyAssertion(soap:hasPositivePredicate_ReferenceParameter :endeffectorholder-empty
                      "EndEffectorHolder"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasEEffHolderEmpty_GroupEEffHolderEmpty
                        :endeffectorholder-empty :group_endeffectorholder-empty)

//*****************************************
// 5 start soap:GroupEEffHolderEmpty group_endeffectorholder-empty
Declaration(NamedIndividual(:group_endeffectorholder-empty))
ClassAssertion(soap:GroupEEffHolderEmpty :group_endeffectorholder-empty)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :group_endeffectorholder-empty
                      "EndEffector"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :group_endeffectorholder-empty
                      "EndEffectorHolder"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasGroupEEffHolderEmpty_StateRelation
                        :group_endeffectorholder-empty :NotContainedIn)
// 5 end soap:GroupEEffHolderEmpty
//*****************************************

// 4 end soap:EEffHolderEmpty
//*****************************************

ObjectPropertyAssertion(soap:hasPositivePredicateSet_OnWorktableKitTray
                        :positive_predicate_set :on-worktable-kittray)

//*****************************************
// 4 start soap:OnWorktableKitTray on-worktable-kittray
Declaration(NamedIndividual(:on-worktable-kittray))
ClassAssertion(soap:OnWorktableKitTray :on-worktable-kittray)
DataPropertyAssertion(soap:hasPositivePredicate_Description :on-worktable-kittray
                      ";TRUE iff ?kittray is on ?worktable"^^xsd:string)
DataPropertyAssertion(soap:hasPositivePredicate_ReferenceParameter :on-worktable-kittray
                      "WorkTable"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPositivePredicate_TargetParameter :on-worktable-kittray
                      "KitTray"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasOnWorktableKitTray_GroupOnWorktableKitTray
                        :on-worktable-kittray :group_on-worktable-kittray)

//*****************************************
// 5 start soap:GroupOnWorktableKitTray group_on-worktable-kittray
Declaration(NamedIndividual(:group_on-worktable-kittray))
ClassAssertion(soap:GroupOnWorktableKitTray :group_on-worktable-kittray)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :group_on-worktable-kittray
                      "WorkTable"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :group_on-worktable-kittray
                      "KitTray"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasGroupOnWorktableKitTray_StateRelation
                        :group_on-worktable-kittray :UnderWithContact)
// 5 end soap:GroupOnWorktableKitTray
//*****************************************

// 4 end soap:OnWorktableKitTray
//*****************************************

ObjectPropertyAssertion(soap:hasPositivePredicateSet_OnWorktableKit
                        :positive_predicate_set :on-worktable-kit)

//*****************************************
// 4 start soap:OnWorktableKit on-worktable-kit
Declaration(NamedIndividual(:on-worktable-kit))
ClassAssertion(soap:OnWorktableKit :on-worktable-kit)
DataPropertyAssertion(soap:hasPositivePredicate_Description :on-worktable-kit
                      ";TRUE iff ?kit is on ?worktable"^^xsd:string)
DataPropertyAssertion(soap:hasPositivePredicate_ReferenceParameter :on-worktable-kit
                      "WorkTable"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPositivePredicate_TargetParameter :on-worktable-kit
                      "Kit"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasOnWorktableKit_GroupOnWorktableKit
                        :on-worktable-kit :group_on-worktable-kit)

//*****************************************
// 5 start soap:GroupOnWorktableKit group_on-worktable-kit
Declaration(NamedIndividual(:group_on-worktable-kit))
ClassAssertion(soap:GroupOnWorktableKit :group_on-worktable-kit)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :group_on-worktable-kit
                      "WorkTable"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :group_on-worktable-kit
                      "Kit"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasGroupOnWorktableKit_StateRelation
                        :group_on-worktable-kit :UnderWithContact)
// 5 end soap:GroupOnWorktableKit
//*****************************************

// 4 end soap:OnWorktableKit
//*****************************************

ObjectPropertyAssertion(soap:hasPositivePredicateSet_KitLocWorkTable
                        :positive_predicate_set :kit-location-worktable)

//*****************************************
// 4 start soap:KitLocWorktable kit-location-worktable
Declaration(NamedIndividual(:kit-location-worktable))
ClassAssertion(soap:KitLocWorktable :kit-location-worktable)
DataPropertyAssertion(soap:hasPositivePredicate_Description :kit-location-worktable
                      ";TRUE iff ?kit is on ?worktable"^^xsd:string)
DataPropertyAssertion(soap:hasPositivePredicate_ReferenceParameter :kit-location-worktable
                      "Kit"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPositivePredicate_TargetParameter :kit-location-worktable
                      "WorkTable"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasKitLocWorktable_GroupKitLocWorktable
                        :kit-location-worktable :group_kit-location-worktable)

//*****************************************
// 5 start soap:GroupKitLocWorktable group_kit-location-worktable
Declaration(NamedIndividual(:group_kit-location-worktable))
ClassAssertion(soap:GroupKitLocWorktable :group_kit-location-worktable)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :group_kit-location-worktable
                      "Kit"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :group_kit-location-worktable
                      "WorkTable"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasGroupKitLocWorktable_StateRelation
                        :group_kit-location-worktable :OnTopWithContact)
// 5 end soap:GroupKitLocWorktable
//*****************************************

// 4 end soap:KitLocWorktable
//*****************************************

ObjectPropertyAssertion(soap:hasPositivePredicateSet_KitLocLBWK
                        :positive_predicate_set :kit-location-lbwk)

//*****************************************
// 4 start soap:KitLocLBWK kit-location-lbwk
Declaration(NamedIndividual(:kit-location-lbwk))
ClassAssertion(soap:KitLocLBWK :kit-location-lbwk)
DataPropertyAssertion(soap:hasPositivePredicate_Description :kit-location-lbwk
                      ";TRUE iff ?kit is in ?largeboxwithkits"^^xsd:string)
DataPropertyAssertion(soap:hasPositivePredicate_ReferenceParameter :kit-location-lbwk
                      "Kit"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPositivePredicate_TargetParameter :kit-location-lbwk
                      "LargeBoxWithKits"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasKitLocLBWK_GroupKitLocLBWK
                        :kit-location-lbwk :group_kit-location-lbwk)

//*****************************************
// 5 start soap:GroupKitLocLBWK group_kit-location-lbwk
Declaration(NamedIndividual(:group_kit-location-lbwk))
ClassAssertion(soap:GroupKitLocLBWK :group_kit-location-lbwk)
ObjectPropertyAssertion(soap:hasGroupKitLocLBWK_SubGroup_1
                        :group_kit-location-lbwk :subgroup_kit-location-lbwk_1)

//*****************************************
// 6 start soap:SubGroupKitLocLargeBoxWithKits_1 subgroup_kit-location-lbwk_1
Declaration(NamedIndividual(:subgroup_kit-location-lbwk_1))
ClassAssertion(soap:SubGroupKitLocLargeBoxWithKits_1 :subgroup_kit-location-lbwk_1)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :subgroup_kit-location-lbwk_1
                      "Kit"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :subgroup_kit-location-lbwk_1
                      "LargeBoxWithKits"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasSubGroupKitLocLargeBoxWithKits_1_StateRelation
                        :subgroup_kit-location-lbwk_1 :PartiallyIn)
// 6 end soap:SubGroupKitLocLargeBoxWithKits_1
//*****************************************

ObjectPropertyAssertion(soap:hasGroupKitLocLBWK_SubGroup_2
                        :group_kit-location-lbwk :subgroup_kit-location-lbwk_2)

//*****************************************
// 6 start soap:SubGroupKitLocLargeBoxWithKits_2 subgroup_kit-location-lbwk_2
Declaration(NamedIndividual(:subgroup_kit-location-lbwk_2))
ClassAssertion(soap:SubGroupKitLocLargeBoxWithKits_2 :subgroup_kit-location-lbwk_2)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :subgroup_kit-location-lbwk_2
                      "Kit"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :subgroup_kit-location-lbwk_2
                      "LargeBoxWithKits"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasSubGroupKitLocLargeBoxWithKits_2_StateRelation
                        :subgroup_kit-location-lbwk_2 :ContainedIn)
// 6 end soap:SubGroupKitLocLargeBoxWithKits_2
//*****************************************

// 5 end soap:GroupKitLocLBWK
//*****************************************

// 4 end soap:KitLocLBWK
//*****************************************

ObjectPropertyAssertion(soap:hasPositivePredicateSet_PartLocPartsTray
                        :positive_predicate_set :part-location-partstray)

//*****************************************
// 4 start soap:PartLocPartsTray part-location-partstray
Declaration(NamedIndividual(:part-location-partstray))
ClassAssertion(soap:PartLocPartsTray :part-location-partstray)
DataPropertyAssertion(soap:hasPositivePredicate_Description :part-location-partstray
                      ";TRUE iff ?part is in ?partstray"^^xsd:string)
DataPropertyAssertion(soap:hasPositivePredicate_ReferenceParameter :part-location-partstray
                      "Part"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPositivePredicate_TargetParameter :part-location-partstray
                      "PartsTray"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasPartLocPartsTray_GroupPartLocPartsTray
                        :part-location-partstray :group_part-location-partstray)

//*****************************************
// 5 start soap:GroupPartLocPartsTray group_part-location-partstray
Declaration(NamedIndividual(:group_part-location-partstray))
ClassAssertion(soap:GroupPartLocPartsTray :group_part-location-partstray)
ObjectPropertyAssertion(soap:hasGroupPartLocPartsTray_SubGroup_1
                        :group_part-location-partstray :subgroup_part-location-partstray_1)

//*****************************************
// 6 start soap:SubGroupPartLocPartsTray_1 subgroup_part-location-partstray_1
Declaration(NamedIndividual(:subgroup_part-location-partstray_1))
ClassAssertion(soap:SubGroupPartLocPartsTray_1 :subgroup_part-location-partstray_1)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :subgroup_part-location-partstray_1
                      "Part"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :subgroup_part-location-partstray_1
                      "PartsTray"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasSubGroupPartLocPartsTray_1_StateRelation
                        :subgroup_part-location-partstray_1 :PartiallyIn)
// 6 end soap:SubGroupPartLocPartsTray_1
//*****************************************

ObjectPropertyAssertion(soap:hasGroupPartLocPartsTray_SubGroup_2
                        :group_part-location-partstray :subgroup_part-location-partstray_2)

//*****************************************
// 6 start soap:SubGroupPartLocPartsTray_2 subgroup_part-location-partstray_2
Declaration(NamedIndividual(:subgroup_part-location-partstray_2))
ClassAssertion(soap:SubGroupPartLocPartsTray_2 :subgroup_part-location-partstray_2)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :subgroup_part-location-partstray_2
                      "Part"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :subgroup_part-location-partstray_2
                      "PartsTray"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasSubGroupPartLocPartsTray_2_StateRelation
                        :subgroup_part-location-partstray_2 :ContainedIn)
// 6 end soap:SubGroupPartLocPartsTray_2
//*****************************************

// 5 end soap:GroupPartLocPartsTray
//*****************************************

// 4 end soap:PartLocPartsTray
//*****************************************

ObjectPropertyAssertion(soap:hasPositivePredicateSet_PartLocKit
                        :positive_predicate_set :part-location-kit)

//*****************************************
// 4 start soap:PartLocKit part-location-kit
Declaration(NamedIndividual(:part-location-kit))
ClassAssertion(soap:PartLocKit :part-location-kit)
DataPropertyAssertion(soap:hasPositivePredicate_Description :part-location-kit
                      ";TRUE iff ?part is in ?kit"^^xsd:string)
DataPropertyAssertion(soap:hasPositivePredicate_ReferenceParameter :part-location-kit
                      "Part"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPositivePredicate_TargetParameter :part-location-kit
                      "Kit"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasPartLocKit_GroupPartLocKit
                        :part-location-kit :group_part-location-kit)

//*****************************************
// 5 start soap:GroupPartLocKit group_part-location-kit
Declaration(NamedIndividual(:group_part-location-kit))
ClassAssertion(soap:GroupPartLocKit :group_part-location-kit)
ObjectPropertyAssertion(soap:hasGroupPartLocKit_SubGroup_1
                        :group_part-location-kit :subgroup_part-location-kit_1)

//*****************************************
// 6 start soap:SubGroupPartLocKit_1 subgroup_part-location-kit_1
Declaration(NamedIndividual(:subgroup_part-location-kit_1))
ClassAssertion(soap:SubGroupPartLocKit_1 :subgroup_part-location-kit_1)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :subgroup_part-location-kit_1
                      "Part"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :subgroup_part-location-kit_1
                      "Kit"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasSubGroupPartLocKit_1_StateRelation
                        :subgroup_part-location-kit_1 :PartiallyIn)
// 6 end soap:SubGroupPartLocKit_1
//*****************************************

ObjectPropertyAssertion(soap:hasGroupPartLocKit_SubGroup_2
                        :group_part-location-kit :subgroup_part-location-kit_2)

//*****************************************
// 6 start soap:SubGroupPartLocKit_2 subgroup_part-location-kit_2
Declaration(NamedIndividual(:subgroup_part-location-kit_2))
ClassAssertion(soap:SubGroupPartLocKit_2 :subgroup_part-location-kit_2)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :subgroup_part-location-kit_2
                      "Part"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :subgroup_part-location-kit_2
                      "Kit"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasSubGroupPartLocKit_2_StateRelation
                        :subgroup_part-location-kit_2 :ContainedIn)
// 6 end soap:SubGroupPartLocKit_2
//*****************************************

// 5 end soap:GroupPartLocKit
//*****************************************

// 4 end soap:PartLocKit
//*****************************************

ObjectPropertyAssertion(soap:hasPositivePredicateSet_PartLocRobot
                        :positive_predicate_set :part-location-robot)

//*****************************************
// 4 start soap:PartLocRobot part-location-robot
Declaration(NamedIndividual(:part-location-robot))
ClassAssertion(soap:PartLocRobot :part-location-robot)
DataPropertyAssertion(soap:hasPositivePredicate_Description :part-location-robot
                      ";TRUE iff ?part is being held by ?robot"^^xsd:string)
DataPropertyAssertion(soap:hasPositivePredicate_ReferenceParameter :part-location-robot
                      "Part"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPositivePredicate_TargetParameter :part-location-robot
                      "Robot"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasPartLocRobot_GroupPartLocRobot_1
                        :part-location-robot :group_part-location-robot_1)

//*****************************************
// 5 start soap:GroupPartLocRobot_1 group_part-location-robot_1
Declaration(NamedIndividual(:group_part-location-robot_1))
ClassAssertion(soap:GroupPartLocRobot_1 :group_part-location-robot_1)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :group_part-location-robot_1
                      "EndEffector"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :group_part-location-robot_1
                      "Robot"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasGroupPartLocRobot_1_StateRelation
                        :group_part-location-robot_1 :InContactWith)
// 5 end soap:GroupPartLocRobot_1
//*****************************************

ObjectPropertyAssertion(soap:hasPartLocRobot_GroupPartLocRobot_2
                        :part-location-robot :group_part-location-robot_2)

//*****************************************
// 5 start soap:GroupPartLocRobot_2 group_part-location-robot_2
Declaration(NamedIndividual(:group_part-location-robot_2))
ClassAssertion(soap:GroupPartLocRobot_2 :group_part-location-robot_2)
ObjectPropertyAssertion(soap:hasGroupPartLocRobot_2_SubGroup_1
                        :group_part-location-robot_2 :subgroup_part-location-robot_1)

//*****************************************
// 6 start soap:SubGroupPartLocRobot_1 subgroup_part-location-robot_1
Declaration(NamedIndividual(:subgroup_part-location-robot_1))
ClassAssertion(soap:SubGroupPartLocRobot_1 :subgroup_part-location-robot_1)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :subgroup_part-location-robot_1
                      "Part"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :subgroup_part-location-robot_1
                      "EndEffector"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasSubGroupPartLocRobot_1_StateRelation
                        :subgroup_part-location-robot_1 :PartiallyIn)
// 6 end soap:SubGroupPartLocRobot_1
//*****************************************

ObjectPropertyAssertion(soap:hasGroupPartLocRobot_2_SubGroup_2
                        :group_part-location-robot_2 :subgroup_part-location-robot_2)

//*****************************************
// 6 start soap:SubGroupPartLocRobot_2 subgroup_part-location-robot_2
Declaration(NamedIndividual(:subgroup_part-location-robot_2))
ClassAssertion(soap:SubGroupPartLocRobot_2 :subgroup_part-location-robot_2)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :subgroup_part-location-robot_2
                      "Part"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :subgroup_part-location-robot_2
                      "EndEffector"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasSubGroupPartLocRobot_2_StateRelation
                        :subgroup_part-location-robot_2 :ContainedIn)
// 6 end soap:SubGroupPartLocRobot_2
//*****************************************

// 5 end soap:GroupPartLocRobot_2
//*****************************************

ObjectPropertyAssertion(soap:hasPartLocRobot_GroupPartLocRobot_3
                        :part-location-robot :group_part-location-robot_3)

//*****************************************
// 5 start soap:GroupPartLocRobot_3 group_part-location-robot_3
Declaration(NamedIndividual(:group_part-location-robot_3))
ClassAssertion(soap:GroupPartLocRobot_3 :group_part-location-robot_3)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :group_part-location-robot_3
                      "SolidObject"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :group_part-location-robot_3
                      "Part"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasGroupPartLocRobot_3_StateRelation
                        :group_part-location-robot_3 :NotUnderWithContact)
// 5 end soap:GroupPartLocRobot_3
//*****************************************

// 4 end soap:PartLocRobot
//*****************************************

ObjectPropertyAssertion(soap:hasPositivePredicateSet_RobotHoldsPart
                        :positive_predicate_set :robot-holds-part)

//*****************************************
// 4 start soap:RobotHoldsPart robot-holds-part
Declaration(NamedIndividual(:robot-holds-part))
ClassAssertion(soap:RobotHoldsPart :robot-holds-part)
DataPropertyAssertion(soap:hasPositivePredicate_Description :robot-holds-part
                      ";TRUE iff ?part is being held by ?robot"^^xsd:string)
DataPropertyAssertion(soap:hasPositivePredicate_ReferenceParameter :robot-holds-part
                      "Part"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPositivePredicate_TargetParameter :robot-holds-part
                      "Robot"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasRobotHoldsPart_GroupRobotHoldsPart_1
                        :robot-holds-part :group_robot-holds-part_1)

//*****************************************
// 5 start soap:GroupRobotHoldsPart_1 group_robot-holds-part_1
Declaration(NamedIndividual(:group_robot-holds-part_1))
ClassAssertion(soap:GroupRobotHoldsPart_1 :group_robot-holds-part_1)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :group_robot-holds-part_1
                      "EndEffector"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :group_robot-holds-part_1
                      "Robot"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasGroupRobotHoldsPart_1_StateRelation
                        :group_robot-holds-part_1 :InContactWith)
// 5 end soap:GroupRobotHoldsPart_1
//*****************************************

ObjectPropertyAssertion(soap:hasRobotHoldsPart_GroupRobotHoldsPart_2
                        :robot-holds-part :group_robot-holds-part_2)

//*****************************************
// 5 start soap:GroupRobotHoldsPart_2 group_robot-holds-part_2
Declaration(NamedIndividual(:group_robot-holds-part_2))
ClassAssertion(soap:GroupRobotHoldsPart_2 :group_robot-holds-part_2)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :group_robot-holds-part_2
                      "Part"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :group_robot-holds-part_2
                      "EndEffector"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasGroupRobotHoldsPart_2_StateRelation
                        :group_robot-holds-part_2 :UnderWithContact)
// 5 end soap:GroupRobotHoldsPart_2
//*****************************************

ObjectPropertyAssertion(soap:hasRobotHoldsPart_GroupRobotHoldsPart_3
                        :robot-holds-part :group_robot-holds-part_3)

//*****************************************
// 5 start soap:GroupRobotHoldsPart_3 group_robot-holds-part_3
Declaration(NamedIndividual(:group_robot-holds-part_3))
ClassAssertion(soap:GroupRobotHoldsPart_3 :group_robot-holds-part_3)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :group_robot-holds-part_3
                      "SolidObject"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :group_robot-holds-part_3
                      "Part"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasGroupRobotHoldsPart_3_StateRelation
                        :group_robot-holds-part_3 :NotUnderWithContact)
// 5 end soap:GroupRobotHoldsPart_3
//*****************************************

// 4 end soap:RobotHoldsPart
//*****************************************

ObjectPropertyAssertion(soap:hasPositivePredicateSet_LBWKNotFull
                        :positive_predicate_set :lbwk-not-full)

//*****************************************
// 4 start soap:LBWKNotFull lbwk-not-full
Declaration(NamedIndividual(:lbwk-not-full))
ClassAssertion(soap:LBWKNotFull :lbwk-not-full)
DataPropertyAssertion(soap:hasPositivePredicate_Description :lbwk-not-full
                      ";TRUE iff ?larboxwithkits is not full"^^xsd:string)
DataPropertyAssertion(soap:hasPositivePredicate_ReferenceParameter :lbwk-not-full
                      "LargeBoxWithKits"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasLBWKNotFull_GroupLargeBoxWithKitsNotFull
                        :lbwk-not-full :group_lbwk-not-full)

//*****************************************
// 5 start soap:GroupLBWKNotFull group_lbwk-not-full
Declaration(NamedIndividual(:group_lbwk-not-full))
ClassAssertion(soap:GroupLBWKNotFull :group_lbwk-not-full)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :group_lbwk-not-full
                      "Kit"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :group_lbwk-not-full
                      "LargeBoxWithKits"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasGroupLBWKNotFull_StateRelation
                        :group_lbwk-not-full :ContainedInLBWK)
// 5 end soap:GroupLBWKNotFull
//*****************************************

// 4 end soap:LBWKNotFull
//*****************************************

ObjectPropertyAssertion(soap:hasPositivePredicateSet_PartsTrayNotEmpty
                        :positive_predicate_set :partstray-not-empty)

//*****************************************
// 4 start soap:PartsTrayNotEmpty partstray-not-empty
Declaration(NamedIndividual(:partstray-not-empty))
ClassAssertion(soap:PartsTrayNotEmpty :partstray-not-empty)
DataPropertyAssertion(soap:hasPositivePredicate_Description :partstray-not-empty
                      ";TRUE iff ?larboxwithkits is not full"^^xsd:string)
DataPropertyAssertion(soap:hasPositivePredicate_ReferenceParameter :partstray-not-empty
                      "PartsTray"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasPartsTrayNotEmpty_GroupPartsTrayNotEmpty
                        :partstray-not-empty :group_partstray-not-empty)

//*****************************************
// 5 start soap:GroupPartsTrayNotEmpty group_partstray-not-empty
Declaration(NamedIndividual(:group_partstray-not-empty))
ClassAssertion(soap:GroupPartsTrayNotEmpty :group_partstray-not-empty)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :group_partstray-not-empty
                      "Part"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :group_partstray-not-empty
                      "PartsTray"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasGroupPartsTrayNotEmpty_StateRelation
                        :group_partstray-not-empty :ContainedIn)
// 5 end soap:GroupPartsTrayNotEmpty
//*****************************************

// 4 end soap:PartsTrayNotEmpty
//*****************************************

ObjectPropertyAssertion(soap:hasPositivePredicateSet_PartsTrayHasPart
                        :positive_predicate_set :partstray-has-part)

//*****************************************
// 4 start soap:PartsTrayHasPart partstray-has-part
Declaration(NamedIndividual(:partstray-has-part))
ClassAssertion(soap:PartsTrayHasPart :partstray-has-part)
DataPropertyAssertion(soap:hasPositivePredicate_Description :partstray-has-part
                      ";TRUE iff ?partstray has ?part"^^xsd:string)
DataPropertyAssertion(soap:hasPositivePredicate_ReferenceParameter :partstray-has-part
                      "PartsTray"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPositivePredicate_TargetParameter :partstray-has-part
                      "Part"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasPartsTrayHasPart_GroupPartsTrayHasPart
                        :partstray-has-part :group_partstray-has-part)

//*****************************************
// 5 start soap:GroupPartsTrayHasPart group_partstray-has-part
Declaration(NamedIndividual(:group_partstray-has-part))
ClassAssertion(soap:GroupPartsTrayHasPart :group_partstray-has-part)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :group_partstray-has-part
                      "Part"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :group_partstray-has-part
                      "PartsTray"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasGroupPartsTrayHasPart_StateRelation
                        :group_partstray-has-part :ContainedIn)
// 5 end soap:GroupPartsTrayHasPart
//*****************************************

// 4 end soap:PartsTrayHasPart
//*****************************************

ObjectPropertyAssertion(soap:hasPositivePredicateSet_KitTrayLocLBWEKT
                        :positive_predicate_set :kittray-location-lbwekt)

//*****************************************
// 4 start soap:KitTrayLocLBWEKT kittray-location-lbwekt
Declaration(NamedIndividual(:kittray-location-lbwekt))
ClassAssertion(soap:KitTrayLocLBWEKT :kittray-location-lbwekt)
DataPropertyAssertion(soap:hasPositivePredicate_Description :kittray-location-lbwekt
                      ";TRUE iff ?kittray is in ?largeboxwithemptykittrays"^^xsd:string)
DataPropertyAssertion(soap:hasPositivePredicate_ReferenceParameter :kittray-location-lbwekt
                      "KitTray"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPositivePredicate_TargetParameter :kittray-location-lbwekt
                      "LargeBoxWithEmptyKitTrays"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasKitTrayLocLBWEKT_GroupKitTrayLocLBWEKT
                        :kittray-location-lbwekt :group_kittray-location-lbwekt)

//*****************************************
// 5 start soap:GroupKitTrayLocLBWEKT group_kittray-location-lbwekt
Declaration(NamedIndividual(:group_kittray-location-lbwekt))
ClassAssertion(soap:GroupKitTrayLocLBWEKT :group_kittray-location-lbwekt)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :group_kittray-location-lbwekt
                      "KitTray"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :group_kittray-location-lbwekt
                      "LargeBoxWithEmptyKitTrays"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasGroupKitTrayLocLBWEKT_StateRelation
                        :group_kittray-location-lbwekt :ContainedIn)
// 5 end soap:GroupKitTrayLocLBWEKT
//*****************************************

// 4 end soap:KitTrayLocLBWEKT
//*****************************************

ObjectPropertyAssertion(soap:hasPositivePredicateSet_LBWEKTNotEmpty
                        :positive_predicate_set :lbwekt-not-empty)

//*****************************************
// 4 start soap:LBWEKTNotEmpty lbwekt-not-empty
Declaration(NamedIndividual(:lbwekt-not-empty))
ClassAssertion(soap:LBWEKTNotEmpty :lbwekt-not-empty)
DataPropertyAssertion(soap:hasPositivePredicate_Description :lbwekt-not-empty
                      ";TRUE iff ?largeboxwithemptykittrays is not empty"^^xsd:string)
DataPropertyAssertion(soap:hasPositivePredicate_ReferenceParameter :lbwekt-not-empty
                      "LargeBoxWithEmptyKitTrays"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasLBWEKTNotEmpty_GroupLBWEKTNotEmpty
                        :lbwekt-not-empty :group_lbwekt-not-empty)

//*****************************************
// 5 start soap:GroupLBWEKTNotEmpty group_lbwekt-not-empty
Declaration(NamedIndividual(:group_lbwekt-not-empty))
ClassAssertion(soap:GroupLBWEKTNotEmpty :group_lbwekt-not-empty)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :group_lbwekt-not-empty
                      "Kit"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :group_lbwekt-not-empty
                      "LargeBoxWithEmptyKitTrays"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasGroupLBWEKTNotEmpty_StateRelation
                        :group_lbwekt-not-empty :ContainedIn)
// 5 end soap:GroupLBWEKTNotEmpty
//*****************************************

// 4 end soap:LBWEKTNotEmpty
//*****************************************

ObjectPropertyAssertion(soap:hasPositivePredicateSet_WorkTableEmpty
                        :positive_predicate_set :worktable-empty)

//*****************************************
// 4 start soap:WorkTableEmpty worktable-empty
Declaration(NamedIndividual(:worktable-empty))
ClassAssertion(soap:WorkTableEmpty :worktable-empty)
DataPropertyAssertion(soap:hasPositivePredicate_Description :worktable-empty
                      ";TRUE iff ?worktable is empty (nothing on top of it)"^^xsd:string)
DataPropertyAssertion(soap:hasPositivePredicate_ReferenceParameter :worktable-empty
                      "WorkTable"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasWorkTableEmpty_GroupWorkTableEmpty
                        :worktable-empty :group_worktable-empty)

//*****************************************
// 5 start soap:GroupWorkTableEmpty group_worktable-empty
Declaration(NamedIndividual(:group_worktable-empty))
ClassAssertion(soap:GroupWorkTableEmpty :group_worktable-empty)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :group_worktable-empty
                      "SolidObject"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :group_worktable-empty
                      "WorkTable"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasGroupWorkTableEmpty_StateRelation
                        :group_worktable-empty :NotOnTopWithContact)
// 5 end soap:GroupWorkTableEmpty
//*****************************************

// 4 end soap:WorkTableEmpty
//*****************************************

ObjectPropertyAssertion(soap:hasPositivePredicateSet_EEffForKitTray
                        :positive_predicate_set :endeffector-type-kittray)

//*****************************************
// 4 start soap:EEffForKitTray endeffector-type-kittray
Declaration(NamedIndividual(:endeffector-type-kittray))
ClassAssertion(soap:EEffForKitTray :endeffector-type-kittray)
DataPropertyAssertion(soap:hasPositivePredicate_Description :endeffector-type-kittray
                      ";TRUE iff ?endeffector is capable of holding ?kittray"^^xsd:string)
DataPropertyAssertion(soap:hasPositivePredicate_ReferenceParameter :endeffector-type-kittray
                      "EndEffector"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPositivePredicate_TargetParameter :endeffector-type-kittray
                      "KitTray"^^xsd:NMTOKEN)
// 4 end soap:EEffForKitTray
//*****************************************

ObjectPropertyAssertion(soap:hasPositivePredicateSet_EEffForKit
                        :positive_predicate_set :endeffector-type-kit)

//*****************************************
// 4 start soap:EEffForKit endeffector-type-kit
Declaration(NamedIndividual(:endeffector-type-kit))
ClassAssertion(soap:EEffForKit :endeffector-type-kit)
DataPropertyAssertion(soap:hasPositivePredicate_Description :endeffector-type-kit
                      ";TRUE iff ?endeffector is capable of holding ?kit"^^xsd:string)
DataPropertyAssertion(soap:hasPositivePredicate_ReferenceParameter :endeffector-type-kit
                      "EndEffector"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPositivePredicate_TargetParameter :endeffector-type-kit
                      "Kit"^^xsd:NMTOKEN)
// 4 end soap:EEffForKit
//*****************************************

ObjectPropertyAssertion(soap:hasPositivePredicateSet_EEffForPart
                        :positive_predicate_set :endeffector-type-part)

//*****************************************
// 4 start soap:EEffForPart endeffector-type-part
Declaration(NamedIndividual(:endeffector-type-part))
ClassAssertion(soap:EEffForPart :endeffector-type-part)
DataPropertyAssertion(soap:hasPositivePredicate_Description :endeffector-type-part
                      ";TRUE iff ?endeffector is capable of holding ?part"^^xsd:string)
DataPropertyAssertion(soap:hasPositivePredicate_ReferenceParameter :endeffector-type-part
                      "EndEffector"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPositivePredicate_TargetParameter :endeffector-type-part
                      "Part"^^xsd:NMTOKEN)
// 4 end soap:EEffForPart
//*****************************************

ObjectPropertyAssertion(soap:hasPositivePredicateSet_FoundPart
                        :positive_predicate_set :found-part)

//*****************************************
// 4 start soap:FoundPart found-part
Declaration(NamedIndividual(:found-part))
ClassAssertion(soap:FoundPart :found-part)
DataPropertyAssertion(soap:hasPositivePredicate_Description :found-part
                      ";TRUE if ?part is found in ?partstray"^^xsd:string)
DataPropertyAssertion(soap:hasPositivePredicate_ReferenceParameter :found-part
                      "Part"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPositivePredicate_TargetParameter :found-part
                      "PartsTray"^^xsd:NMTOKEN)
// 4 end soap:FoundPart
//*****************************************

ObjectPropertyAssertion(soap:hasPositivePredicateSet_OriginPart
                        :positive_predicate_set :origin-part)

//*****************************************
// 4 start soap:OriginPart origin-part
Declaration(NamedIndividual(:origin-part))
ClassAssertion(soap:OriginPart :origin-part)
DataPropertyAssertion(soap:hasPositivePredicate_Description :origin-part
                      ";TRUE if ?part is from ?partstray"^^xsd:string)
DataPropertyAssertion(soap:hasPositivePredicate_ReferenceParameter :origin-part
                      "Part"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPositivePredicate_TargetParameter :origin-part
                      "PartsTray"^^xsd:NMTOKEN)
// 4 end soap:OriginPart
//*****************************************

ObjectPropertyAssertion(soap:hasPositivePredicateSet_KitTrayLocRobot
                        :positive_predicate_set :kittray-location-robot)

//*****************************************
// 4 start soap:KitTrayLocRobot kittray-location-robot
Declaration(NamedIndividual(:kittray-location-robot))
ClassAssertion(soap:KitTrayLocRobot :kittray-location-robot)
DataPropertyAssertion(soap:hasPositivePredicate_Description :kittray-location-robot
                      ";TRUE iff ?kittray is being held by ?robot"^^xsd:string)
DataPropertyAssertion(soap:hasPositivePredicate_ReferenceParameter :kittray-location-robot
                      "KitTray"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPositivePredicate_TargetParameter :kittray-location-robot
                      "Robot"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasKitTrayLocRobot_GroupKitTrayLocRobot_1
                        :kittray-location-robot :group_kittray-location-robot_1)

//*****************************************
// 5 start soap:GroupKitTrayLocRobot_1 group_kittray-location-robot_1
Declaration(NamedIndividual(:group_kittray-location-robot_1))
ClassAssertion(soap:GroupKitTrayLocRobot_1 :group_kittray-location-robot_1)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :group_kittray-location-robot_1
                      "EndEffector"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :group_kittray-location-robot_1
                      "Robot"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasGroupKitTrayLocRobot_1_StateRelation
                        :group_kittray-location-robot_1 :InContactWith)
// 5 end soap:GroupKitTrayLocRobot_1
//*****************************************

ObjectPropertyAssertion(soap:hasKitTrayLocRobot_GroupKitTrayLocRobot_2
                        :kittray-location-robot :group_kittray-location-robot_2)

//*****************************************
// 5 start soap:GroupKitTrayLocRobot_2 group_kittray-location-robot_2
Declaration(NamedIndividual(:group_kittray-location-robot_2))
ClassAssertion(soap:GroupKitTrayLocRobot_2 :group_kittray-location-robot_2)
ObjectPropertyAssertion(soap:hasGroupKitTrayLocRobot_2_SubGroup_1
                        :group_kittray-location-robot_2 :subgroup_kittray-location-robot_1)

//*****************************************
// 6 start soap:SubGroupKitTrayLocRobot_1 subgroup_kittray-location-robot_1
Declaration(NamedIndividual(:subgroup_kittray-location-robot_1))
ClassAssertion(soap:SubGroupKitTrayLocRobot_1 :subgroup_kittray-location-robot_1)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :subgroup_kittray-location-robot_1
                      "KitTray"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :subgroup_kittray-location-robot_1
                      "EndEffector"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasSubGroupKitTrayLocRobot_1_StateRelation
                        :subgroup_kittray-location-robot_1 :PartiallyIn)
// 6 end soap:SubGroupKitTrayLocRobot_1
//*****************************************

ObjectPropertyAssertion(soap:hasGroupKitTrayLocRobot_2_SubGroup_2
                        :group_kittray-location-robot_2 :subgroup_kittray-location-robot_2)

//*****************************************
// 6 start soap:SubGroupKitTrayLocRobot_2 subgroup_kittray-location-robot_2
Declaration(NamedIndividual(:subgroup_kittray-location-robot_2))
ClassAssertion(soap:SubGroupKitTrayLocRobot_2 :subgroup_kittray-location-robot_2)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :subgroup_kittray-location-robot_2
                      "KitTray"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :subgroup_kittray-location-robot_2
                      "EndEffector"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasSubGroupKitTrayLocRobot_2_StateRelation
                        :subgroup_kittray-location-robot_2 :ContainedIn)
// 6 end soap:SubGroupKitTrayLocRobot_2
//*****************************************

// 5 end soap:GroupKitTrayLocRobot_2
//*****************************************

ObjectPropertyAssertion(soap:hasKitTrayLocRobot_GroupKitTrayLocRobot_3
                        :kittray-location-robot :group_kittray-location-robot_3)

//*****************************************
// 5 start soap:GroupKitTrayLocRobot_3 group_kittray-location-robot_3
Declaration(NamedIndividual(:group_kittray-location-robot_3))
ClassAssertion(soap:GroupKitTrayLocRobot_3 :group_kittray-location-robot_3)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :group_kittray-location-robot_3
                      "SolidObject"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :group_kittray-location-robot_3
                      "KitTray"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasGroupKitTrayLocRobot_3_StateRelation
                        :group_kittray-location-robot_3 :NotUnderWithContact)
// 5 end soap:GroupKitTrayLocRobot_3
//*****************************************

// 4 end soap:KitTrayLocRobot
//*****************************************

ObjectPropertyAssertion(soap:hasPositivePredicateSet_KitLocRobot
                        :positive_predicate_set :kit-location-robot)

//*****************************************
// 4 start soap:KitLocRobot kit-location-robot
Declaration(NamedIndividual(:kit-location-robot))
ClassAssertion(soap:KitLocRobot :kit-location-robot)
DataPropertyAssertion(soap:hasPositivePredicate_Description :kit-location-robot
                      ";TRUE iff ?kit is being held by ?robot"^^xsd:string)
DataPropertyAssertion(soap:hasPositivePredicate_ReferenceParameter :kit-location-robot
                      "Kit"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPositivePredicate_TargetParameter :kit-location-robot
                      "Robot"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasKitLocRobot_GroupKitLocRobot_1
                        :kit-location-robot :group_kit-location-robot_1)

//*****************************************
// 5 start soap:GroupKitLocRobot_1 group_kit-location-robot_1
Declaration(NamedIndividual(:group_kit-location-robot_1))
ClassAssertion(soap:GroupKitLocRobot_1 :group_kit-location-robot_1)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :group_kit-location-robot_1
                      "EndEffector"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :group_kit-location-robot_1
                      "Robot"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasGroupKitLocRobot_1_StateRelation
                        :group_kit-location-robot_1 :InContactWith)
// 5 end soap:GroupKitLocRobot_1
//*****************************************

ObjectPropertyAssertion(soap:hasKitLocRobot_GroupKitLocRobot_2
                        :kit-location-robot :group_kit-location-robot_2)

//*****************************************
// 5 start soap:GroupKitLocRobot_2 group_kit-location-robot_2
Declaration(NamedIndividual(:group_kit-location-robot_2))
ClassAssertion(soap:GroupKitLocRobot_2 :group_kit-location-robot_2)
ObjectPropertyAssertion(soap:hasGroupKitLocRobot_2_SubGroup_1
                        :group_kit-location-robot_2 :subgroup_kit-location-robot_1)

//*****************************************
// 6 start soap:SubGroupKitLocRobot_1 subgroup_kit-location-robot_1
Declaration(NamedIndividual(:subgroup_kit-location-robot_1))
ClassAssertion(soap:SubGroupKitLocRobot_1 :subgroup_kit-location-robot_1)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :subgroup_kit-location-robot_1
                      "Kit"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :subgroup_kit-location-robot_1
                      "EndEffector"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasSubGroupKitLocRobot_1_StateRelation
                        :subgroup_kit-location-robot_1 :PartiallyIn)
// 6 end soap:SubGroupKitLocRobot_1
//*****************************************

ObjectPropertyAssertion(soap:hasGroupKitLocRobot_2_SubGroup_2
                        :group_kit-location-robot_2 :subgroup_kit-location-robot_2)

//*****************************************
// 6 start soap:SubGroupKitLocRobot_2 subgroup_kit-location-robot_2
Declaration(NamedIndividual(:subgroup_kit-location-robot_2))
ClassAssertion(soap:SubGroupKitLocRobot_2 :subgroup_kit-location-robot_2)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :subgroup_kit-location-robot_2
                      "Kit"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :subgroup_kit-location-robot_2
                      "EndEffector"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasSubGroupKitLocRobot_2_StateRelation
                        :subgroup_kit-location-robot_2 :ContainedIn)
// 6 end soap:SubGroupKitLocRobot_2
//*****************************************

// 5 end soap:GroupKitLocRobot_2
//*****************************************

ObjectPropertyAssertion(soap:hasKitLocRobot_GroupKitLocRobot_3
                        :kit-location-robot :group_kit-location-robot_3)

//*****************************************
// 5 start soap:GroupKitLocRobot_3 group_kit-location-robot_3
Declaration(NamedIndividual(:group_kit-location-robot_3))
ClassAssertion(soap:GroupKitLocRobot_3 :group_kit-location-robot_3)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :group_kit-location-robot_3
                      "SolidObject"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :group_kit-location-robot_3
                      "Kit"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasGroupKitLocRobot_3_StateRelation
                        :group_kit-location-robot_3 :NotUnderWithContact)
// 5 end soap:GroupKitLocRobot_3
//*****************************************

// 4 end soap:KitLocRobot
//*****************************************

ObjectPropertyAssertion(soap:hasPositivePredicateSet_KitTrayLocWorkTable
                        :positive_predicate_set :kittray-location-worktable)

//*****************************************
// 4 start soap:KitTrayLocWorkTable kittray-location-worktable
Declaration(NamedIndividual(:kittray-location-worktable))
ClassAssertion(soap:KitTrayLocWorkTable :kittray-location-worktable)
DataPropertyAssertion(soap:hasPositivePredicate_Description :kittray-location-worktable
                      ";TRUE iff ?kittray is on ?worktable"^^xsd:string)
DataPropertyAssertion(soap:hasPositivePredicate_ReferenceParameter :kittray-location-worktable
                      "KitTray"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPositivePredicate_TargetParameter :kittray-location-worktable
                      "WorkTable"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasKitTrayLocWorkTable_GroupKitTrayLocWorkTable
                        :kittray-location-worktable :group_kittray-location-worktable)

//*****************************************
// 5 start soap:GroupKitTrayLocWorkTable group_kittray-location-worktable
Declaration(NamedIndividual(:group_kittray-location-worktable))
ClassAssertion(soap:GroupKitTrayLocWorkTable :group_kittray-location-worktable)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :group_kittray-location-worktable
                      "KitTray"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :group_kittray-location-worktable
                      "WorkTable"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasGroupKitTrayLocWorkTable_StateRelation
                        :group_kittray-location-worktable :OnTopWithContact)
// 5 end soap:GroupKitTrayLocWorkTable
//*****************************************

// 4 end soap:KitTrayLocWorkTable
//*****************************************

ObjectPropertyAssertion(soap:hasPositivePredicateSet_RobotHoldsKitTray
                        :positive_predicate_set :robot-holds-kittray)

//*****************************************
// 4 start soap:RobotHoldsKitTray robot-holds-kittray
Declaration(NamedIndividual(:robot-holds-kittray))
ClassAssertion(soap:RobotHoldsKitTray :robot-holds-kittray)
DataPropertyAssertion(soap:hasPositivePredicate_Description :robot-holds-kittray
                      ";TRUE iff ?robot is holding ?kittray"^^xsd:string)
DataPropertyAssertion(soap:hasPositivePredicate_ReferenceParameter :robot-holds-kittray
                      "Robot"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPositivePredicate_TargetParameter :robot-holds-kittray
                      "KitTray"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasRobotHoldsKitTray_GroupRobotHoldsKitTray_1
                        :robot-holds-kittray :group_robot-holds-kittray_1)

//*****************************************
// 5 start soap:GroupRobotHoldsKitTray_1 group_robot-holds-kittray_1
Declaration(NamedIndividual(:group_robot-holds-kittray_1))
ClassAssertion(soap:GroupRobotHoldsKitTray_1 :group_robot-holds-kittray_1)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :group_robot-holds-kittray_1
                      "EndEffector"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :group_robot-holds-kittray_1
                      "Robot"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasGroupRobotHoldsKitTray_1_StateRelation
                        :group_robot-holds-kittray_1 :InContactWith)
// 5 end soap:GroupRobotHoldsKitTray_1
//*****************************************

ObjectPropertyAssertion(soap:hasRobotHoldsKitTray_GroupRobotHoldsKitTray_2
                        :robot-holds-kittray :group_robot-holds-kittray_2)

//*****************************************
// 5 start soap:GroupRobotHoldsKitTray_2 group_robot-holds-kittray_2
Declaration(NamedIndividual(:group_robot-holds-kittray_2))
ClassAssertion(soap:GroupRobotHoldsKitTray_2 :group_robot-holds-kittray_2)
ObjectPropertyAssertion(soap:hasGroupRobotHoldsKitTray_2_SubGroup_1
                        :group_robot-holds-kittray_2 :subgroup_robot-holds-kittray_1)

//*****************************************
// 6 start soap:SubGroupRobotHoldsKitTray_1 subgroup_robot-holds-kittray_1
Declaration(NamedIndividual(:subgroup_robot-holds-kittray_1))
ClassAssertion(soap:SubGroupRobotHoldsKitTray_1 :subgroup_robot-holds-kittray_1)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :subgroup_robot-holds-kittray_1
                      "KitTray"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :subgroup_robot-holds-kittray_1
                      "EndEffector"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasSubGroupRobotHoldsKitTray_1_StateRelation
                        :subgroup_robot-holds-kittray_1 :PartiallyIn)
// 6 end soap:SubGroupRobotHoldsKitTray_1
//*****************************************

ObjectPropertyAssertion(soap:hasGroupRobotHoldsKitTray_2_SubGroup_2
                        :group_robot-holds-kittray_2 :subgroup_robot-holds-kittray_2)

//*****************************************
// 6 start soap:SubGroupRobotHoldsKitTray_2 subgroup_robot-holds-kittray_2
Declaration(NamedIndividual(:subgroup_robot-holds-kittray_2))
ClassAssertion(soap:SubGroupRobotHoldsKitTray_2 :subgroup_robot-holds-kittray_2)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :subgroup_robot-holds-kittray_2
                      "KitTray"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :subgroup_robot-holds-kittray_2
                      "EndEffector"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasSubGroupRobotHoldsKitTray_2_StateRelation
                        :subgroup_robot-holds-kittray_2 :ContainedIn)
// 6 end soap:SubGroupRobotHoldsKitTray_2
//*****************************************

// 5 end soap:GroupRobotHoldsKitTray_2
//*****************************************

ObjectPropertyAssertion(soap:hasRobotHoldsKitTray_GroupRobotHoldsKitTray_3
                        :robot-holds-kittray :group_robot-holds-kittray_3)

//*****************************************
// 5 start soap:GroupRobotHoldsKitTray_3 group_robot-holds-kittray_3
Declaration(NamedIndividual(:group_robot-holds-kittray_3))
ClassAssertion(soap:GroupRobotHoldsKitTray_3 :group_robot-holds-kittray_3)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :group_robot-holds-kittray_3
                      "SolidObject"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :group_robot-holds-kittray_3
                      "KitTray"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasGroupRobotHoldsKitTray_3_StateRelation
                        :group_robot-holds-kittray_3 :NotUnderWithContact)
// 5 end soap:GroupRobotHoldsKitTray_3
//*****************************************

// 4 end soap:RobotHoldsKitTray
//*****************************************

ObjectPropertyAssertion(soap:hasPositivePredicateSet_RobotHoldsKit
                        :positive_predicate_set :robot-holds-kit)

//*****************************************
// 4 start soap:RobotHoldsKit robot-holds-kit
Declaration(NamedIndividual(:robot-holds-kit))
ClassAssertion(soap:RobotHoldsKit :robot-holds-kit)
DataPropertyAssertion(soap:hasPositivePredicate_Description :robot-holds-kit
                      ";TRUE iff ?robot is holding ?kit"^^xsd:string)
DataPropertyAssertion(soap:hasPositivePredicate_ReferenceParameter :robot-holds-kit
                      "Robot"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPositivePredicate_TargetParameter :robot-holds-kit
                      "Kit"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasRobotHoldsKit_GroupRobotHoldsKit_1
                        :robot-holds-kit :group_robot-holds-kit_1)

//*****************************************
// 5 start soap:GroupRobotHoldsKit_1 group_robot-holds-kit_1
Declaration(NamedIndividual(:group_robot-holds-kit_1))
ClassAssertion(soap:GroupRobotHoldsKit_1 :group_robot-holds-kit_1)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :group_robot-holds-kit_1
                      "EndEffector"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :group_robot-holds-kit_1
                      "Robot"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasGroupRobotHoldsKit_1_StateRelation
                        :group_robot-holds-kit_1 :InContactWith)
// 5 end soap:GroupRobotHoldsKit_1
//*****************************************

ObjectPropertyAssertion(soap:hasRobotHoldsKit_GroupRobotHoldsKit_2
                        :robot-holds-kit :group_robot-holds-kit_2)

//*****************************************
// 5 start soap:GroupRobotHoldsKit_2 group_robot-holds-kit_2
Declaration(NamedIndividual(:group_robot-holds-kit_2))
ClassAssertion(soap:GroupRobotHoldsKit_2 :group_robot-holds-kit_2)
ObjectPropertyAssertion(soap:hasGroupRobotHoldsKit_2_SubGroup_1
                        :group_robot-holds-kit_2 :subgroup_robot-holds-kit_1)

//*****************************************
// 6 start soap:SubGroupRobotHoldsKit_1 subgroup_robot-holds-kit_1
Declaration(NamedIndividual(:subgroup_robot-holds-kit_1))
ClassAssertion(soap:SubGroupRobotHoldsKit_1 :subgroup_robot-holds-kit_1)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :subgroup_robot-holds-kit_1
                      "Kit"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :subgroup_robot-holds-kit_1
                      "EndEffector"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasSubGroupRobotHoldsKit_1_StateRelation
                        :subgroup_robot-holds-kit_1 :PartiallyIn)
// 6 end soap:SubGroupRobotHoldsKit_1
//*****************************************

ObjectPropertyAssertion(soap:hasGroupRobotHoldsKit_2_SubGroup_2
                        :group_robot-holds-kit_2 :subgroup_robot-holds-kit_2)

//*****************************************
// 6 start soap:SubGroupRobotHoldsKit_2 subgroup_robot-holds-kit_2
Declaration(NamedIndividual(:subgroup_robot-holds-kit_2))
ClassAssertion(soap:SubGroupRobotHoldsKit_2 :subgroup_robot-holds-kit_2)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :subgroup_robot-holds-kit_2
                      "Kit"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :subgroup_robot-holds-kit_2
                      "EndEffector"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasSubGroupRobotHoldsKit_2_StateRelation
                        :subgroup_robot-holds-kit_2 :ContainedIn)
// 6 end soap:SubGroupRobotHoldsKit_2
//*****************************************

// 5 end soap:GroupRobotHoldsKit_2
//*****************************************

ObjectPropertyAssertion(soap:hasRobotHoldsKit_GroupRobotHoldsKit_3
                        :robot-holds-kit :group_robot-holds-kit_3)

//*****************************************
// 5 start soap:GroupRobotHoldsKit_3 group_robot-holds-kit_3
Declaration(NamedIndividual(:group_robot-holds-kit_3))
ClassAssertion(soap:GroupRobotHoldsKit_3 :group_robot-holds-kit_3)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupReferenceParameter :group_robot-holds-kit_3
                      "SolidObject"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasPredicateGroupElement_GroupTargetParameter :group_robot-holds-kit_3
                      "Kit"^^xsd:NMTOKEN)
ObjectPropertyAssertion(soap:hasGroupRobotHoldsKit_3_StateRelation
                        :group_robot-holds-kit_3 :NotUnderWithContact)
// 5 end soap:GroupRobotHoldsKit_3
//*****************************************

// 4 end soap:RobotHoldsKit
//*****************************************

// 3 end soap:PositivePredicateSet
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_NegativePredicateSet
                        :kitting-domain :negative_predicate_set)

//*****************************************
// 3 start soap:NegativePredicateSet negative_predicate_set
Declaration(NamedIndividual(:negative_predicate_set))
ClassAssertion(soap:NegativePredicateSet :negative_predicate_set)
ObjectPropertyAssertion(soap:hasNegativePredicateSet_NotEEffLocEEffHolder
                        :negative_predicate_set :not-endeffector-location-endeffectorholder)

//*****************************************
// 4 start soap:NotEEffLocEEffHolder not-endeffector-location-endeffectorholder
Declaration(NamedIndividual(:not-endeffector-location-endeffectorholder))
ClassAssertion(soap:NotEEffLocEEffHolder :not-endeffector-location-endeffectorholder)
ObjectPropertyAssertion(soap:hasNotEEffLocEEffHolder_PositivePredicate
                        :not-endeffector-location-endeffectorholder :endeffector-location-endeffectorholder)
// 4 end soap:NotEEffLocEEffHolder
//*****************************************

ObjectPropertyAssertion(soap:hasNegativePredicateSet_NotRobotEmpty
                        :negative_predicate_set :not-robot-empty)

//*****************************************
// 4 start soap:NotRobotEmpty not-robot-empty
Declaration(NamedIndividual(:not-robot-empty))
ClassAssertion(soap:NotRobotEmpty :not-robot-empty)
ObjectPropertyAssertion(soap:hasNotRobotEmpty_PositivePredicate
                        :not-robot-empty :robot-empty)
// 4 end soap:NotRobotEmpty
//*****************************************

ObjectPropertyAssertion(soap:hasNegativePredicateSet_NotEEffLocRobot
                        :negative_predicate_set :not-endeffector-location-robot)

//*****************************************
// 4 start soap:NotEEffLocRobot not-endeffector-location-robot
Declaration(NamedIndividual(:not-endeffector-location-robot))
ClassAssertion(soap:NotEEffLocRobot :not-endeffector-location-robot)
ObjectPropertyAssertion(soap:hasNotEEffLocRobot_PositivePredicate
                        :not-endeffector-location-robot :endeffector-location-robot)
// 4 end soap:NotEEffLocRobot
//*****************************************

ObjectPropertyAssertion(soap:hasNegativePredicateSet_NotRobotWithEEff
                        :negative_predicate_set :not-robot-with-endeffector)

//*****************************************
// 4 start soap:NotRobotWithEEff not-robot-with-endeffector
Declaration(NamedIndividual(:not-robot-with-endeffector))
ClassAssertion(soap:NotRobotWithEEff :not-robot-with-endeffector)
ObjectPropertyAssertion(soap:hasNotRobotWithEEff_PositivePredicate
                        :not-robot-with-endeffector :robot-with-endeffector)
// 4 end soap:NotRobotWithEEff
//*****************************************

ObjectPropertyAssertion(soap:hasNegativePredicateSet_NotRobotWithNoEEff
                        :negative_predicate_set :not-robot-with-no-endeffector)

//*****************************************
// 4 start soap:NotRobotWithNoEEff not-robot-with-no-endeffector
Declaration(NamedIndividual(:not-robot-with-no-endeffector))
ClassAssertion(soap:NotRobotWithNoEEff :not-robot-with-no-endeffector)
ObjectPropertyAssertion(soap:hasNotRobotWithNoEEff_PositivePredicate
                        :not-robot-with-no-endeffector :robot-with-no-endeffector)
// 4 end soap:NotRobotWithNoEEff
//*****************************************

ObjectPropertyAssertion(soap:hasNegativePredicateSet_NotEEffHolderLocChStation
                        :negative_predicate_set :not-endeffectorholder-location-changing-station)

//*****************************************
// 4 start soap:NotEEffHolderLocChStation not-endeffectorholder-location-changing-station
Declaration(NamedIndividual(:not-endeffectorholder-location-changing-station))
ClassAssertion(soap:NotEEffHolderLocChStation :not-endeffectorholder-location-changing-station)
ObjectPropertyAssertion(soap:hasNotEEffHolderLocChStation_PositivePredicate
                        :not-endeffectorholder-location-changing-station :endeffectorholder-location-changing-station)
// 4 end soap:NotEEffHolderLocChStation
//*****************************************

ObjectPropertyAssertion(soap:hasNegativePredicateSet_NotEEffHolderHoldsEEff
                        :negative_predicate_set :not-endeffectorholder-holds-endeffector)

//*****************************************
// 4 start soap:NotEEffHolderHoldsEEff not-endeffectorholder-holds-endeffector
Declaration(NamedIndividual(:not-endeffectorholder-holds-endeffector))
ClassAssertion(soap:NotEEffHolderHoldsEEff :not-endeffectorholder-holds-endeffector)
ObjectPropertyAssertion(soap:hasNotEEffHolderHoldsEEff_PositivePredicate
                        :not-endeffectorholder-holds-endeffector :endeffectorholder-holds-endeffector)
// 4 end soap:NotEEffHolderHoldsEEff
//*****************************************

ObjectPropertyAssertion(soap:hasNegativePredicateSet_NotEEffHolderEmpty
                        :negative_predicate_set :not-endeffectorholder-empty)

//*****************************************
// 4 start soap:NotEEffHolderEmpty not-endeffectorholder-empty
Declaration(NamedIndividual(:not-endeffectorholder-empty))
ClassAssertion(soap:NotEEffHolderEmpty :not-endeffectorholder-empty)
ObjectPropertyAssertion(soap:hasNotEEffHolderEmpty_PositivePredicate
                        :not-endeffectorholder-empty :endeffectorholder-empty)
// 4 end soap:NotEEffHolderEmpty
//*****************************************

ObjectPropertyAssertion(soap:hasNegativePredicateSet_NotChStationHasEEffHolder
                        :negative_predicate_set :not-endeffectorchangingstation-has-endeffectorholder)

//*****************************************
// 4 start soap:NotChStationHasEEffHolder not-endeffectorchangingstation-has-endeffectorholder
Declaration(NamedIndividual(:not-endeffectorchangingstation-has-endeffectorholder))
ClassAssertion(soap:NotChStationHasEEffHolder :not-endeffectorchangingstation-has-endeffectorholder)
ObjectPropertyAssertion(soap:hasNotChStationHasEEffHolder_PositivePredicate
                        :not-endeffectorchangingstation-has-endeffectorholder :endeffectorchangingstation-has-endeffectorholder)
// 4 end soap:NotChStationHasEEffHolder
//*****************************************

ObjectPropertyAssertion(soap:hasNegativePredicateSet_NotOnWorktableKitTray
                        :negative_predicate_set :not-on-worktable-kittray)

//*****************************************
// 4 start soap:NotOnWorktableKitTray not-on-worktable-kittray
Declaration(NamedIndividual(:not-on-worktable-kittray))
ClassAssertion(soap:NotOnWorktableKitTray :not-on-worktable-kittray)
ObjectPropertyAssertion(soap:hasNotOnWorktableKitTray_PositivePredicate
                        :not-on-worktable-kittray :on-worktable-kittray)
// 4 end soap:NotOnWorktableKitTray
//*****************************************

ObjectPropertyAssertion(soap:hasNegativePredicateSet_NotOnWorktableKit
                        :negative_predicate_set :not-on-worktable-kit)

//*****************************************
// 4 start soap:NotOnWorktableKit not-on-worktable-kit
Declaration(NamedIndividual(:not-on-worktable-kit))
ClassAssertion(soap:NotOnWorktableKit :not-on-worktable-kit)
ObjectPropertyAssertion(soap:hasNotOnWorktableKit_PositivePredicate
                        :not-on-worktable-kit :on-worktable-kit)
// 4 end soap:NotOnWorktableKit
//*****************************************

ObjectPropertyAssertion(soap:hasNegativePredicateSet_NotKitLocWorkTable
                        :negative_predicate_set :not-kit-location-worktable)

//*****************************************
// 4 start soap:NotKitLocWorktable not-kit-location-worktable
Declaration(NamedIndividual(:not-kit-location-worktable))
ClassAssertion(soap:NotKitLocWorktable :not-kit-location-worktable)
ObjectPropertyAssertion(soap:hasNotKitLocWorktable_PositivePredicate
                        :not-kit-location-worktable :kit-location-worktable)
// 4 end soap:NotKitLocWorktable
//*****************************************

ObjectPropertyAssertion(soap:hasNegativePredicateSet_NotKitLocLBWK
                        :negative_predicate_set :not-kit-location-lbwk)

//*****************************************
// 4 start soap:NotKitLocLBWK not-kit-location-lbwk
Declaration(NamedIndividual(:not-kit-location-lbwk))
ClassAssertion(soap:NotKitLocLBWK :not-kit-location-lbwk)
ObjectPropertyAssertion(soap:hasNotKitLocLBWK_PositivePredicate
                        :not-kit-location-lbwk :kit-location-lbwk)
// 4 end soap:NotKitLocLBWK
//*****************************************

ObjectPropertyAssertion(soap:hasNegativePredicateSet_NotPartLocPartsTray
                        :negative_predicate_set :not-part-location-partstray)

//*****************************************
// 4 start soap:NotPartLocPartsTray not-part-location-partstray
Declaration(NamedIndividual(:not-part-location-partstray))
ClassAssertion(soap:NotPartLocPartsTray :not-part-location-partstray)
ObjectPropertyAssertion(soap:hasNotPartLocPartsTray_PositivePredicate
                        :not-part-location-partstray :part-location-partstray)
// 4 end soap:NotPartLocPartsTray
//*****************************************

ObjectPropertyAssertion(soap:hasNegativePredicateSet_NotPartLocKit
                        :negative_predicate_set :not-part-location-kit)

//*****************************************
// 4 start soap:NotPartLocKit not-part-location-kit
Declaration(NamedIndividual(:not-part-location-kit))
ClassAssertion(soap:NotPartLocKit :not-part-location-kit)
ObjectPropertyAssertion(soap:hasNotPartLocKit_PositivePredicate
                        :not-part-location-kit :part-location-kit)
// 4 end soap:NotPartLocKit
//*****************************************

ObjectPropertyAssertion(soap:hasNegativePredicateSet_NotPartLocRobot
                        :negative_predicate_set :not-part-location-robot)

//*****************************************
// 4 start soap:NotPartLocRobot not-part-location-robot
Declaration(NamedIndividual(:not-part-location-robot))
ClassAssertion(soap:NotPartLocRobot :not-part-location-robot)
ObjectPropertyAssertion(soap:hasNotPartLocRobot_PositivePredicate
                        :not-part-location-robot :part-location-robot)
// 4 end soap:NotPartLocRobot
//*****************************************

ObjectPropertyAssertion(soap:hasNegativePredicateSet_NotRobotHoldsPart
                        :negative_predicate_set :not-robot-holds-part)

//*****************************************
// 4 start soap:NotRobotHoldsPart not-robot-holds-part
Declaration(NamedIndividual(:not-robot-holds-part))
ClassAssertion(soap:NotRobotHoldsPart :not-robot-holds-part)
ObjectPropertyAssertion(soap:hasNotRobotHoldsPart_PositivePredicate
                        :not-robot-holds-part :robot-holds-part)
// 4 end soap:NotRobotHoldsPart
//*****************************************

ObjectPropertyAssertion(soap:hasNegativePredicateSet_NotLBWKNotFull
                        :negative_predicate_set :not-lbwk-not-full)

//*****************************************
// 4 start soap:NotLBWKNotFull not-lbwk-not-full
Declaration(NamedIndividual(:not-lbwk-not-full))
ClassAssertion(soap:NotLBWKNotFull :not-lbwk-not-full)
ObjectPropertyAssertion(soap:hasNotLBWKNotFull_PositivePredicate
                        :not-lbwk-not-full :lbwk-not-full)
// 4 end soap:NotLBWKNotFull
//*****************************************

ObjectPropertyAssertion(soap:hasNegativePredicateSet_NotPartsTrayNotEmpty
                        :negative_predicate_set :not-partstray-not-empty)

//*****************************************
// 4 start soap:NotPartsTrayNotEmpty not-partstray-not-empty
Declaration(NamedIndividual(:not-partstray-not-empty))
ClassAssertion(soap:NotPartsTrayNotEmpty :not-partstray-not-empty)
ObjectPropertyAssertion(soap:hasNotPartsTrayNotEmpty_PositivePredicate
                        :not-partstray-not-empty :partstray-not-empty)
// 4 end soap:NotPartsTrayNotEmpty
//*****************************************

ObjectPropertyAssertion(soap:hasNegativePredicateSet_NotPartsTrayHasPart
                        :negative_predicate_set :not-partstray-has-part)

//*****************************************
// 4 start soap:NotPartsTrayHasPart not-partstray-has-part
Declaration(NamedIndividual(:not-partstray-has-part))
ClassAssertion(soap:NotPartsTrayHasPart :not-partstray-has-part)
ObjectPropertyAssertion(soap:hasNotPartsTrayHasPart_PositivePredicate
                        :not-partstray-has-part :partstray-has-part)
// 4 end soap:NotPartsTrayHasPart
//*****************************************

ObjectPropertyAssertion(soap:hasNegativePredicateSet_NotKitTrayLocLBWEKT
                        :negative_predicate_set :not-kittray-location-lbwekt)

//*****************************************
// 4 start soap:NotKitTrayLocLBWEKT not-kittray-location-lbwekt
Declaration(NamedIndividual(:not-kittray-location-lbwekt))
ClassAssertion(soap:NotKitTrayLocLBWEKT :not-kittray-location-lbwekt)
ObjectPropertyAssertion(soap:hasNotKitTrayLocLBWEKT_PositivePredicate
                        :not-kittray-location-lbwekt :kittray-location-lbwekt)
// 4 end soap:NotKitTrayLocLBWEKT
//*****************************************

ObjectPropertyAssertion(soap:hasNegativePredicateSet_NotWorkTableEmpty
                        :negative_predicate_set :not-worktable-empty)

//*****************************************
// 4 start soap:NotWorkTableEmpty not-worktable-empty
Declaration(NamedIndividual(:not-worktable-empty))
ClassAssertion(soap:NotWorkTableEmpty :not-worktable-empty)
ObjectPropertyAssertion(soap:hasNotWorkTableEmpty_PositivePredicate
                        :not-worktable-empty :worktable-empty)
// 4 end soap:NotWorkTableEmpty
//*****************************************

ObjectPropertyAssertion(soap:hasNegativePredicateSet_NotFoundPart
                        :negative_predicate_set :not-found-part)

//*****************************************
// 4 start soap:NotFoundPart not-found-part
Declaration(NamedIndividual(:not-found-part))
ClassAssertion(soap:NotFoundPart :not-found-part)
ObjectPropertyAssertion(soap:hasNotFoundPart_PositivePredicate
                        :not-found-part :found-part)
// 4 end soap:NotFoundPart
//*****************************************

ObjectPropertyAssertion(soap:hasNegativePredicateSet_NotKitTrayLocRobot
                        :negative_predicate_set :not-kittray-location-robot)

//*****************************************
// 4 start soap:NotKitTrayLocRobot not-kittray-location-robot
Declaration(NamedIndividual(:not-kittray-location-robot))
ClassAssertion(soap:NotKitTrayLocRobot :not-kittray-location-robot)
ObjectPropertyAssertion(soap:hasNotKitTrayLocRobot_PositivePredicate
                        :not-kittray-location-robot :kittray-location-robot)
// 4 end soap:NotKitTrayLocRobot
//*****************************************

ObjectPropertyAssertion(soap:hasNegativePredicateSet_NotKitLocRobot
                        :negative_predicate_set :not-kit-location-robot)

//*****************************************
// 4 start soap:NotKitLocRobot not-kit-location-robot
Declaration(NamedIndividual(:not-kit-location-robot))
ClassAssertion(soap:NotKitLocRobot :not-kit-location-robot)
ObjectPropertyAssertion(soap:hasNotKitLocRobot_PositivePredicate
                        :not-kit-location-robot :kit-location-robot)
// 4 end soap:NotKitLocRobot
//*****************************************

ObjectPropertyAssertion(soap:hasNegativePredicateSet_NotKitTrayLocWorkTable
                        :negative_predicate_set :not-kittray-location-worktable)

//*****************************************
// 4 start soap:NotKitTrayLocWorkTable not-kittray-location-worktable
Declaration(NamedIndividual(:not-kittray-location-worktable))
ClassAssertion(soap:NotKitTrayLocWorkTable :not-kittray-location-worktable)
ObjectPropertyAssertion(soap:hasNotKitTrayLocWorkTable_PositivePredicate
                        :not-kittray-location-worktable :kittray-location-worktable)
// 4 end soap:NotKitTrayLocWorkTable
//*****************************************

ObjectPropertyAssertion(soap:hasNegativePredicateSet_NotRobotHoldsKitTray
                        :negative_predicate_set :not-robot-holds-kittray)

//*****************************************
// 4 start soap:NotRobotHoldsKitTray not-robot-holds-kittray
Declaration(NamedIndividual(:not-robot-holds-kittray))
ClassAssertion(soap:NotRobotHoldsKitTray :not-robot-holds-kittray)
ObjectPropertyAssertion(soap:hasNotRobotHoldsKitTray_PositivePredicate
                        :not-robot-holds-kittray :robot-holds-kittray)
// 4 end soap:NotRobotHoldsKitTray
//*****************************************

ObjectPropertyAssertion(soap:hasNegativePredicateSet_NotRobotHoldsKit
                        :negative_predicate_set :not-robot-holds-kit)

//*****************************************
// 4 start soap:NotRobotHoldsKit not-robot-holds-kit
Declaration(NamedIndividual(:not-robot-holds-kit))
ClassAssertion(soap:NotRobotHoldsKit :not-robot-holds-kit)
ObjectPropertyAssertion(soap:hasNotRobotHoldsKit_PositivePredicate
                        :not-robot-holds-kit :robot-holds-kit)
// 4 end soap:NotRobotHoldsKit
//*****************************************

// 3 end soap:NegativePredicateSet
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_QuantityPartsTray
                        :kitting-domain :quantity-partstray)

//*****************************************
// 3 start soap:QuantityPartsTray quantity-partstray
Declaration(NamedIndividual(:quantity-partstray))
ClassAssertion(soap:QuantityPartsTray :quantity-partstray)
DataPropertyAssertion(soap:hasFunction_Description :quantity-partstray
                      ";Quantity of parts in ?partstray (quantity set in the init section in the problem file)"^^xsd:string)
DataPropertyAssertion(soap:hasFunction_ReferenceParameter :quantity-partstray
                      "PartsTray"^^xsd:NMTOKEN)
// 3 end soap:QuantityPartsTray
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_QuantityPartsInKit
                        :kitting-domain :quantity-kit)

//*****************************************
// 3 start soap:QuantityPartsInKit quantity-kit
Declaration(NamedIndividual(:quantity-kit))
ClassAssertion(soap:QuantityPartsInKit :quantity-kit)
DataPropertyAssertion(soap:hasFunction_Description :quantity-kit
                      ";Quantity of parts from ?partstray that is in ?kit"^^xsd:string)
DataPropertyAssertion(soap:hasFunction_ReferenceParameter :quantity-kit
                      "Kit"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasFunction_TargetParameter :quantity-kit
                      "PartsTray"^^xsd:NMTOKEN)
// 3 end soap:QuantityPartsInKit
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_CapacityKit
                        :kitting-domain :capacity-kit)

//*****************************************
// 3 start soap:CapacityKit capacity-kit
Declaration(NamedIndividual(:capacity-kit))
ClassAssertion(soap:CapacityKit :capacity-kit)
DataPropertyAssertion(soap:hasFunction_Description :capacity-kit
                      ";TRUE if capacity of a kit is equal to the quantity of parts tray"^^xsd:string)
DataPropertyAssertion(soap:hasFunction_ReferenceParameter :capacity-kit
                      "Kit"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasFunction_TargetParameter :capacity-kit
                      "PartsTray"^^xsd:NMTOKEN)
// 3 end soap:CapacityKit
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_AttachEndEffector
                        :kitting-domain :attach-endeffector)

//*****************************************
// 3 start soap:AttachEndEffector attach-endeffector
Declaration(NamedIndividual(:attach-endeffector))
ClassAssertion(soap:AttachEndEffector :attach-endeffector)
ObjectPropertyAssertion(soap:hasAttachEndEffector_ActionParameterSet
                        :attach-endeffector :attach-endeffector_robot)

//*****************************************
// 4 start soap:ActionParameterSet attach-endeffector_robot
Declaration(NamedIndividual(:attach-endeffector_robot))
ClassAssertion(soap:ActionParameterSet :attach-endeffector_robot)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :attach-endeffector_robot
                      "Robot"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :attach-endeffector_robot
                      "1"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasAttachEndEffector_ActionParameterSet
                        :attach-endeffector :attach-endeffector_endeffector)

//*****************************************
// 4 start soap:ActionParameterSet attach-endeffector_endeffector
Declaration(NamedIndividual(:attach-endeffector_endeffector))
ClassAssertion(soap:ActionParameterSet :attach-endeffector_endeffector)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :attach-endeffector_endeffector
                      "EndEffector"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :attach-endeffector_endeffector
                      "2"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasAttachEndEffector_ActionParameterSet
                        :attach-endeffector :attach-endeffector_endeffectorholder)

//*****************************************
// 4 start soap:ActionParameterSet attach-endeffector_endeffectorholder
Declaration(NamedIndividual(:attach-endeffector_endeffectorholder))
ClassAssertion(soap:ActionParameterSet :attach-endeffector_endeffectorholder)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :attach-endeffector_endeffectorholder
                      "EndEffectorHolder"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :attach-endeffector_endeffectorholder
                      "3"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasAttachEndEffector_ActionParameterSet
                        :attach-endeffector :attach-endeffector_endeffectorchangingstation)

//*****************************************
// 4 start soap:ActionParameterSet attach-endeffector_endeffectorchangingstation
Declaration(NamedIndividual(:attach-endeffector_endeffectorchangingstation))
ClassAssertion(soap:ActionParameterSet :attach-endeffector_endeffectorchangingstation)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :attach-endeffector_endeffectorchangingstation
                      "EndEffectorChangingStation"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :attach-endeffector_endeffectorchangingstation
                      "4"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasAttachEndEffector_Precondition
                        :attach-endeffector :precondition_attach-endeffector)

//*****************************************
// 4 start soap:PreconditionAttachEndEffector precondition_attach-endeffector
Declaration(NamedIndividual(:precondition_attach-endeffector))
ClassAssertion(soap:PreconditionAttachEndEffector :precondition_attach-endeffector)
ObjectPropertyAssertion(soap:hasPreconditionAttachEndEffector_EEffLocEEffHolder
                        :precondition_attach-endeffector :endeffector-location-endeffectorholder)
ObjectPropertyAssertion(soap:hasPreconditionAttachEndEffector_RobotWithNoEEff
                        :precondition_attach-endeffector :robot-with-no-endeffector)
ObjectPropertyAssertion(soap:hasPreconditionAttachEndEffector_EEffHolderHoldsEEff
                        :precondition_attach-endeffector :endeffectorholder-holds-endeffector)
ObjectPropertyAssertion(soap:hasPreconditionAttachEndEffector_EEffHolderLocChStation
                        :precondition_attach-endeffector :endeffectorholder-location-changing-station)
ObjectPropertyAssertion(soap:hasPreconditionAttachEndEffector_ChStationHasEffHolder
                        :precondition_attach-endeffector :endeffectorchangingstation-has-endeffectorholder)
// 4 end soap:PreconditionAttachEndEffector
//*****************************************

ObjectPropertyAssertion(soap:hasAttachEndEffector_Effect
                        :attach-endeffector :effect_attach-endeffector)

//*****************************************
// 4 start soap:EffectAttachEndEffector effect_attach-endeffector
Declaration(NamedIndividual(:effect_attach-endeffector))
ClassAssertion(soap:EffectAttachEndEffector :effect_attach-endeffector)
ObjectPropertyAssertion(soap:hasEffectAttachEndEffector_RobotEmpty
                        :effect_attach-endeffector :robot-empty)
ObjectPropertyAssertion(soap:hasEffectAttachEndEffector_EEffLocRobot
                        :effect_attach-endeffector :endeffector-location-robot)
ObjectPropertyAssertion(soap:hasEffectAttachEndEffector_RobotWithEEff
                        :effect_attach-endeffector :robot-with-endeffector)
ObjectPropertyAssertion(soap:hasEffectAttachEndEffector_EEffHolderEmpty
                        :effect_attach-endeffector :endeffectorholder-empty)
ObjectPropertyAssertion(soap:hasEffectAttachEndEffector_NotEEffLocEEffHolder
                        :effect_attach-endeffector :not-endeffector-location-endeffectorholder)
ObjectPropertyAssertion(soap:hasEffectAttachEndEffector_NotEEffHolderHoldsEEff
                        :effect_attach-endeffector :not-endeffectorholder-holds-endeffector)
ObjectPropertyAssertion(soap:hasEffectAttachEndEffector_NotRobotWithNoEEff
                        :effect_attach-endeffector :not-robot-with-no-endeffector)
// 4 end soap:EffectAttachEndEffector
//*****************************************

// 3 end soap:AttachEndEffector
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_RemoveEndEffector
                        :kitting-domain :remove-endeffector)

//*****************************************
// 3 start soap:RemoveEndEffector remove-endeffector
Declaration(NamedIndividual(:remove-endeffector))
ClassAssertion(soap:RemoveEndEffector :remove-endeffector)
ObjectPropertyAssertion(soap:hasRemoveEndEffector_ActionParameterSet
                        :remove-endeffector :remove-endeffector_robot)

//*****************************************
// 4 start soap:ActionParameterSet remove-endeffector_robot
Declaration(NamedIndividual(:remove-endeffector_robot))
ClassAssertion(soap:ActionParameterSet :remove-endeffector_robot)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :remove-endeffector_robot
                      "Robot"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :remove-endeffector_robot
                      "1"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasRemoveEndEffector_ActionParameterSet
                        :remove-endeffector :remove-endeffector_endeffector)

//*****************************************
// 4 start soap:ActionParameterSet remove-endeffector_endeffector
Declaration(NamedIndividual(:remove-endeffector_endeffector))
ClassAssertion(soap:ActionParameterSet :remove-endeffector_endeffector)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :remove-endeffector_endeffector
                      "EndEffector"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :remove-endeffector_endeffector
                      "2"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasRemoveEndEffector_ActionParameterSet
                        :remove-endeffector :remove-endeffector_endeffectorholder)

//*****************************************
// 4 start soap:ActionParameterSet remove-endeffector_endeffectorholder
Declaration(NamedIndividual(:remove-endeffector_endeffectorholder))
ClassAssertion(soap:ActionParameterSet :remove-endeffector_endeffectorholder)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :remove-endeffector_endeffectorholder
                      "EndEffectorHolder"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :remove-endeffector_endeffectorholder
                      "3"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasRemoveEndEffector_ActionParameterSet
                        :remove-endeffector :remove-endeffector_endeffectorchangingstation)

//*****************************************
// 4 start soap:ActionParameterSet remove-endeffector_endeffectorchangingstation
Declaration(NamedIndividual(:remove-endeffector_endeffectorchangingstation))
ClassAssertion(soap:ActionParameterSet :remove-endeffector_endeffectorchangingstation)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :remove-endeffector_endeffectorchangingstation
                      "EndEffectorChangingStation"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :remove-endeffector_endeffectorchangingstation
                      "4"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasRemoveEndEffector_Precondition
                        :remove-endeffector :precondition_remove-endeffector)

//*****************************************
// 4 start soap:PreconditionRemoveEndEffector precondition_remove-endeffector
Declaration(NamedIndividual(:precondition_remove-endeffector))
ClassAssertion(soap:PreconditionRemoveEndEffector :precondition_remove-endeffector)
ObjectPropertyAssertion(soap:hasPreconditionRemoveEndEffector_EEffLocRobot
                        :precondition_remove-endeffector :endeffector-location-robot)
ObjectPropertyAssertion(soap:hasPreconditionRemoveEndEffector_RobotWithEEff
                        :precondition_remove-endeffector :robot-with-endeffector)
ObjectPropertyAssertion(soap:hasPreconditionRemoveEndEffector_RobotEmpty
                        :precondition_remove-endeffector :robot-empty)
ObjectPropertyAssertion(soap:hasPreconditionRemoveEndEffector_EEffHolderLocChStation
                        :precondition_remove-endeffector :endeffectorholder-location-changing-station)
ObjectPropertyAssertion(soap:hasPreconditionRemoveEndEffector_ChStationHasEEffHolder
                        :precondition_remove-endeffector :endeffectorchangingstation-has-endeffectorholder)
ObjectPropertyAssertion(soap:hasPreconditionRemoveEndEffector_EEffHolderEmpty
                        :precondition_remove-endeffector :endeffectorholder-empty)
// 4 end soap:PreconditionRemoveEndEffector
//*****************************************

ObjectPropertyAssertion(soap:hasRemoveEndEffector_Effect
                        :remove-endeffector :effect_remove-endeffector)

//*****************************************
// 4 start soap:EffectRemoveEndEffector effect_remove-endeffector
Declaration(NamedIndividual(:effect_remove-endeffector))
ClassAssertion(soap:EffectRemoveEndEffector :effect_remove-endeffector)
ObjectPropertyAssertion(soap:hasEffectRemoveEndEffector_EEffLocEEffHolder
                        :effect_remove-endeffector :endeffector-location-endeffectorholder)
ObjectPropertyAssertion(soap:hasEffectRemoveEndEffector_EEffHolderHoldsEEff
                        :effect_remove-endeffector :endeffectorholder-holds-endeffector)
ObjectPropertyAssertion(soap:hasEffectRemoveEndEffector_RobotWithNoEEff
                        :effect_remove-endeffector :robot-with-no-endeffector)
ObjectPropertyAssertion(soap:hasEffectRemoveEndEffector_NotEEffLocRobot
                        :effect_remove-endeffector :not-endeffector-location-robot)
ObjectPropertyAssertion(soap:hasEffectRemoveEndEffector_NotRobotWithEEff
                        :effect_remove-endeffector :not-robot-with-endeffector)
ObjectPropertyAssertion(soap:hasEffectRemoveEndEffector_NotEEffHolderEmpty
                        :effect_remove-endeffector :not-endeffectorholder-empty)
// 4 end soap:EffectRemoveEndEffector
//*****************************************

// 3 end soap:RemoveEndEffector
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_CreateKit
                        :kitting-domain :create-kit)

//*****************************************
// 3 start soap:CreateKit create-kit
Declaration(NamedIndividual(:create-kit))
ClassAssertion(soap:CreateKit :create-kit)
ObjectPropertyAssertion(soap:hasCreateKit_ActionParameterSet
                        :create-kit :create-kit_kit)

//*****************************************
// 4 start soap:ActionParameterSet create-kit_kit
Declaration(NamedIndividual(:create-kit_kit))
ClassAssertion(soap:ActionParameterSet :create-kit_kit)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :create-kit_kit
                      "Kit"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :create-kit_kit
                      "1"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasCreateKit_ActionParameterSet
                        :create-kit :create-kit_kittray)

//*****************************************
// 4 start soap:ActionParameterSet create-kit_kittray
Declaration(NamedIndividual(:create-kit_kittray))
ClassAssertion(soap:ActionParameterSet :create-kit_kittray)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :create-kit_kittray
                      "KitTray"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :create-kit_kittray
                      "2"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasCreateKit_ActionParameterSet
                        :create-kit :create-kit_worktable)

//*****************************************
// 4 start soap:ActionParameterSet create-kit_worktable
Declaration(NamedIndividual(:create-kit_worktable))
ClassAssertion(soap:ActionParameterSet :create-kit_worktable)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :create-kit_worktable
                      "WorkTable"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :create-kit_worktable
                      "3"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasCreateKit_Precondition
                        :create-kit :create-kit_precondition)

//*****************************************
// 4 start soap:PreconditionCreateKit create-kit_precondition
Declaration(NamedIndividual(:create-kit_precondition))
ClassAssertion(soap:PreconditionCreateKit :create-kit_precondition)
ObjectPropertyAssertion(soap:hasPreconditionCreateKit_OnWorktableKitTray
                        :create-kit_precondition :on-worktable-kittray)
// 4 end soap:PreconditionCreateKit
//*****************************************

ObjectPropertyAssertion(soap:hasCreateKit_Effect
                        :create-kit :create-kit_effect)

//*****************************************
// 4 start soap:EffectCreateKit create-kit_effect
Declaration(NamedIndividual(:create-kit_effect))
ClassAssertion(soap:EffectCreateKit :create-kit_effect)
ObjectPropertyAssertion(soap:hasEffectCreateKit_OnWorktableKit
                        :create-kit_effect :on-worktable-kit)
ObjectPropertyAssertion(soap:hasEffectCreateKit_KitLocWorktable
                        :create-kit_effect :kit-location-worktable)
ObjectPropertyAssertion(soap:hasEffectCreateKit_RobotWithEEff
                        :create-kit_effect :robot-with-endeffector)
ObjectPropertyAssertion(soap:hasEffectCreateKit_NotOnWorktableKitTray
                        :create-kit_effect :not-on-worktable-kittray)
// 4 end soap:EffectCreateKit
//*****************************************

// 3 end soap:CreateKit
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_TakeKitTray
                        :kitting-domain :take-kittray)

//*****************************************
// 3 start soap:TakeKitTray take-kittray
Declaration(NamedIndividual(:take-kittray))
ClassAssertion(soap:TakeKitTray :take-kittray)
ObjectPropertyAssertion(soap:hasTakeKitTray_ActionParameterSet
                        :take-kittray :take-kittray_robot)

//*****************************************
// 4 start soap:ActionParameterSet take-kittray_robot
Declaration(NamedIndividual(:take-kittray_robot))
ClassAssertion(soap:ActionParameterSet :take-kittray_robot)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :take-kittray_robot
                      "Robot"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :take-kittray_robot
                      "1"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasTakeKitTray_ActionParameterSet
                        :take-kittray :take-kittray_kittray)

//*****************************************
// 4 start soap:ActionParameterSet take-kittray_kittray
Declaration(NamedIndividual(:take-kittray_kittray))
ClassAssertion(soap:ActionParameterSet :take-kittray_kittray)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :take-kittray_kittray
                      "KitTray"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :take-kittray_kittray
                      "2"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasTakeKitTray_ActionParameterSet
                        :take-kittray :take-kittray_lbwekt)

//*****************************************
// 4 start soap:ActionParameterSet take-kittray_lbwekt
Declaration(NamedIndividual(:take-kittray_lbwekt))
ClassAssertion(soap:ActionParameterSet :take-kittray_lbwekt)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :take-kittray_lbwekt
                      "LargeBoxWithEmptyKitTrays"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :take-kittray_lbwekt
                      "3"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasTakeKitTray_ActionParameterSet
                        :take-kittray :take-kittray_endeffector)

//*****************************************
// 4 start soap:ActionParameterSet take-kittray_endeffector
Declaration(NamedIndividual(:take-kittray_endeffector))
ClassAssertion(soap:ActionParameterSet :take-kittray_endeffector)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :take-kittray_endeffector
                      "EndEffector"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :take-kittray_endeffector
                      "4"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasTakeKitTray_ActionParameterSet
                        :take-kittray :take-kittray_worktable)

//*****************************************
// 4 start soap:ActionParameterSet take-kittray_worktable
Declaration(NamedIndividual(:take-kittray_worktable))
ClassAssertion(soap:ActionParameterSet :take-kittray_worktable)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :take-kittray_worktable
                      "WorkTable"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :take-kittray_worktable
                      "5"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasTakeKitTray_Precondition
                        :take-kittray :take-kittray_precondition)

//*****************************************
// 4 start soap:PreconditionTakeKitTray take-kittray_precondition
Declaration(NamedIndividual(:take-kittray_precondition))
ClassAssertion(soap:PreconditionTakeKitTray :take-kittray_precondition)
ObjectPropertyAssertion(soap:hasPreconditionTakeKitTray_RobotEmpty
                        :take-kittray_precondition :robot-empty)
ObjectPropertyAssertion(soap:hasPreconditionTakeKitTray_LBWEKTNotEmpty
                        :take-kittray_precondition :lbwekt-not-empty)
ObjectPropertyAssertion(soap:hasPreconditionTakeKitTray_RobotWithEEff
                        :take-kittray_precondition :robot-with-endeffector)
ObjectPropertyAssertion(soap:hasPreconditionTakeKitTray_KitTrayLocLBWEKT
                        :take-kittray_precondition :kittray-location-lbwekt)
ObjectPropertyAssertion(soap:hasPreconditionTakeKitTray_EEffLocRobot
                        :take-kittray_precondition :endeffector-location-robot)
ObjectPropertyAssertion(soap:hasPreconditionTakeKitTray_WorkTableEmpty
                        :take-kittray_precondition :worktable-empty)
ObjectPropertyAssertion(soap:hasPreconditionTakeKitTray_EEffForKitTray
                        :take-kittray_precondition :endeffector-type-kittray)
// 4 end soap:PreconditionTakeKitTray
//*****************************************

ObjectPropertyAssertion(soap:hasTakeKitTray_Effect
                        :take-kittray :take-kittray_effect)

//*****************************************
// 4 start soap:EffectTakeKitTray take-kittray_effect
Declaration(NamedIndividual(:take-kittray_effect))
ClassAssertion(soap:EffectTakeKitTray :take-kittray_effect)
ObjectPropertyAssertion(soap:hasEffectTakeKitTray_RobotHoldsKitTray
                        :take-kittray_effect :robot-holds-kittray)
ObjectPropertyAssertion(soap:hasEffectTakeKitTray_KitTrayLocRobot
                        :take-kittray_effect :kittray-location-robot)
ObjectPropertyAssertion(soap:hasEffectTakeKitTray_NotRobotEmpty
                        :take-kittray_effect :not-robot-empty)
ObjectPropertyAssertion(soap:hasEffectTakeKitTray_NotKitTrayLocLBWEKT
                        :take-kittray_effect :not-kittray-location-lbwekt)
// 4 end soap:EffectTakeKitTray
//*****************************************

// 3 end soap:TakeKitTray
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_PutKitTray
                        :kitting-domain :put-kittray)

//*****************************************
// 3 start soap:PutKitTray put-kittray
Declaration(NamedIndividual(:put-kittray))
ClassAssertion(soap:PutKitTray :put-kittray)
ObjectPropertyAssertion(soap:hasPutKitTray_ActionParameterSet
                        :put-kittray :put-kittray_robot)

//*****************************************
// 4 start soap:ActionParameterSet put-kittray_robot
Declaration(NamedIndividual(:put-kittray_robot))
ClassAssertion(soap:ActionParameterSet :put-kittray_robot)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :put-kittray_robot
                      "Robot"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :put-kittray_robot
                      "1"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasPutKitTray_ActionParameterSet
                        :put-kittray :put-kittray_kittray)

//*****************************************
// 4 start soap:ActionParameterSet put-kittray_kittray
Declaration(NamedIndividual(:put-kittray_kittray))
ClassAssertion(soap:ActionParameterSet :put-kittray_kittray)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :put-kittray_kittray
                      "KitTray"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :put-kittray_kittray
                      "2"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasPutKitTray_ActionParameterSet
                        :put-kittray :put-kittray_worktable)

//*****************************************
// 4 start soap:ActionParameterSet put-kittray_worktable
Declaration(NamedIndividual(:put-kittray_worktable))
ClassAssertion(soap:ActionParameterSet :put-kittray_worktable)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :put-kittray_worktable
                      "WorkTable"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :put-kittray_worktable
                      "3"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasPutKitTray_Precondition
                        :put-kittray :put-kittray_precondition)

//*****************************************
// 4 start soap:PreconditionPutKitTray put-kittray_precondition
Declaration(NamedIndividual(:put-kittray_precondition))
ClassAssertion(soap:PreconditionPutKitTray :put-kittray_precondition)
ObjectPropertyAssertion(soap:hasPreconditionPutKitTray_KitTrayLocRobot
                        :put-kittray_precondition :kit-location-robot)
ObjectPropertyAssertion(soap:hasPreconditionPutKitTray_RobotHoldsKitTray
                        :put-kittray_precondition :robot-holds-kittray)
ObjectPropertyAssertion(soap:hasPreconditionPutKitTray_WorkTableEmpty
                        :put-kittray_precondition :worktable-empty)
// 4 end soap:PreconditionPutKitTray
//*****************************************

ObjectPropertyAssertion(soap:hasPutKitTray_Effect
                        :put-kittray :put-kittray_effect)

//*****************************************
// 4 start soap:EffectPutKitTray put-kittray_effect
Declaration(NamedIndividual(:put-kittray_effect))
ClassAssertion(soap:EffectPutKitTray :put-kittray_effect)
ObjectPropertyAssertion(soap:hasEffectPutKitTray_NotKitTrayLocRobot
                        :put-kittray_effect :not-kit-location-robot)
ObjectPropertyAssertion(soap:hasEffectPutKitTray_NotRobotHoldsKitTray
                        :put-kittray_effect :not-robot-holds-kittray)
ObjectPropertyAssertion(soap:hasEffectPutKitTray_NotWorkTableEmpty
                        :put-kittray_effect :not-worktable-empty)
ObjectPropertyAssertion(soap:hasEffectPutKitTray_KitTrayLocWorkTable
                        :put-kittray_effect :kittray-location-worktable)
ObjectPropertyAssertion(soap:hasEffectPutKitTray_RobotEmpty
                        :put-kittray_effect :robot-empty)
ObjectPropertyAssertion(soap:hasEffectPutKitTray_OnWorktableKitTray
                        :put-kittray_effect :on-worktable-kittray)
// 4 end soap:EffectPutKitTray
//*****************************************

// 3 end soap:PutKitTray
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_TakeKit
                        :kitting-domain :take-kit)

//*****************************************
// 3 start soap:TakeKit take-kit
Declaration(NamedIndividual(:take-kit))
ClassAssertion(soap:TakeKit :take-kit)
ObjectPropertyAssertion(soap:hasTakeKit_ActionParameterSet
                        :take-kit :take-kit_robot)

//*****************************************
// 4 start soap:ActionParameterSet take-kit_robot
Declaration(NamedIndividual(:take-kit_robot))
ClassAssertion(soap:ActionParameterSet :take-kit_robot)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :take-kit_robot
                      "Robot"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :take-kit_robot
                      "1"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasTakeKit_ActionParameterSet
                        :take-kit :take-kit_kit)

//*****************************************
// 4 start soap:ActionParameterSet take-kit_kit
Declaration(NamedIndividual(:take-kit_kit))
ClassAssertion(soap:ActionParameterSet :take-kit_kit)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :take-kit_kit
                      "Kit"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :take-kit_kit
                      "2"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasTakeKit_ActionParameterSet
                        :take-kit :take-kit_worktable)

//*****************************************
// 4 start soap:ActionParameterSet take-kit_worktable
Declaration(NamedIndividual(:take-kit_worktable))
ClassAssertion(soap:ActionParameterSet :take-kit_worktable)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :take-kit_worktable
                      "WorkTable"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :take-kit_worktable
                      "3"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasTakeKit_ActionParameterSet
                        :take-kit :take-kit_endeffector)

//*****************************************
// 4 start soap:ActionParameterSet take-kit_endeffector
Declaration(NamedIndividual(:take-kit_endeffector))
ClassAssertion(soap:ActionParameterSet :take-kit_endeffector)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :take-kit_endeffector
                      "EndEffector"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :take-kit_endeffector
                      "4"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasTakeKit_Precondition
                        :take-kit :take-kit_precondition)

//*****************************************
// 4 start soap:PreconditionTakeKit take-kit_precondition
Declaration(NamedIndividual(:take-kit_precondition))
ClassAssertion(soap:PreconditionTakeKit :take-kit_precondition)
ObjectPropertyAssertion(soap:hasPreconditionTakeKit_KitLocWorktable
                        :take-kit_precondition :kit-location-worktable)
ObjectPropertyAssertion(soap:hasPreconditionTakeKit_RobotEmpty
                        :take-kit_precondition :robot-empty)
ObjectPropertyAssertion(soap:hasPreconditionTakeKit_OnWorktableKit
                        :take-kit_precondition :on-worktable-kit)
ObjectPropertyAssertion(soap:hasPreconditionTakeKit_RobotWithEEff
                        :take-kit_precondition :robot-with-endeffector)
ObjectPropertyAssertion(soap:hasPreconditionTakeKit_EEffForKit
                        :take-kit_precondition :endeffector-type-kit)
// 4 end soap:PreconditionTakeKit
//*****************************************

ObjectPropertyAssertion(soap:hasTakeKit_Effect
                        :take-kit :take-kit_effect)

//*****************************************
// 4 start soap:EffectTakeKit take-kit_effect
Declaration(NamedIndividual(:take-kit_effect))
ClassAssertion(soap:EffectTakeKit :take-kit_effect)
ObjectPropertyAssertion(soap:hasEffectTakeKit_KitLocRobot
                        :take-kit_effect :kit-location-robot)
ObjectPropertyAssertion(soap:hasEffectTakeKit_RobotHoldsKit
                        :take-kit_effect :robot-holds-kit)
ObjectPropertyAssertion(soap:hasEffectTakeKit_WorkTableEmpty
                        :take-kit_effect :worktable-empty)
ObjectPropertyAssertion(soap:hasEffectTakeKit_NotKitLocWorktable
                        :take-kit_effect :not-kit-location-worktable)
ObjectPropertyAssertion(soap:hasEffectTakeKit_NotRobotEmpty
                        :take-kit_effect :not-robot-empty)
ObjectPropertyAssertion(soap:hasEffectTakeKit_NotOnWorktableKit
                        :take-kit_effect :not-on-worktable-kit)
// 4 end soap:EffectTakeKit
//*****************************************

// 3 end soap:TakeKit
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_PutKit
                        :kitting-domain :put-kit)

//*****************************************
// 3 start soap:PutKit put-kit
Declaration(NamedIndividual(:put-kit))
ClassAssertion(soap:PutKit :put-kit)
ObjectPropertyAssertion(soap:hasPutKit_ActionParameterSet
                        :put-kit :put-kit_robot)

//*****************************************
// 4 start soap:ActionParameterSet put-kit_robot
Declaration(NamedIndividual(:put-kit_robot))
ClassAssertion(soap:ActionParameterSet :put-kit_robot)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :put-kit_robot
                      "Robot"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :put-kit_robot
                      "1"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasPutKit_ActionParameterSet
                        :put-kit :put-kit_kit)

//*****************************************
// 4 start soap:ActionParameterSet put-kit_kit
Declaration(NamedIndividual(:put-kit_kit))
ClassAssertion(soap:ActionParameterSet :put-kit_kit)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :put-kit_kit
                      "Kit"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :put-kit_kit
                      "2"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasPutKit_ActionParameterSet
                        :put-kit :put-kit_lbwk)

//*****************************************
// 4 start soap:ActionParameterSet put-kit_lbwk
Declaration(NamedIndividual(:put-kit_lbwk))
ClassAssertion(soap:ActionParameterSet :put-kit_lbwk)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :put-kit_lbwk
                      "LargeBoxWithKits"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :put-kit_lbwk
                      "3"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasPutKit_Precondition
                        :put-kit :put-kit_precondition)

//*****************************************
// 4 start soap:PreconditionPutKit put-kit_precondition
Declaration(NamedIndividual(:put-kit_precondition))
ClassAssertion(soap:PreconditionPutKit :put-kit_precondition)
ObjectPropertyAssertion(soap:hasPreconditionPutKit_KitLocRobot
                        :put-kit_precondition :kit-location-robot)
ObjectPropertyAssertion(soap:hasPreconditionPutKit_RobotHoldsKit
                        :put-kit_precondition :robot-holds-kit)
ObjectPropertyAssertion(soap:hasPreconditionPutKit_LBWKNotFull
                        :put-kit_precondition :lbwk-not-full)
// 4 end soap:PreconditionPutKit
//*****************************************

ObjectPropertyAssertion(soap:hasPutKit_Effect
                        :put-kit :put-kit_effect)

//*****************************************
// 4 start soap:EffectPutKit put-kit_effect
Declaration(NamedIndividual(:put-kit_effect))
ClassAssertion(soap:EffectPutKit :put-kit_effect)
ObjectPropertyAssertion(soap:hasEffectPutKit_KitLocLBWK
                        :put-kit_effect :kit-location-lbwk)
ObjectPropertyAssertion(soap:hasEffectPutKit_RobotEmpty
                        :put-kit_effect :robot-empty)
ObjectPropertyAssertion(soap:hasEffectPutKit_NotKitLocRobot
                        :put-kit_effect :not-kit-location-robot)
ObjectPropertyAssertion(soap:hasEffectPutKit_NotRobotHoldsKit
                        :put-kit_effect :not-robot-holds-kit)
// 4 end soap:EffectPutKit
//*****************************************

// 3 end soap:PutKit
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_LookForPart
                        :kitting-domain :look-for-part)

//*****************************************
// 3 start soap:LookForPart look-for-part
Declaration(NamedIndividual(:look-for-part))
ClassAssertion(soap:LookForPart :look-for-part)
ObjectPropertyAssertion(soap:hasLookForPart_ActionParameterSet
                        :look-for-part :look-for-part_robot)

//*****************************************
// 4 start soap:ActionParameterSet look-for-part_robot
Declaration(NamedIndividual(:look-for-part_robot))
ClassAssertion(soap:ActionParameterSet :look-for-part_robot)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :look-for-part_robot
                      "Robot"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :look-for-part_robot
                      "1"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasLookForPart_ActionParameterSet
                        :look-for-part :look-for-part_part)

//*****************************************
// 4 start soap:ActionParameterSet look-for-part_part
Declaration(NamedIndividual(:look-for-part_part))
ClassAssertion(soap:ActionParameterSet :look-for-part_part)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :look-for-part_part
                      "Part"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :look-for-part_part
                      "2"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasLookForPart_ActionParameterSet
                        :look-for-part :look-for-part_partstray)

//*****************************************
// 4 start soap:ActionParameterSet look-for-part_partstray
Declaration(NamedIndividual(:look-for-part_partstray))
ClassAssertion(soap:ActionParameterSet :look-for-part_partstray)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :look-for-part_partstray
                      "PartsTray"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :look-for-part_partstray
                      "3"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasLookForPart_ActionParameterSet
                        :look-for-part :look-for-part_kit)

//*****************************************
// 4 start soap:ActionParameterSet look-for-part_kit
Declaration(NamedIndividual(:look-for-part_kit))
ClassAssertion(soap:ActionParameterSet :look-for-part_kit)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :look-for-part_kit
                      "Kit"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :look-for-part_kit
                      "4"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasLookForPart_ActionParameterSet
                        :look-for-part :look-for-part_worktable)

//*****************************************
// 4 start soap:ActionParameterSet look-for-part_worktable
Declaration(NamedIndividual(:look-for-part_worktable))
ClassAssertion(soap:ActionParameterSet :look-for-part_worktable)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :look-for-part_worktable
                      "WorkTable"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :look-for-part_worktable
                      "5"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasLookForPart_ActionParameterSet
                        :look-for-part :look-for-part_endeffector)

//*****************************************
// 4 start soap:ActionParameterSet look-for-part_endeffector
Declaration(NamedIndividual(:look-for-part_endeffector))
ClassAssertion(soap:ActionParameterSet :look-for-part_endeffector)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :look-for-part_endeffector
                      "EndEffector"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :look-for-part_endeffector
                      "6"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasLookForPart_Precondition
                        :look-for-part :look-for-part_precondition)

//*****************************************
// 4 start soap:PreconditionLookForPart look-for-part_precondition
Declaration(NamedIndividual(:look-for-part_precondition))
ClassAssertion(soap:PreconditionLookForPart :look-for-part_precondition)
ObjectPropertyAssertion(soap:hasPreconditionLookForPart_EEffLocRobot
                        :look-for-part_precondition :endeffector-location-robot)
ObjectPropertyAssertion(soap:hasPreconditionLookForPart_RobotEmpty
                        :look-for-part_precondition :robot-empty)
ObjectPropertyAssertion(soap:hasPreconditionLookForPart_RobotWithEEff
                        :look-for-part_precondition :robot-with-endeffector)
ObjectPropertyAssertion(soap:hasPreconditionLookForPart_OnWorktableKit
                        :look-for-part_precondition :on-worktable-kit)
ObjectPropertyAssertion(soap:hasPreconditionLookForPart_PartLocPartsTray
                        :look-for-part_precondition :part-location-partstray)
ObjectPropertyAssertion(soap:hasPreconditionLookForPart_KitLocWorktable
                        :look-for-part_precondition :kit-location-worktable)
ObjectPropertyAssertion(soap:hasPreconditionLookForPart_EEffForPart
                        :look-for-part_precondition :endeffector-type-part)
ObjectPropertyAssertion(soap:hasPreconditionLookForPart_PartsTrayNotEmpty
                        :look-for-part_precondition :partstray-not-empty)
// 4 end soap:PreconditionLookForPart
//*****************************************

ObjectPropertyAssertion(soap:hasLookForPart_Effect
                        :look-for-part :look-for-part_effect)

//*****************************************
// 4 start soap:EffectLookForPart look-for-part_effect
Declaration(NamedIndividual(:look-for-part_effect))
ClassAssertion(soap:EffectLookForPart :look-for-part_effect)
ObjectPropertyAssertion(soap:hasEffectLookForPart_FoundPart
                        :look-for-part_effect :found-part)
// 4 end soap:EffectLookForPart
//*****************************************

// 3 end soap:LookForPart
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_TakePart
                        :kitting-domain :take-part)

//*****************************************
// 3 start soap:TakePart take-part
Declaration(NamedIndividual(:take-part))
ClassAssertion(soap:TakePart :take-part)
ObjectPropertyAssertion(soap:hasTakePart_ActionParameterSet
                        :take-part :take-part_robot)

//*****************************************
// 4 start soap:ActionParameterSet take-part_robot
Declaration(NamedIndividual(:take-part_robot))
ClassAssertion(soap:ActionParameterSet :take-part_robot)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :take-part_robot
                      "Robot"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :take-part_robot
                      "1"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasTakePart_ActionParameterSet
                        :take-part :take-part_part)

//*****************************************
// 4 start soap:ActionParameterSet take-part_part
Declaration(NamedIndividual(:take-part_part))
ClassAssertion(soap:ActionParameterSet :take-part_part)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :take-part_part
                      "Part"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :take-part_part
                      "2"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasTakePart_ActionParameterSet
                        :take-part :take-part_partstray)

//*****************************************
// 4 start soap:ActionParameterSet take-part_partstray
Declaration(NamedIndividual(:take-part_partstray))
ClassAssertion(soap:ActionParameterSet :take-part_partstray)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :take-part_partstray
                      "PartsTray"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :take-part_partstray
                      "3"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasTakePart_ActionParameterSet
                        :take-part :take-part_endeffector)

//*****************************************
// 4 start soap:ActionParameterSet take-part_endeffector
Declaration(NamedIndividual(:take-part_endeffector))
ClassAssertion(soap:ActionParameterSet :take-part_endeffector)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :take-part_endeffector
                      "EndEffector"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :take-part_endeffector
                      "4"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasTakePart_ActionParameterSet
                        :take-part :take-part_worktable)

//*****************************************
// 4 start soap:ActionParameterSet take-part_worktable
Declaration(NamedIndividual(:take-part_worktable))
ClassAssertion(soap:ActionParameterSet :take-part_worktable)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :take-part_worktable
                      "WorkTable"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :take-part_worktable
                      "5"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasTakePart_ActionParameterSet
                        :take-part :take-part_kit)

//*****************************************
// 4 start soap:ActionParameterSet take-part_kit
Declaration(NamedIndividual(:take-part_kit))
ClassAssertion(soap:ActionParameterSet :take-part_kit)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :take-part_kit
                      "Kit"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :take-part_kit
                      "6"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasTakePart_Precondition
                        :take-part :take-part_precondition)

//*****************************************
// 4 start soap:PreconditionTakePart take-part_precondition
Declaration(NamedIndividual(:take-part_precondition))
ClassAssertion(soap:PreconditionTakePart :take-part_precondition)
ObjectPropertyAssertion(soap:hasPreconditionTakePart_PartLocPartsTray
                        :take-part_precondition :part-location-partstray)
ObjectPropertyAssertion(soap:hasPreconditionTakePart_EEffLocRobot
                        :take-part_precondition :endeffector-location-robot)
ObjectPropertyAssertion(soap:hasPreconditionTakePart_RobotEmpty
                        :take-part_precondition :robot-empty)
ObjectPropertyAssertion(soap:hasPreconditionTakePart_RobotWithEEff
                        :take-part_precondition :robot-with-endeffector)
ObjectPropertyAssertion(soap:hasPreconditionTakePart_OnWorktableKit
                        :take-part_precondition :on-worktable-kit)
ObjectPropertyAssertion(soap:hasPreconditionTakePart_KitLocWorktable
                        :take-part_precondition :kit-location-worktable)
ObjectPropertyAssertion(soap:hasPreconditionTakePart_EEffForPart
                        :take-part_precondition :endeffector-type-part)
ObjectPropertyAssertion(soap:hasPreconditionTakePart_FoundPart
                        :take-part_precondition :found-part)
ObjectPropertyAssertion(soap:hasPreconditionTakePart_PartsTrayNotEmpty
                        :take-part_precondition :partstray-not-empty)
ObjectPropertyAssertion(soap:hasPreconditionTakePart_PartsTrayHasPart
                        :take-part_precondition :partstray-has-part)
// 4 end soap:PreconditionTakePart
//*****************************************

ObjectPropertyAssertion(soap:hasTakePart_Effect
                        :take-part :take-part_effect)

//*****************************************
// 4 start soap:EffectTakePart take-part_effect
Declaration(NamedIndividual(:take-part_effect))
ClassAssertion(soap:EffectTakePart :take-part_effect)
ObjectPropertyAssertion(soap:hasEffectTakePart_PartLocRobot
                        :take-part_effect :part-location-robot)
ObjectPropertyAssertion(soap:hasEffectTakePart_RobotHoldsPart
                        :take-part_effect :robot-holds-part)
ObjectPropertyAssertion(soap:hasEffectTakePart_NotPartLocPartsTray
                        :take-part_effect :not-part-location-partstray)
ObjectPropertyAssertion(soap:hasEffectTakePart_NotRobotEmpty
                        :take-part_effect :not-robot-empty)
ObjectPropertyAssertion(soap:hasEffectTakePart_DecreaseTakePart
                        :take-part_effect :decrease_take-part)

//*****************************************
// 5 start soap:DecreaseTakePart decrease_take-part
Declaration(NamedIndividual(:decrease_take-part))
ClassAssertion(soap:DecreaseTakePart :decrease_take-part)
DataPropertyAssertion(soap:hasFunctionOperation_Expression :decrease_take-part
                      "decrease"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasFunctionOperation_Value :decrease_take-part
                      "1"^^xsd:positiveInteger)
ObjectPropertyAssertion(soap:hasDecreaseTakePart_Function
                        :decrease_take-part :quantity-partstray)
// 5 end soap:DecreaseTakePart
//*****************************************

// 4 end soap:EffectTakePart
//*****************************************

// 3 end soap:TakePart
//*****************************************

ObjectPropertyAssertion(soap:hasDomain_PutPart
                        :kitting-domain :put-part)

//*****************************************
// 3 start soap:PutPart put-part
Declaration(NamedIndividual(:put-part))
ClassAssertion(soap:PutPart :put-part)
ObjectPropertyAssertion(soap:hasPutPart_ActionParameterSet
                        :put-part :put-part_robot)

//*****************************************
// 4 start soap:ActionParameterSet put-part_robot
Declaration(NamedIndividual(:put-part_robot))
ClassAssertion(soap:ActionParameterSet :put-part_robot)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :put-part_robot
                      "Robot"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :put-part_robot
                      "1"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasPutPart_ActionParameterSet
                        :put-part :put-part_part)

//*****************************************
// 4 start soap:ActionParameterSet put-part_part
Declaration(NamedIndividual(:put-part_part))
ClassAssertion(soap:ActionParameterSet :put-part_part)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :put-part_part
                      "Part"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :put-part_part
                      "2"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasPutPart_ActionParameterSet
                        :put-part :put-part_kit)

//*****************************************
// 4 start soap:ActionParameterSet put-part_kit
Declaration(NamedIndividual(:put-part_kit))
ClassAssertion(soap:ActionParameterSet :put-part_kit)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :put-part_kit
                      "Kit"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :put-part_kit
                      "3"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasPutPart_ActionParameterSet
                        :put-part :put-part_worktable)

//*****************************************
// 4 start soap:ActionParameterSet put-part_worktable
Declaration(NamedIndividual(:put-part_worktable))
ClassAssertion(soap:ActionParameterSet :put-part_worktable)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :put-part_worktable
                      "WorkTable"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :put-part_worktable
                      "4"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasPutPart_ActionParameterSet
                        :put-part :put-part_partstray)

//*****************************************
// 4 start soap:ActionParameterSet put-part_partstray
Declaration(NamedIndividual(:put-part_partstray))
ClassAssertion(soap:ActionParameterSet :put-part_partstray)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameter :put-part_partstray
                      "PartsTray"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasActionParameterSet_ActionParameterPosition :put-part_partstray
                      "5"^^xsd:positiveInteger)
// 4 end soap:ActionParameterSet
//*****************************************

ObjectPropertyAssertion(soap:hasPutPart_Precondition
                        :put-part :put-part_precondition)

//*****************************************
// 4 start soap:PreconditionPutPart put-part_precondition
Declaration(NamedIndividual(:put-part_precondition))
ClassAssertion(soap:PreconditionPutPart :put-part_precondition)
ObjectPropertyAssertion(soap:hasPreconditionPutPart_PartLocRobot
                        :put-part_precondition :part-location-robot)
ObjectPropertyAssertion(soap:hasPreconditionPutPart_RobotHoldsPart
                        :put-part_precondition :robot-holds-part)
ObjectPropertyAssertion(soap:hasPreconditionPutPart_OnWorktableKit
                        :put-part_precondition :on-worktable-kit)
ObjectPropertyAssertion(soap:hasPreconditionPutPart_OriginPart
                        :put-part_precondition :origin-part)
ObjectPropertyAssertion(soap:hasPreconditionPutPart_KitLocWorktable
                        :put-part_precondition :kit-location-worktable)
ObjectPropertyAssertion(soap:hasPreconditionPutPart_QuantityLessThanCapacity
                        :put-part_precondition :put-part_quantity-less-than-capacity)

//*****************************************
// 5 start soap:QuantityLessThanCapacity put-part_quantity-less-than-capacity
Declaration(NamedIndividual(:put-part_quantity-less-than-capacity))
ClassAssertion(soap:QuantityLessThanCapacity :put-part_quantity-less-than-capacity)
ObjectPropertyAssertion(soap:hasQuantityLessThanCapacity_F1
                        :put-part_quantity-less-than-capacity :quantity-kit)
ObjectPropertyAssertion(soap:hasQuantityLessThanCapacity_F2
                        :put-part_quantity-less-than-capacity :capacity-kit)
// 5 end soap:QuantityLessThanCapacity
//*****************************************

// 4 end soap:PreconditionPutPart
//*****************************************

ObjectPropertyAssertion(soap:hasPutPart_Effect
                        :put-part :put-part_effect)

//*****************************************
// 4 start soap:EffectPutPart put-part_effect
Declaration(NamedIndividual(:put-part_effect))
ClassAssertion(soap:EffectPutPart :put-part_effect)
ObjectPropertyAssertion(soap:hasEffectPutPart_PartLocKit
                        :put-part_effect :part-location-kit)
ObjectPropertyAssertion(soap:hasEffectPutPart_RobotEmpty
                        :put-part_effect :robot-empty)
ObjectPropertyAssertion(soap:hasEffectPutPart_NotPartLocRobot
                        :put-part_effect :not-part-location-robot)
ObjectPropertyAssertion(soap:hasEffectPutPart_NotRobotHoldsPart
                        :put-part_effect :not-robot-holds-part)
ObjectPropertyAssertion(soap:hasEffectPutPart_NotFoundPart
                        :put-part_effect :not-found-part)
ObjectPropertyAssertion(soap:hasEffectPutPart_IncreasePutPart
                        :put-part_effect :increase_put-part)

//*****************************************
// 5 start soap:IncreasePutPart increase_put-part
Declaration(NamedIndividual(:increase_put-part))
ClassAssertion(soap:IncreasePutPart :increase_put-part)
DataPropertyAssertion(soap:hasFunctionOperation_Expression :increase_put-part
                      "increase"^^xsd:NMTOKEN)
DataPropertyAssertion(soap:hasFunctionOperation_Value :increase_put-part
                      "1"^^xsd:positiveInteger)
ObjectPropertyAssertion(soap:hasIncreasePutPart_Function
                        :increase_put-part :quantity-partstray)
// 5 end soap:IncreasePutPart
//*****************************************

// 4 end soap:EffectPutPart
//*****************************************

// 3 end soap:PutPart
//*****************************************

// 2 end soap:Domain
//*****************************************

ObjectPropertyAssertion(soap:hasSOAP_InContactWith
                        :soap :InContactWith)

//*****************************************
// 2 start soap:InContactWith InContactWith
Declaration(NamedIndividual(:InContactWith))
ClassAssertion(soap:InContactWith :InContactWith)
DataPropertyAssertion(soap:hasPositiveStateRelation_RCC8Set :InContactWith
                      "X-EC or Y-EC or Z-EC"^^xsd:string)
// 2 end soap:InContactWith
//*****************************************

ObjectPropertyAssertion(soap:hasSOAP_UnderWithContact
                        :soap :UnderWithContact)

//*****************************************
// 2 start soap:UnderWithContact UnderWithContact
Declaration(NamedIndividual(:UnderWithContact))
ClassAssertion(soap:UnderWithContact :UnderWithContact)
DataPropertyAssertion(soap:hasPositiveStateRelation_RCC8Set :UnderWithContact
                      "Z-EC and Z-Minus and (X-NTPP or X-NTPPi or X-PO or X-TPP or X-TPPi) and (Y-NTPP or Y-NTPPi or Y-PO or Y-TPP or Y-TPPi)"^^xsd:string)
// 2 end soap:UnderWithContact
//*****************************************

ObjectPropertyAssertion(soap:hasSOAP_PartiallyIn
                        :soap :PartiallyIn)

//*****************************************
// 2 start soap:PartiallyIn PartiallyIn
Declaration(NamedIndividual(:PartiallyIn))
ClassAssertion(soap:PartiallyIn :PartiallyIn)
DataPropertyAssertion(soap:hasPositiveStateRelation_RCC8Set :PartiallyIn
                      "(Z-Plus and (Z-NTPP or Z-NTPPi or Z-PO or Z-TPP or Z-TPPi)) and (X-NTPP or X-NTPPi or X-TPP or X-TPPi) and (Y-NTPP or Y-NTPPi or Y-TPP or Y-TPPi)"^^xsd:string)
// 2 end soap:PartiallyIn
//*****************************************

ObjectPropertyAssertion(soap:hasSOAP_OnTopWithContact
                        :soap :OnTopWithContact)

//*****************************************
// 2 start soap:OnTopWithContact OnTopWithContact
Declaration(NamedIndividual(:OnTopWithContact))
ClassAssertion(soap:OnTopWithContact :OnTopWithContact)
DataPropertyAssertion(soap:hasPositiveStateRelation_RCC8Set :OnTopWithContact
                      "Z-EC and Z-Plus and (X-NTPP or X-NTPPi or X-PO or X-TPP or X-TPPi) and (Y-NTPP or Y-NTPPi or Y-PO or Y-TPP or Y-TPPi)"^^xsd:string)
// 2 end soap:OnTopWithContact
//*****************************************

ObjectPropertyAssertion(soap:hasSOAP_ContainedIn
                        :soap :ContainedIn)

//*****************************************
// 2 start soap:ContainedIn ContainedIn
Declaration(NamedIndividual(:ContainedIn))
ClassAssertion(soap:ContainedIn :ContainedIn)
DataPropertyAssertion(soap:hasPositiveStateRelation_RCC8Set :ContainedIn
                      "(X-TPP or X-NTPP) and (Y-TPP or Y-NTPP) and (Z-TPP or Z-NTPP)"^^xsd:string)
// 2 end soap:ContainedIn
//*****************************************

ObjectPropertyAssertion(soap:hasSOAP_ContainedInLBWK
                        :soap :ContainedInLBWK)

//*****************************************
// 2 start soap:ContainedInLBWK ContainedInLBWK
Declaration(NamedIndividual(:ContainedInLBWK))
ClassAssertion(soap:ContainedInLBWK :ContainedInLBWK)
DataPropertyAssertion(soap:hasPositiveStateRelation_RCC8Set :ContainedInLBWK
                      "(X-TPP or X-NTPP) and (Y-TPP or Y-NTPP) and (Z-TPP or Z-NTPP)"^^xsd:string)
// 2 end soap:ContainedInLBWK
//*****************************************

ObjectPropertyAssertion(soap:hasSOAP_OnTopOf
                        :soap :OnTopOf)

//*****************************************
// 2 start soap:OnTopOf OnTopOf
Declaration(NamedIndividual(:OnTopOf))
ClassAssertion(soap:OnTopOf :OnTopOf)
DataPropertyAssertion(soap:hasPositiveStateRelation_RCC8Set :OnTopOf
                      "Greater-Z and (X-EQ or X-NTPP or X-TPP or X-PO or X-NTPPi  or X-TPPi) and (Y-EQ or Y-NTPP or Y-TPP or Y-PO or Y-NTPPi or Y-TPPi)"^^xsd:string)
// 2 end soap:OnTopOf
//*****************************************

ObjectPropertyAssertion(soap:hasSOAP_Under
                        :soap :Under)

//*****************************************
// 2 start soap:Under Under
Declaration(NamedIndividual(:Under))
ClassAssertion(soap:Under :Under)
DataPropertyAssertion(soap:hasPositiveStateRelation_RCC8Set :Under
                      "Smaller-Z and (X-EC or X-NTPP or X-TPP or X-PO or X-NTPPi or X-TPPi) and (Y-EC or Y-NTPP or Y-TPP or Y-PO or Y-NTPPi or Y-TPPi)"^^xsd:string)
// 2 end soap:Under
//*****************************************

ObjectPropertyAssertion(soap:hasSOAP_PartiallyInAndInContactWith
                        :soap :Partially-In-And-In-Contact-With)

//*****************************************
// 2 start soap:PartiallyInAndInContactWith Partially-In-And-In-Contact-With
Declaration(NamedIndividual(:Partially-In-And-In-Contact-With))
ClassAssertion(soap:PartiallyInAndInContactWith :Partially-In-And-In-Contact-With)
DataPropertyAssertion(soap:hasPositiveStateRelation_RCC8Set :Partially-In-And-In-Contact-With
                      "((Z-Plus and (Z-NTPP or Z-NTPPi or Z-PO or Z-TPP or Z-TPPi)) and (X-NTPP or X-NTPPi or X-TPP or X-TPPi) and (Y-NTPP or Y-NTPPi or Y-TPP or Y-TPPi)) and (X-EC or Y-EC or Z-EC)"^^xsd:string)
// 2 end soap:PartiallyInAndInContactWith
//*****************************************

ObjectPropertyAssertion(soap:hasSOAP_NotInContactWith
                        :soap :NotInContactWith)

//*****************************************
// 2 start soap:NotInContactWith NotInContactWith
Declaration(NamedIndividual(:NotInContactWith))
ClassAssertion(soap:NotInContactWith :NotInContactWith)
ObjectPropertyAssertion(soap:hasNotInContactWith_StateRelation
                        :NotInContactWith :InContactWith)
// 2 end soap:NotInContactWith
//*****************************************

ObjectPropertyAssertion(soap:hasSOAP_NotUnderWithContact
                        :soap :NotUnderWithContact)

//*****************************************
// 2 start soap:NotUnderWithContact NotUnderWithContact
Declaration(NamedIndividual(:NotUnderWithContact))
ClassAssertion(soap:NotUnderWithContact :NotUnderWithContact)
ObjectPropertyAssertion(soap:hasNotUnderWithContact_StateRelation
                        :NotUnderWithContact :UnderWithContact)
// 2 end soap:NotUnderWithContact
//*****************************************

ObjectPropertyAssertion(soap:hasSOAP_NotOnTopWithContact
                        :soap :NotOnTopWithContact)

//*****************************************
// 2 start soap:NotOnTopWithContact NotOnTopWithContact
Declaration(NamedIndividual(:NotOnTopWithContact))
ClassAssertion(soap:NotOnTopWithContact :NotOnTopWithContact)
ObjectPropertyAssertion(soap:hasNotOnTopWithContact_StateRelation
                        :NotOnTopWithContact :OnTopWithContact)
// 2 end soap:NotOnTopWithContact
//*****************************************

ObjectPropertyAssertion(soap:hasSOAP_NotContainedIn
                        :soap :NotContainedIn)

//*****************************************
// 2 start soap:NotContainedIn NotContainedIn
Declaration(NamedIndividual(:NotContainedIn))
ClassAssertion(soap:NotContainedIn :NotContainedIn)
ObjectPropertyAssertion(soap:hasNotContainedIn_StateRelation
                        :NotContainedIn :ContainedIn)
// 2 end soap:NotContainedIn
//*****************************************

// 1 end soap:SOAP
//*****************************************


//*****************************************
// soap:ActionParameterSet individuals 
DifferentIndividuals(
 :attach-endeffector_endeffector
 :attach-endeffector_endeffectorchangingstation
 :attach-endeffector_endeffectorholder
 :attach-endeffector_robot
 :create-kit_kit
 :create-kit_kittray
 :create-kit_worktable
 :look-for-part_endeffector
 :look-for-part_kit
 :look-for-part_part
 :look-for-part_partstray
 :look-for-part_robot
 :look-for-part_worktable
 :put-kit_kit
 :put-kit_lbwk
 :put-kit_robot
 :put-kittray_kittray
 :put-kittray_robot
 :put-kittray_worktable
 :put-part_kit
 :put-part_part
 :put-part_partstray
 :put-part_robot
 :put-part_worktable
 :remove-endeffector_endeffector
 :remove-endeffector_endeffectorchangingstation
 :remove-endeffector_endeffectorholder
 :remove-endeffector_robot
 :take-kit_endeffector
 :take-kit_kit
 :take-kit_robot
 :take-kit_worktable
 :take-kittray_endeffector
 :take-kittray_kittray
 :take-kittray_lbwekt
 :take-kittray_robot
 :take-kittray_worktable
 :take-part_endeffector
 :take-part_kit
 :take-part_part
 :take-part_partstray
 :take-part_robot
 :take-part_worktable)

//*****************************************
// :BoxyShape individuals 
DifferentIndividuals(
 :shape_changing_station_base
 :shape_kit_box
 :shape_kit_tray
 :shape_part_a
 :shape_part_b
 :shape_part_c
 :shape_parts_tray)

//*****************************************
// :EndEffectorHolder individuals 
DifferentIndividuals(
 :part_gripper_holder
 :tray_gripper_holder)

//*****************************************
// :KitDesign individuals 
DifferentIndividuals(
 :kit_design_a2b1c1
 :kit_design_a2b2c1)

//*****************************************
// :KitTray individuals 
DifferentIndividuals(
 :kit_tray_1
 :kit_tray_2
 :kit_tray_3)

//*****************************************
// :LargeContainer individuals 
DifferentIndividuals(
 :empty_kit_tray_box
 :finished_kit_box)

//*****************************************
// :PartRefAndPose individuals 
DifferentIndividuals(
 :part_ref_and_pose_kit_a2b1c1_a_1
 :part_ref_and_pose_kit_a2b1c1_a_2
 :part_ref_and_pose_kit_a2b1c1_b_1
 :part_ref_and_pose_kit_a2b1c1_c_1
 :part_ref_and_pose_kit_a2b2c1_a_1
 :part_ref_and_pose_kit_a2b2c1_a_2
 :part_ref_and_pose_kit_a2b2c1_b_1
 :part_ref_and_pose_kit_a2b2c1_b_2
 :part_ref_and_pose_kit_a2b2c1_c_1)

//*****************************************
// :Part individuals 
DifferentIndividuals(
 :part_a_1
 :part_a_2
 :part_a_3
 :part_a_4
 :part_b_1
 :part_b_2
 :part_b_3
 :part_b_4
 :part_b_5
 :part_b_6
 :part_b_7
 :part_b_8
 :part_c_1
 :part_c_2
 :part_c_3
 :part_c_4
 :part_c_5
 :part_c_6
 :part_c_7
 :part_c_8)

//*****************************************
// :PartsTray individuals 
DifferentIndividuals(
 :part_a_tray
 :part_b_tray
 :part_c_tray)

//*****************************************
// :Point individuals 
DifferentIndividuals(
 :changing_station_base_point
 :changing_station_point
 :empty_kit_tray_box_point
 :empty_kit_tray_supply_point
 :finished_kit_box_point
 :finished_kit_receiver_point
 :kit_tray_1_point
 :kit_tray_2_point
 :kit_tray_3_point
 :part_a_1_point
 :part_a_2_point
 :part_a_3_point
 :part_a_4_point
 :part_a_tray_point
 :part_b_1_point
 :part_b_2_point
 :part_b_3_point
 :part_b_4_point
 :part_b_5_point
 :part_b_6_point
 :part_b_7_point
 :part_b_8_point
 :part_b_tray_point
 :part_c_1_point
 :part_c_2_point
 :part_c_3_point
 :part_c_4_point
 :part_c_5_point
 :part_c_6_point
 :part_c_7_point
 :part_c_8_point
 :part_c_tray_point
 :part_gripper_holder_point
 :part_gripper_point
 :point_kit_a2b1c1_a_1
 :point_kit_a2b1c1_a_2
 :point_kit_a2b1c1_b_1
 :point_kit_a2b1c1_c_1
 :point_kit_a2b2c1_a_1
 :point_kit_a2b2c1_a_2
 :point_kit_a2b2c1_b_1
 :point_kit_a2b2c1_b_2
 :point_kit_a2b2c1_c_1
 :point_max
 :point_min
 :robot_point
 :tray_gripper_holder_point
 :work_table_point)

//*****************************************
// :PoseLocationIn individuals 
DifferentIndividuals(
 :part_a_1_pose
 :part_a_2_pose
 :part_a_3_pose
 :part_a_4_pose
 :part_b_1_pose
 :part_b_2_pose
 :part_b_3_pose
 :part_b_4_pose
 :part_b_5_pose
 :part_b_6_pose
 :part_b_7_pose
 :part_b_8_pose
 :part_c_1_pose
 :part_c_2_pose
 :part_c_3_pose
 :part_c_4_pose
 :part_c_5_pose
 :part_c_6_pose
 :part_c_7_pose
 :part_c_8_pose)

//*****************************************
// :PoseOnlyLocation individuals 
DifferentIndividuals(
 :changing_station_base_pose
 :changing_station_pose
 :empty_kit_tray_box_pose
 :empty_kit_tray_supply_pose
 :finished_kit_box_pose
 :finished_kit_receiver_pose
 :kit_tray_1_pose
 :kit_tray_2_pose
 :kit_tray_3_pose
 :part_a_tray_pose
 :part_b_tray_pose
 :part_c_tray_pose
 :part_gripper_holder_pose
 :part_gripper_pose
 :robot_pose
 :tray_gripper_holder_pose
 :work_table_pose)

//*****************************************
// :StockKeepingUnit individuals 
DifferentIndividuals(
 :stock_keeping_unit_kit_box
 :stock_keeping_unit_kit_tray
 :stock_keeping_unit_part_a
 :stock_keeping_unit_part_b
 :stock_keeping_unit_part_c
 :stock_keeping_unit_parts_tray)

//*****************************************
// :VacuumEffectorSingleCup individuals 
DifferentIndividuals(
 :part_gripper
 :tray_gripper)

//*****************************************
// :Vector individuals 
DifferentIndividuals(
 :changing_station_base_x_axis
 :changing_station_base_z_axis
 :changing_station_x_axis
 :changing_station_z_axis
 :empty_kit_tray_box_x_axis
 :empty_kit_tray_box_z_axis
 :empty_kit_tray_supply_x_axis
 :empty_kit_tray_supply_z_axis
 :finished_kit_box_x_axis
 :finished_kit_box_z_axis
 :finished_kit_receiver_x_axis
 :finished_kit_receiver_z_axis
 :kit_tray_1_x_axis
 :kit_tray_1_z_axis
 :kit_tray_2_x_axis
 :kit_tray_2_z_axis
 :kit_tray_3_x_axis
 :kit_tray_3_z_axis
 :part_a_1_x_axis
 :part_a_1_z_axis
 :part_a_2_x_axis
 :part_a_2_z_axis
 :part_a_3_x_axis
 :part_a_3_z_axis
 :part_a_4_x_axis
 :part_a_4_z_axis
 :part_a_tray_x_axis
 :part_a_tray_z_axis
 :part_b_1_x_axis
 :part_b_1_z_axis
 :part_b_2_x_axis
 :part_b_2_z_axis
 :part_b_3_x_axis
 :part_b_3_z_axis
 :part_b_4_x_axis
 :part_b_4_z_axis
 :part_b_5_x_axis
 :part_b_5_z_axis
 :part_b_6_x_axis
 :part_b_6_z_axis
 :part_b_7_x_axis
 :part_b_7_z_axis
 :part_b_8_x_axis
 :part_b_8_z_axis
 :part_b_tray_x_axis
 :part_b_tray_z_axis
 :part_c_1_x_axis
 :part_c_1_z_axis
 :part_c_2_x_axis
 :part_c_2_z_axis
 :part_c_3_x_axis
 :part_c_3_z_axis
 :part_c_4_x_axis
 :part_c_4_z_axis
 :part_c_5_x_axis
 :part_c_5_z_axis
 :part_c_6_x_axis
 :part_c_6_z_axis
 :part_c_7_x_axis
 :part_c_7_z_axis
 :part_c_8_x_axis
 :part_c_8_z_axis
 :part_c_tray_x_axis
 :part_c_tray_z_axis
 :part_gripper_holder_x_axis
 :part_gripper_holder_z_axis
 :part_gripper_x_axis
 :part_gripper_z_axis
 :robot_x_axis
 :robot_z_axis
 :tray_gripper_holder_x_axis
 :tray_gripper_holder_z_axis
 :work_table_x_axis
 :work_table_z_axis
 :x_axis_kit_a2b1c1_a_1
 :x_axis_kit_a2b1c1_a_2
 :x_axis_kit_a2b1c1_b_1
 :x_axis_kit_a2b1c1_c_1
 :x_axis_kit_a2b2c1_a_1
 :x_axis_kit_a2b2c1_a_2
 :x_axis_kit_a2b2c1_b_1
 :x_axis_kit_a2b2c1_b_2
 :x_axis_kit_a2b2c1_c_1
 :z_axis_kit_a2b1c1_a_1
 :z_axis_kit_a2b1c1_a_2
 :z_axis_kit_a2b1c1_b_1
 :z_axis_kit_a2b1c1_c_1
 :z_axis_kit_a2b2c1_a_1
 :z_axis_kit_a2b2c1_a_2
 :z_axis_kit_a2b2c1_b_1
 :z_axis_kit_a2b2c1_b_2
 :z_axis_kit_a2b2c1_c_1)
)
