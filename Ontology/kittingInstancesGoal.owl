Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)
Prefix(:=<http://www.nist.gov/el/ontologies/kittingInstances.owl#>)
Prefix(:=<http://www.nist.gov/el/ontologies/kittingClasses.owl#>)

Ontology(<http://www.nist.gov/el/ontologies/kittingInstances.owl>
Import(<file:kittingClasses.owl>)
Annotation(rdfs:comment
  "This is an OWL data file describing a goal state for a specific
   kitting workstation. The workstation is as described in Zeit Kootbally's
   description discussed in the IPMAS meeting on February 28.
   This file uses the kittingClasses.owl ontology in the file
   kittingClasses.owl")
Annotation(rdfs:comment
  "The kitting workstation (KittingWorkstation1) goal state has the
   following items
   - a robot (Robot1), which has:
     a vacuum effector for gripping trays (TrayGripper)
     a work volume (RobotWorkVolume) with one BoxVolume (BoxVolume1)
   - a work table (WorkTable1)
   - an end effector changing station (ChangingStation1) with two
     end effector holders (PartGripperHolder and TrayGripperHolder)
   - another vacuum effector (PartGripper), which is being
     held by the PartGripperHolder on the changing station.
   - an empty list of other obstacles (OtherObstacles)
   - a list of StockKeepingUnits (StockKeepingList1) with
     six StockKeepingUnits
   - a list of KitDesigns with one KitDesign
   - a PartsTray with no parts (that formerly held two PartAs)
   - a PartsTray with no parts (that formerly held one PartB)
   - a PartsTray with no parts (that formerly held one PartC)
   - a box for KitTrays with no KitTrays in it (that formerly held one KitTray)
   - a box of finished KitInstances with KitInstance1 in it
   The data is complete for these items, including many individuals not
   listed above (mostly Poses, Points, and RollPitchYaws.")

// ChangingStation1 ****************************************************
Declaration(NamedIndividual(:ChangingStation1))
ClassAssertion(:EndEffectorChangingStation :ChangingStation1)
ObjectPropertyAssertion(:hasSolidObject_PhysicalLocation :ChangingStation1
                        :ChangingStationPose)
ObjectPropertyAssertion(:hasChangingStation_Holders :ChangingStation1
                        :EndEffectorHolderList1)


// EmptyKitTrayBox *****************************************************
Declaration(NamedIndividual(:EmptyKitTrayBox))
ClassAssertion(:LargeContainer :EmptyKitTrayBox)
DataPropertyAssertion(:hasLargeContainer_SkuRef :EmptyKitTrayBox
                      "SkuIdKitBox"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasLargeContainer_SerialNumber :EmptyKitTrayBox
                      "4"^^xsd:NMTOKEN)
ObjectPropertyAssertion(:hasSolidObject_PhysicalLocation :EmptyKitTrayBox
                        :EmptyKitTrayBoxPose)
DataPropertyAssertion(:hasBox_Height :EmptyKitTrayBox "0.8"^^:positiveDecimal)
DataPropertyAssertion(:hasBox_Length :EmptyKitTrayBox "0.9"^^:positiveDecimal)
DataPropertyAssertion(:hasBox_Width :EmptyKitTrayBox "0.7"^^:positiveDecimal)


// EmptyKitTraySupply **************************************************
Declaration(NamedIndividual(:EmptyKitTraySupply))
ClassAssertion(:LargeBoxWithEmptyKitTrays :EmptyKitTraySupply)
ObjectPropertyAssertion(:hasSolidObject_PhysicalLocation :EmptyKitTraySupply
                        :EmptyKitTraySupplyPose)
ObjectPropertyAssertion(:hasLargeBoxWithEmptyKitTrays_Box :EmptyKitTraySupply
                        :EmptyKitTrayBox)


// EndEffectorHolderList1 **********************************************
Declaration(NamedIndividual(:EndEffectorHolderList1))
ClassAssertion(:EndEffectorHolderList :EndEffectorHolderList1)
ObjectPropertyAssertion(:listsEndEffectorHolder :EndEffectorHolderList1
                        :PartGripperHolder)
ObjectPropertyAssertion(:listsEndEffectorHolder :EndEffectorHolderList1
                        :TrayGripperHolder)


// EndEffectorRefList1 *************************************************
Declaration(NamedIndividual(:EndEffectorRefList1))
ClassAssertion(:EndEffectorRefList :EndEffectorRefList1)
DataPropertyAssertion(:listsEndEffectorRef :EndEffectorRefList1
                      "ThePartGripper"^^xsd:NMTOKEN)


// EndEffectorRefList2 *************************************************
Declaration(NamedIndividual(:EndEffectorRefList2))
ClassAssertion(:EndEffectorRefList :EndEffectorRefList2)
DataPropertyAssertion(:listsEndEffectorRef :EndEffectorRefList2
                      "TheTrayGripper"^^xsd:NMTOKEN)


// EndEffectorRefList3 *************************************************
AnnotationAssertion(rdfs:comment :EndEffectorRefList3
  "This is to be associated with SKUs for the LargeContainers. It is
   empty since no gripper can lift a LargeContainer.")
Declaration(NamedIndividual(:EndEffectorRefList3))
ClassAssertion(:EndEffectorRefList :EndEffectorRefList3)


// FinishedKitBox ******************************************************
Declaration(NamedIndividual(:FinishedKitBox))
ClassAssertion(:LargeContainer :FinishedKitBox)
DataPropertyAssertion(:hasLargeContainer_SkuRef :FinishedKitBox
                      "SkuIdKitBox"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasLargeContainer_SerialNumber :FinishedKitBox
                      "5"^^xsd:NMTOKEN)
ObjectPropertyAssertion(:hasSolidObject_PhysicalLocation :FinishedKitBox
                        :FinishedKitBoxPose)
DataPropertyAssertion(:hasBox_Height :FinishedKitBox "0.8"^^:positiveDecimal)
DataPropertyAssertion(:hasBox_Length :FinishedKitBox "0.9"^^:positiveDecimal)
DataPropertyAssertion(:hasBox_Width :FinishedKitBox "0.7"^^:positiveDecimal)


// FinishedKitReceiver *************************************************
Declaration(NamedIndividual(:FinishedKitReceiver))
ClassAssertion(:LargeBoxWithKits :FinishedKitReceiver)
ObjectPropertyAssertion(:hasSolidObject_PhysicalLocation :FinishedKitReceiver
                        :FinishedKitReceiverPose)
ObjectPropertyAssertion(:hasLargeBoxWithKits_Box :FinishedKitReceiver
                        :FinishedKitBox)
DataPropertyAssertion(:hasLargeBoxWithKits_Capacity :FinishedKitReceiver
                     "12"^^xsd:positiveInteger)
DataPropertyAssertion(:hasLargeBoxWithKits_KitDesignRef :FinishedKitReceiver
                     "KitDesignA2B1C1"^^xsd:NMTOKEN)
ObjectPropertyAssertion(:hasLargeBoxWithKits_Kits :FinishedKitReceiver
                        :KitInstance1)


// KitDesignA2B1C1 *****************************************************
Declaration(NamedIndividual(:KitDesignA2B1C1))
ClassAssertion(:KitDesign :KitDesignA2B1C1)
DataPropertyAssertion(:hasKitDesign_Id :KitDesignA2B1C1
                      "KitDesignA2B1C1"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasKitDesign_KitTraySkuRef :KitDesignA2B1C1
                      "SkuIdKitTray"^^xsd:NMTOKEN)
ObjectPropertyAssertion(:hasKitDesign_PartPoses :KitDesignA2B1C1
                        :PartRefAndPoseList1)


// KitDesignList1 ******************************************************
Declaration(NamedIndividual(:KitDesignList1))
ClassAssertion(:KitDesignList :KitDesignList1)
ObjectPropertyAssertion(:listsKitDesign :KitDesignList1
                        :KitDesignA2B1C1)


// KitInstance1 ********************************************************
Declaration(NamedIndividual(:KitInstance1))
ClassAssertion(:KitInstance :KitInstance1)
ObjectPropertyAssertion(:hasSolidObject_PhysicalLocation :KitInstance1
                        :KitInstance1Pose)
DataPropertyAssertion(:hasKitInstance_DesignRef :KitInstance1
                      "KitDesignA2B1C1"^^xsd:NMTOKEN)
DataPropertyAssertion(:isKitInstance_Finished :KitInstance1
                      "true"^^xsd:boolean)
ObjectPropertyAssertion(:hasKitInstance_Tray :KitInstance1
                        :KitTray1)
ObjectPropertyAssertion(:hasKitInstance_Parts :KitInstance1
                        :PartA1)
ObjectPropertyAssertion(:hasKitInstance_Parts :KitInstance1
                        :PartA2)
ObjectPropertyAssertion(:hasKitInstance_Parts :KitInstance1
                        :PartB1)
ObjectPropertyAssertion(:hasKitInstance_Parts :KitInstance1
                        :PartC1)


// KitTray1 ************************************************************
Declaration(NamedIndividual(:KitTray1))
ClassAssertion(:KitTray :KitTray1)
ObjectPropertyAssertion(:hasSolidObject_PhysicalLocation :KitTray1
                        :KitTray1NewPose)
DataPropertyAssertion(:hasBox_Height :KitTray1 "0.15"^^:positiveDecimal)
DataPropertyAssertion(:hasBox_Length :KitTray1 "0.5"^^:positiveDecimal)
DataPropertyAssertion(:hasBox_Width :KitTray1 "0.3"^^:positiveDecimal)
DataPropertyAssertion(:hasKitTray_SkuRef :KitTray1 "SkuIdKitTray"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasKitTray_SerialNumber :KitTray1 "1"^^xsd:NMTOKEN)


// PartASupply ********************************************************
Declaration(NamedIndividual(:PartASupply))
ClassAssertion(:PartsTrayWithParts :PartASupply)
ObjectPropertyAssertion(:hasSolidObject_PhysicalLocation :PartASupply
                        :PartASupplyPose)
ObjectPropertyAssertion(:hasPartsTrayWithParts_Tray :PartASupply
                        :PartATray)


// PartATray ********************************************************
Declaration(NamedIndividual(:PartATray))
ClassAssertion(:PartsTray :PartATray)
ObjectPropertyAssertion(:hasSolidObject_PhysicalLocation :PartATray
                        :PartATrayPose)
DataPropertyAssertion(:hasBox_Height :PartATray "0.2"^^:positiveDecimal)
DataPropertyAssertion(:hasBox_Length :PartATray "0.6"^^:positiveDecimal)
DataPropertyAssertion(:hasBox_Width :PartATray "0.3"^^:positiveDecimal)
DataPropertyAssertion(:hasPartsTray_SkuRef :PartATray
                      "SkuIdPartsTray"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasPartsTray_SerialNumber :PartATray "6"^^xsd:NMTOKEN)


// PartA1 ***********************************************************
Declaration(NamedIndividual(:PartA1))
ClassAssertion(:Part :PartA1)
ObjectPropertyAssertion(:hasSolidObject_PhysicalLocation :PartA1
                        :PartA1NewPose)
DataPropertyAssertion(:hasPart_SkuRef :PartA1 "SkuIdPartA"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasPart_SerialNumber :PartA1 "9"^^xsd:NMTOKEN)


// PartA2 ***********************************************************
Declaration(NamedIndividual(:PartA2))
ClassAssertion(:Part :PartA2)
ObjectPropertyAssertion(:hasSolidObject_PhysicalLocation :PartA2
                        :PartA2NewPose)
DataPropertyAssertion(:hasPart_SkuRef :PartA2 "SkuIdPartA"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasPart_SerialNumber :PartA2 "10"^^xsd:NMTOKEN)


// PartBSupply ********************************************************
Declaration(NamedIndividual(:PartBSupply))
ClassAssertion(:PartsTrayWithParts :PartBSupply)
ObjectPropertyAssertion(:hasSolidObject_PhysicalLocation :PartBSupply
                        :PartBSupplyPose)
ObjectPropertyAssertion(:hasPartsTrayWithParts_Tray :PartBSupply
                        :PartBTray)


// PartBTray **********************************************************
Declaration(NamedIndividual(:PartBTray))
ClassAssertion(:PartsTray :PartBTray)
ObjectPropertyAssertion(:hasSolidObject_PhysicalLocation :PartBTray
                        :PartBTrayPose)
DataPropertyAssertion(:hasBox_Height :PartBTray "0.2"^^:positiveDecimal)
DataPropertyAssertion(:hasBox_Length :PartBTray "0.6"^^:positiveDecimal)
DataPropertyAssertion(:hasBox_Width :PartBTray "0.3"^^:positiveDecimal)
DataPropertyAssertion(:hasPartsTray_SkuRef :PartBTray
                      "SkuIdPartsTray"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasPartsTray_SerialNumber :PartBTray "7"^^xsd:NMTOKEN)


// PartB1 ************************************************************
Declaration(NamedIndividual(:PartB1))
ClassAssertion(:Part :PartB1)
ObjectPropertyAssertion(:hasSolidObject_PhysicalLocation :PartB1
                        :PartB1NewPose)
DataPropertyAssertion(:hasPart_SkuRef :PartB1 "SkuIdPartB"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasPart_SerialNumber :PartB1 "13"^^xsd:NMTOKEN)


// PartCSupply *********************************************************
Declaration(NamedIndividual(:PartCSupply))
ClassAssertion(:PartsTrayWithParts :PartCSupply)
ObjectPropertyAssertion(:hasSolidObject_PhysicalLocation :PartCSupply
                        :PartCSupplyPose)
ObjectPropertyAssertion(:hasPartsTrayWithParts_Tray :PartCSupply
                        :PartCTray)


// PartCTray **********************************************************
Declaration(NamedIndividual(:PartCTray))
ClassAssertion(:PartsTray :PartCTray)
ObjectPropertyAssertion(:hasSolidObject_PhysicalLocation :PartCTray
                        :PartCTrayPose)
DataPropertyAssertion(:hasBox_Height :PartCTray "0.2"^^:positiveDecimal)
DataPropertyAssertion(:hasBox_Length :PartCTray "0.6"^^:positiveDecimal)
DataPropertyAssertion(:hasBox_Width :PartCTray "0.3"^^:positiveDecimal)
DataPropertyAssertion(:hasPartsTray_SkuRef :PartCTray
                      "SkuIdPartsTray"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasPartsTray_SerialNumber :PartCTray "8"^^xsd:NMTOKEN)


// PartC1 *************************************************************
Declaration(NamedIndividual(:PartC1))
ClassAssertion(:Part :PartC1)
ObjectPropertyAssertion(:hasSolidObject_PhysicalLocation :PartC1
                        :PartC1NewPose)
DataPropertyAssertion(:hasPart_SkuRef :PartC1 "SkuIdPartC"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasPart_SerialNumber :PartC1 "15"^^xsd:NMTOKEN)


// PartGripper ********************************************************
Declaration(NamedIndividual(:PartGripper))
ClassAssertion(:VacuumEffectorSingleCup :PartGripper)
ObjectPropertyAssertion(:hasSolidObject_PhysicalLocation
  :PartGripper :PartGripperPose)
DataPropertyAssertion(:hasEndEffector_Description :PartGripper
  "small single cup vacuum effector"^^xsd:string)
DataPropertyAssertion(:hasEndEffector_Weight :PartGripper
   "0.01"^^:positiveDecimal)
DataPropertyAssertion(:hasEndEffector_Id :PartGripper
   "ThePartGripper"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasVacuumEffector_CupDiameter :PartGripper
   "0.02"^^:positiveDecimal)
DataPropertyAssertion(:hasVacuumEffector_Length :PartGripper
   "0.025"^^:positiveDecimal)


// PartGripperHolder ****************************************************
Declaration(NamedIndividual(:PartGripperHolder))
ClassAssertion(:EndEffectorHolder :PartGripperHolder)
ObjectPropertyAssertion(:hasSolidObject_PhysicalLocation :PartGripperHolder
                        :PartGripperHolderPose)
ObjectPropertyAssertion(:hasEndEffectorHolder_EndEffector :PartGripperHolder
                        :PartGripper)


// PartRefAndPoseA1 **************************************************
Declaration(NamedIndividual(:PartRefAndPoseA1))
ClassAssertion(:PartRefAndPose :PartRefAndPoseA1)
DataPropertyAssertion(:hasPartRefAndPose_Ref :PartRefAndPoseA1
                      "SkuIdPartA"^^xsd:NMTOKEN)
ObjectPropertyAssertion(:hasPartRefAndPose_Point :PartRefAndPoseA1
                        :PointA1)
ObjectPropertyAssertion(:hasPartRefAndPose_Rpy :PartRefAndPoseA1
                        :RpyA1)


// PartRefAndPoseA2 *****************************************************
Declaration(NamedIndividual(:PartRefAndPoseA2))
ClassAssertion(:PartRefAndPose :PartRefAndPoseA2)
DataPropertyAssertion(:hasPartRefAndPose_Ref :PartRefAndPoseA2
                      "SkuIdPartA"^^xsd:NMTOKEN)
ObjectPropertyAssertion(:hasPartRefAndPose_Point :PartRefAndPoseA2
                        :PointA2)
ObjectPropertyAssertion(:hasPartRefAndPose_Rpy :PartRefAndPoseA2
                        :RpyA2)


// PartRefAndPoseB1 *****************************************************
Declaration(NamedIndividual(:PartRefAndPoseB1))
ClassAssertion(:PartRefAndPose :PartRefAndPoseB1)
DataPropertyAssertion(:hasPartRefAndPose_Ref :PartRefAndPoseB1
                      "SkuIdPartB"^^xsd:NMTOKEN)
ObjectPropertyAssertion(:hasPartRefAndPose_Point :PartRefAndPoseB1
                        :PointB1)
ObjectPropertyAssertion(:hasPartRefAndPose_Rpy :PartRefAndPoseB1
                        :RpyB1)


// PartRefAndPoseC1 *****************************************************
Declaration(NamedIndividual(:PartRefAndPoseC1))
ClassAssertion(:PartRefAndPose :PartRefAndPoseC1)
DataPropertyAssertion(:hasPartRefAndPose_Ref :PartRefAndPoseC1
                      "SkuIdPartC"^^xsd:NMTOKEN)
ObjectPropertyAssertion(:hasPartRefAndPose_Point :PartRefAndPoseC1
                        :PointC1)
ObjectPropertyAssertion(:hasPartRefAndPose_Rpy :PartRefAndPoseC1
                        :RpyC1)


// PartRefAndPoseList1 **************************************************
Declaration(NamedIndividual(:PartRefAndPoseList1))
ClassAssertion(:PartRefAndPoseList :PartRefAndPoseList1)
ObjectPropertyAssertion(:listsPartRefAndPose :PartRefAndPoseList1
                        :PartRefAndPoseA1)
ObjectPropertyAssertion(:listsPartRefAndPose :PartRefAndPoseList1
                        :PartRefAndPoseA2)
ObjectPropertyAssertion(:listsPartRefAndPose :PartRefAndPoseList1
                        :PartRefAndPoseB1)
ObjectPropertyAssertion(:listsPartRefAndPose :PartRefAndPoseList1
                        :PartRefAndPoseC1)


// Robot1 ***************************************************************
Declaration(NamedIndividual(:Robot1))
ClassAssertion(:Robot :Robot1)
ObjectPropertyAssertion(:hasSolidObject_PhysicalLocation :Robot1
                        :RobotPose)
DataPropertyAssertion(:hasRobot_Description :Robot1
                      "this is the robot"^^xsd:string)
DataPropertyAssertion(:hasRobot_Id :Robot1 "Robot1"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasRobot_MaximumLoadWeight :Robot1 "7.0"^^xsd:decimal)
ObjectPropertyAssertion(:hasRobot_EndEffector :Robot1 :TrayGripper)
ObjectPropertyAssertion(:hasRobot_WorkVolume :Robot1 :RobotWorkVolume)


// ShapeKitBox **********************************************************
Declaration(NamedIndividual(:ShapeKitBox))
ClassAssertion(:ShapeDesign :ShapeKitBox)
DataPropertyAssertion(:hasShapeDesign_Description :ShapeKitBox
                      "Shape of boxes to hold kits and kit trays"^^xsd:string)


// ShapeKitTray *************************************************************
Declaration(NamedIndividual(:ShapeKitTray))
ClassAssertion(:ShapeDesign :ShapeKitTray)
DataPropertyAssertion(:hasShapeDesign_Description :ShapeKitTray
                      "Shape of KitTrays"^^xsd:string)


// ShapePartA ***********************************************************
Declaration(NamedIndividual(:ShapePartA))
ClassAssertion(:ShapeDesign :ShapePartA)
DataPropertyAssertion(:hasShapeDesign_Description :ShapePartA
                      "Shape of PartA"^^xsd:string)


// ShapePartB ***********************************************************
Declaration(NamedIndividual(:ShapePartB))
ClassAssertion(:ShapeDesign :ShapePartB)
DataPropertyAssertion(:hasShapeDesign_Description :ShapePartB
                      "Shape of PartB"^^xsd:string)


// ShapePartC ***********************************************************
Declaration(NamedIndividual(:ShapePartC))
ClassAssertion(:ShapeDesign :ShapePartC)
DataPropertyAssertion(:hasShapeDesign_Description :ShapePartC
                      "Shape of PartC"^^xsd:string)


// ShapePartsTray *******************************************************
Declaration(NamedIndividual(:ShapePartsTray))
ClassAssertion(:ShapeDesign :ShapePartsTray)
DataPropertyAssertion(:hasShapeDesign_Description :ShapePartsTray
                      "Shape of PartsTrays"^^xsd:string)


// SolidObjectList1 (an empty list) **************************************
Declaration(NamedIndividual(:SolidObjectList1))
ClassAssertion(:SolidObjectList :SolidObjectList1)


// StockKeepingUnitKitBox ************************************************
Declaration(NamedIndividual(:StockKeepingUnitKitBox))
ClassAssertion(:StockKeepingUnit :StockKeepingUnitKitBox)
DataPropertyAssertion(:hasSku_Description :StockKeepingUnitKitBox
                      "SKU for Boxes for Kits and KitTrays"^^xsd:string)
DataPropertyAssertion(:hasSku_Weight :StockKeepingUnitKitBox "1.2"^^xsd:decimal)
DataPropertyAssertion(:hasSku_Id :StockKeepingUnitKitBox
                      "SkuIdKitBox"^^xsd:NMTOKEN)
ObjectPropertyAssertion(:hasSku_EndEffectorRefs :StockKeepingUnitKitBox
                        :EndEffectorRefList3)
ObjectPropertyAssertion(:hasSku_Shape :StockKeepingUnitKitBox :ShapeKitBox)


// StockKeepingUnitKitTray ***********************************************
Declaration(NamedIndividual(:StockKeepingUnitKitTray))
ClassAssertion(:StockKeepingUnit :StockKeepingUnitKitTray)
DataPropertyAssertion(:hasSku_Description :StockKeepingUnitKitTray
                      "SKU for KitTrays"^^xsd:string)
DataPropertyAssertion(:hasSku_Weight :StockKeepingUnitKitTray
                      "0.2"^^xsd:decimal)
DataPropertyAssertion(:hasSku_Id :StockKeepingUnitKitTray
                      "SkuIdKitTray"^^xsd:NMTOKEN)
ObjectPropertyAssertion(:hasSku_EndEffectorRefs :StockKeepingUnitKitTray
                        :EndEffectorRefList2)
ObjectPropertyAssertion(:hasSku_Shape :StockKeepingUnitKitTray :ShapeKitTray)


// StockKeepingUnitList1 **********************************************
Declaration(NamedIndividual(:StockKeepingUnitList1))
ClassAssertion(:StockKeepingUnitList :StockKeepingUnitList1)
ObjectPropertyAssertion(:listsStockKeepingUnit :StockKeepingUnitList1
                        :StockKeepingUnitKitBox)
ObjectPropertyAssertion(:listsStockKeepingUnit :StockKeepingUnitList1
                        :StockKeepingUnitKitTray)
ObjectPropertyAssertion(:listsStockKeepingUnit :StockKeepingUnitList1
                        :StockKeepingUnitPartA)
ObjectPropertyAssertion(:listsStockKeepingUnit :StockKeepingUnitList1
                        :StockKeepingUnitPartB)
ObjectPropertyAssertion(:listsStockKeepingUnit :StockKeepingUnitList1
                        :StockKeepingUnitPartC)
ObjectPropertyAssertion(:listsStockKeepingUnit :StockKeepingUnitList1
                        :StockKeepingUnitPartsTray)


// StockKeepingUnitPartA ************************************************
Declaration(NamedIndividual(:StockKeepingUnitPartA))
ClassAssertion(:StockKeepingUnit :StockKeepingUnitPartA)
DataPropertyAssertion(:hasSku_Description :StockKeepingUnitPartA
                      "SKU for Part A"^^xsd:string)
DataPropertyAssertion(:hasSku_Weight :StockKeepingUnitPartA "0.18"^^xsd:decimal)
DataPropertyAssertion(:hasSku_Id :StockKeepingUnitPartA
                      "SkuIdPartA"^^xsd:NMTOKEN)
ObjectPropertyAssertion(:hasSku_EndEffectorRefs :StockKeepingUnitPartA
                        :EndEffectorRefList1)
ObjectPropertyAssertion(:hasSku_Shape :StockKeepingUnitPartA :ShapePartA)


// StockKeepingUnitPartB ************************************************
Declaration(NamedIndividual(:StockKeepingUnitPartB))
ClassAssertion(:StockKeepingUnit :StockKeepingUnitPartB)
DataPropertyAssertion(:hasSku_Description :StockKeepingUnitPartB
                      "SKU for PartB"^^xsd:string)
DataPropertyAssertion(:hasSku_Weight :StockKeepingUnitPartB "0.18"^^xsd:decimal)
DataPropertyAssertion(:hasSku_Id :StockKeepingUnitPartB
                      "SkuIdPartB"^^xsd:NMTOKEN)
ObjectPropertyAssertion(:hasSku_EndEffectorRefs :StockKeepingUnitPartB
                        :EndEffectorRefList1)
ObjectPropertyAssertion(:hasSku_Shape :StockKeepingUnitPartB :ShapePartB)


// StockKeepingUnitPartC ************************************************
Declaration(NamedIndividual(:StockKeepingUnitPartC))
ClassAssertion(:StockKeepingUnit :StockKeepingUnitPartC)
DataPropertyAssertion(:hasSku_Description :StockKeepingUnitPartC
                      "SKU for PartC"^^xsd:string)
DataPropertyAssertion(:hasSku_Weight :StockKeepingUnitPartC "0.18"^^xsd:decimal)
DataPropertyAssertion(:hasSku_Id :StockKeepingUnitPartC
                      "SkuIdPartC"^^xsd:NMTOKEN)
ObjectPropertyAssertion(:hasSku_EndEffectorRefs :StockKeepingUnitPartC
                        :EndEffectorRefList1)
ObjectPropertyAssertion(:hasSku_Shape :StockKeepingUnitPartC :ShapePartC)


// StockKeepingUnitPartsTray ********************************************
Declaration(NamedIndividual(:StockKeepingUnitPartsTray))
ClassAssertion(:StockKeepingUnit :StockKeepingUnitPartsTray)
DataPropertyAssertion(:hasSku_Description :StockKeepingUnitPartsTray
                      "SKU for PartsTrays"^^xsd:string)
DataPropertyAssertion(:hasSku_Weight :StockKeepingUnitPartsTray
                      "0.2"^^xsd:decimal)
DataPropertyAssertion(:hasSku_Id :StockKeepingUnitPartsTray
                      "SkuIdPartsTray"^^xsd:NMTOKEN)
ObjectPropertyAssertion(:hasSku_EndEffectorRefs :StockKeepingUnitPartsTray
                        :EndEffectorRefList2)
ObjectPropertyAssertion(:hasSku_Shape :StockKeepingUnitPartsTray
                        :ShapePartsTray)


// TrayGripper ********************************************************
Declaration(NamedIndividual(:TrayGripper))
ClassAssertion(:VacuumEffectorSingleCup :TrayGripper)
ObjectPropertyAssertion(:hasSolidObject_PhysicalLocation
  :TrayGripper :RelativeLocationOn1)
DataPropertyAssertion(:hasEndEffector_Description :TrayGripper
  "large single cup vacuum effector"^^xsd:string)
DataPropertyAssertion(:hasEndEffector_Weight :TrayGripper
   "0.04"^^:positiveDecimal)
DataPropertyAssertion(:hasEndEffector_Id :TrayGripper
   "TheTrayGripper"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasVacuumEffector_CupDiameter :TrayGripper
   "0.04"^^:positiveDecimal)
DataPropertyAssertion(:hasVacuumEffector_Length :TrayGripper
   "0.1"^^:positiveDecimal)


// TrayGripperHolder **************************************************
Declaration(NamedIndividual(:TrayGripperHolder))
ClassAssertion(:EndEffectorHolder :TrayGripperHolder)
ObjectPropertyAssertion(:hasSolidObject_PhysicalLocation :TrayGripperHolder
                        :TrayGripperHolderPose)

// Workstation ********************************************************
Declaration(NamedIndividual(:KittingWorkstation1))
ClassAssertion(:KittingWorkstation :KittingWorkstation1)
ObjectPropertyAssertion(:hasSolidObject_PhysicalLocation :KittingWorkstation1
                        :RelativeLocationIn1)
DataPropertyAssertion(:hasWorkstation_AngleUnit :KittingWorkstation1
                      "degree")
DataPropertyAssertion(:hasWorkstation_LengthUnit :KittingWorkstation1
                      "meter")
DataPropertyAssertion(:hasWorkstation_WeightUnit :KittingWorkstation1
                      "kilogram")
ObjectPropertyAssertion(:hasWorkstation_Robot :KittingWorkstation1 :Robot1)
ObjectPropertyAssertion(:hasWorkstation_ChangingStation :KittingWorkstation1
                        :ChangingStation1)
ObjectPropertyAssertion(:hasWorkstation_Table :KittingWorkstation1 :WorkTable1)
ObjectPropertyAssertion(:hasWorkstation_OtherObstacles :KittingWorkstation1
                        :OtherObstacles)
ObjectPropertyAssertion(:hasWorkstation_SkuLibrary :KittingWorkstation1
                        :StockKeepingUnitList1)
ObjectPropertyAssertion(:hasWorkstation_KitDesignLibrary :KittingWorkstation1
                        :KitDesignList1)


// WorkTable1  *********************************************************
Declaration(NamedIndividual(:WorkTable1))
ClassAssertion(:WorkTable :WorkTable1)
ObjectPropertyAssertion(:hasSolidObject_PhysicalLocation :WorkTable1 :WorkTablePose)
ObjectPropertyAssertion(:hasWorkTable_SolidObjects :WorkTable1
                        :SolidObjectList1)
DataPropertyAssertion(:hasBox_Height :WorkTable1 "0.5"^^:positiveDecimal)
DataPropertyAssertion(:hasBox_Length :WorkTable1 "1.6"^^:positiveDecimal)
DataPropertyAssertion(:hasBox_Width :WorkTable1 "0.8"^^:positiveDecimal)


// RobotWorkVolume and OtherObstacles *********************************
Declaration(NamedIndividual(:BoxVolume1))
ClassAssertion(:BoxVolume :BoxVolume1)
Declaration(NamedIndividual(:PointMax))
ClassAssertion(:Point :PointMax)
DataPropertyAssertion(:hasPoint_X :PointMax "1.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :PointMax "1.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :PointMax "2.0"^^xsd:decimal)
Declaration(NamedIndividual(:PointMin))
ClassAssertion(:Point :PointMin)
DataPropertyAssertion(:hasPoint_X :PointMin "-1.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :PointMin "-1.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :PointMin "0.0"^^xsd:decimal)
ObjectPropertyAssertion(:hasBoxVolume_MaximumPoint :BoxVolume1 :PointMax)
ObjectPropertyAssertion(:hasBoxVolume_MinimumPoint :BoxVolume1 :PointMin)

Declaration(NamedIndividual(:OtherObstacles))
ClassAssertion(:BoxVolumeList :OtherObstacles)

Declaration(NamedIndividual(:RobotWorkVolume))
ClassAssertion(:BoxVolumeList :RobotWorkVolume)
ObjectPropertyAssertion(:listsBoxVolume :RobotWorkVolume :BoxVolume1)


// Different Individuals **********************************************
DifferentIndividuals(:EmptyKitTrayBox :FinishedKitBox)
DifferentIndividuals(
 :EndEffectorRefList1
 :EndEffectorRefList2
 :EndEffectorRefList3)
DifferentIndividuals(:OtherObstacles :RobotWorkVolume)
DifferentIndividuals(:PartGripperHolder :TrayGripperHolder)
DifferentIndividuals(
 :PartA1
 :PartA2
 :PartB1
 :PartC1)
DifferentIndividuals(:PartGripper :TrayGripper)
DifferentIndividuals(:PartASupply :PartBSupply :PartCSupply)
DifferentIndividuals(:PartATray :PartBTray :PartCTray)
DifferentIndividuals(
 :PartRefAndPoseA1
 :PartRefAndPoseA2
 :PartRefAndPoseB1
 :PartRefAndPoseC1)
DifferentIndividuals(
 :ShapeKitBox
 :ShapeKitTray
 :ShapePartA
 :ShapePartB
 :ShapePartC
 :ShapePartsTray)
DifferentIndividuals(
 :StockKeepingUnitKitBox
 :StockKeepingUnitKitTray
 :StockKeepingUnitPartA
 :StockKeepingUnitPartB
 :StockKeepingUnitPartC
 :StockKeepingUnitPartsTray)

// Start Poses
// ChangingStationPose ************************************************
Declaration(NamedIndividual(:ChangingStationPose))
ClassAssertion(:Pose :ChangingStationPose)
ObjectPropertyAssertion(:hasPose_Point :ChangingStationPose
                        :ChangingStationPoint)
ObjectPropertyAssertion(:hasPose_Rpy :ChangingStationPose :ChangingStationRPY)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject :ChangingStationPose
  :KittingWorkstation1)

Declaration(NamedIndividual(:ChangingStationPoint))
ClassAssertion(:Point :ChangingStationPoint)
DataPropertyAssertion(:hasPoint_X :ChangingStationPoint "7.5"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :ChangingStationPoint "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :ChangingStationPoint "0.0"^^xsd:decimal)

Declaration(NamedIndividual(:ChangingStationRPY))
ClassAssertion(:RollPitchYaw :ChangingStationRPY)
DataPropertyAssertion(:hasRpy_Roll :ChangingStationRPY "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasRpy_Pitch :ChangingStationRPY "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasRpy_Yaw :ChangingStationRPY "0.0"^^xsd:decimal)


// EmptyKitTrayBoxPose *************************************************
Declaration(NamedIndividual(:EmptyKitTrayBoxPose))
ClassAssertion(:Pose :EmptyKitTrayBoxPose)
ObjectPropertyAssertion(:hasPose_Point :EmptyKitTrayBoxPose
                        :EmptyKitTrayBoxPoint)
ObjectPropertyAssertion(:hasPose_Rpy :EmptyKitTrayBoxPose
                        :EmptyKitTrayBoxRPY)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject :EmptyKitTrayBoxPose
  :EmptyKitTraySupply)

Declaration(NamedIndividual(:EmptyKitTrayBoxPoint))
ClassAssertion(:Point :EmptyKitTrayBoxPoint)
DataPropertyAssertion(:hasPoint_X :EmptyKitTrayBoxPoint "0.5"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :EmptyKitTrayBoxPoint "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :EmptyKitTrayBoxPoint "0.0"^^xsd:decimal)

Declaration(NamedIndividual(:EmptyKitTrayBoxRPY))
ClassAssertion(:RollPitchYaw :EmptyKitTrayBoxRPY)
DataPropertyAssertion(:hasRpy_Roll :EmptyKitTrayBoxRPY "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasRpy_Pitch :EmptyKitTrayBoxRPY "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasRpy_Yaw :EmptyKitTrayBoxRPY "0.0"^^xsd:decimal)


// EmptyKitTraySupplyPose *************************************************
Declaration(NamedIndividual(:EmptyKitTraySupplyPose))
ClassAssertion(:Pose :EmptyKitTraySupplyPose)
ObjectPropertyAssertion(:hasPose_Point :EmptyKitTraySupplyPose
                        :EmptyKitTraySupplyPoint)
ObjectPropertyAssertion(:hasPose_Rpy :EmptyKitTraySupplyPose
                        :EmptyKitTraySupplyRPY)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject :EmptyKitTraySupplyPose
  :KittingWorkstation1)

Declaration(NamedIndividual(:EmptyKitTraySupplyPoint))
ClassAssertion(:Point :EmptyKitTraySupplyPoint)
DataPropertyAssertion(:hasPoint_X :EmptyKitTraySupplyPoint "0.5"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :EmptyKitTraySupplyPoint "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :EmptyKitTraySupplyPoint "0.0"^^xsd:decimal)

Declaration(NamedIndividual(:EmptyKitTraySupplyRPY))
ClassAssertion(:RollPitchYaw :EmptyKitTraySupplyRPY)
DataPropertyAssertion(:hasRpy_Roll :EmptyKitTraySupplyRPY "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasRpy_Pitch :EmptyKitTraySupplyRPY "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasRpy_Yaw :EmptyKitTraySupplyRPY "0.0"^^xsd:decimal)


// FinishedKitBoxPose *************************************************
Declaration(NamedIndividual(:FinishedKitBoxPose))
ClassAssertion(:Pose :FinishedKitBoxPose)
ObjectPropertyAssertion(:hasPose_Point :FinishedKitBoxPose
                        :FinishedKitBoxPoint)
ObjectPropertyAssertion(:hasPose_Rpy :FinishedKitBoxPose
                        :FinishedKitBoxRPY)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject :FinishedKitBoxPose
  :FinishedKitReceiver)

Declaration(NamedIndividual(:FinishedKitBoxPoint))
ClassAssertion(:Point :FinishedKitBoxPoint)
DataPropertyAssertion(:hasPoint_X :FinishedKitBoxPoint "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :FinishedKitBoxPoint "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :FinishedKitBoxPoint "0.0"^^xsd:decimal)

Declaration(NamedIndividual(:FinishedKitBoxRPY))
ClassAssertion(:RollPitchYaw :FinishedKitBoxRPY)
DataPropertyAssertion(:hasRpy_Roll :FinishedKitBoxRPY "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasRpy_Pitch :FinishedKitBoxRPY "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasRpy_Yaw :FinishedKitBoxRPY "0.0"^^xsd:decimal)


// FinishedKitReceiverPose ********************************************
Declaration(NamedIndividual(:FinishedKitReceiverPose))
ClassAssertion(:Pose :FinishedKitReceiverPose)
ObjectPropertyAssertion(:hasPose_Point :FinishedKitReceiverPose
                        :FinishedKitReceiverPoint)
ObjectPropertyAssertion(:hasPose_Rpy :FinishedKitReceiverPose
                        :FinishedKitReceiverRPY)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject :FinishedKitReceiverPose
  :KittingWorkstation1)

Declaration(NamedIndividual(:FinishedKitReceiverPoint))
ClassAssertion(:Point :FinishedKitReceiverPoint)
DataPropertyAssertion(:hasPoint_X :FinishedKitReceiverPoint "1.5"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :FinishedKitReceiverPoint "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :FinishedKitReceiverPoint "0.0"^^xsd:decimal)

Declaration(NamedIndividual(:FinishedKitReceiverRPY))
ClassAssertion(:RollPitchYaw :FinishedKitReceiverRPY)
DataPropertyAssertion(:hasRpy_Roll :FinishedKitReceiverRPY "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasRpy_Pitch :FinishedKitReceiverRPY "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasRpy_Yaw :FinishedKitReceiverRPY "0.0"^^xsd:decimal)


// KitInstance1Pose ***************************************************
Declaration(NamedIndividual(:KitInstance1Pose))
ClassAssertion(:Pose :KitInstance1Pose)
ObjectPropertyAssertion(:hasPose_Point :KitInstance1Pose
                        :KitInstance1Point)
ObjectPropertyAssertion(:hasPose_Rpy :KitInstance1Pose
                        :KitInstance1RPY)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject :KitInstance1Pose
                        :FinishedKitReceiver)

Declaration(NamedIndividual(:KitInstance1Point))
ClassAssertion(:Point :KitInstance1Point)
DataPropertyAssertion(:hasPoint_X :KitInstance1Point "0.3"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :KitInstance1Point "0.2"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :KitInstance1Point "0.0"^^xsd:decimal)

Declaration(NamedIndividual(:KitInstance1RPY))
ClassAssertion(:RollPitchYaw :KitInstance1RPY)
DataPropertyAssertion(:hasRpy_Roll :KitInstance1RPY "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasRpy_Pitch :KitInstance1RPY "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasRpy_Yaw :KitInstance1RPY "0.0"^^xsd:decimal)


// KitTray1NewPose ***************************************************
Declaration(NamedIndividual(:KitTray1NewPose))
ClassAssertion(:Pose :KitTray1NewPose)
ObjectPropertyAssertion(:hasPose_Point :KitTray1NewPose
                        :KitTray1NewPoint)
ObjectPropertyAssertion(:hasPose_Rpy :KitTray1NewPose
                        :KitTray1NewRPY)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject :KitTray1NewPose
                        :KitInstance1)

Declaration(NamedIndividual(:KitTray1NewPoint))
ClassAssertion(:Point :KitTray1NewPoint)
DataPropertyAssertion(:hasPoint_X :KitTray1NewPoint "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :KitTray1NewPoint "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :KitTray1NewPoint "0.0"^^xsd:decimal)

Declaration(NamedIndividual(:KitTray1NewRPY))
ClassAssertion(:RollPitchYaw :KitTray1NewRPY)
DataPropertyAssertion(:hasRpy_Roll :KitTray1NewRPY "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasRpy_Pitch :KitTray1NewRPY "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasRpy_Yaw :KitTray1NewRPY "0.0"^^xsd:decimal)


// PartA1NewPose **************************************************
Declaration(NamedIndividual(:PartA1NewPose))
ClassAssertion(:Pose :PartA1NewPose)
ObjectPropertyAssertion(:hasPose_Point :PartA1NewPose
                        :PartA1NewPoint)
ObjectPropertyAssertion(:hasPose_Rpy :PartA1NewPose
                        :PartA1NewRPY)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject :PartA1NewPose
                        :KitTray1)

Declaration(NamedIndividual(:PartA1NewPoint))
ClassAssertion(:Point :PartA1NewPoint)
DataPropertyAssertion(:hasPoint_X :PartA1NewPoint "-0.2"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :PartA1NewPoint "-0.1"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :PartA1NewPoint "0.0"^^xsd:decimal)

Declaration(NamedIndividual(:PartA1NewRPY))
ClassAssertion(:RollPitchYaw :PartA1NewRPY)
DataPropertyAssertion(:hasRpy_Roll :PartA1NewRPY "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasRpy_Pitch :PartA1NewRPY "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasRpy_Yaw :PartA1NewRPY "0.0"^^xsd:decimal)


// PartA2NewPose **************************************************
Declaration(NamedIndividual(:PartA2NewPose))
ClassAssertion(:Pose :PartA2NewPose)
ObjectPropertyAssertion(:hasPose_Point :PartA2NewPose
                        :PartA2NewPoint)
ObjectPropertyAssertion(:hasPose_Rpy :PartA2NewPose
                        :PartA2NewRPY)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject :PartA2NewPose
                        :KitTray1)

Declaration(NamedIndividual(:PartA2NewPoint))
ClassAssertion(:Point :PartA2NewPoint)
DataPropertyAssertion(:hasPoint_X :PartA2NewPoint "-0.2"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :PartA2NewPoint "0.05"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :PartA2NewPoint "0.0"^^xsd:decimal)

Declaration(NamedIndividual(:PartA2NewRPY))
ClassAssertion(:RollPitchYaw :PartA2NewRPY)
DataPropertyAssertion(:hasRpy_Roll :PartA2NewRPY "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasRpy_Pitch :PartA2NewRPY "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasRpy_Yaw :PartA2NewRPY "0.0"^^xsd:decimal)


// PartASupplyPose **************************************************
Declaration(NamedIndividual(:PartASupplyPose))
ClassAssertion(:Pose :PartASupplyPose)
ObjectPropertyAssertion(:hasPose_Point :PartASupplyPose
                        :PartASupplyPoint)
ObjectPropertyAssertion(:hasPose_Rpy :PartASupplyPose
                        :PartASupplyRPY)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject :PartASupplyPose
  :KittingWorkstation1)

Declaration(NamedIndividual(:PartASupplyPoint))
ClassAssertion(:Point :PartASupplyPoint)
DataPropertyAssertion(:hasPoint_X :PartASupplyPoint "4.5"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :PartASupplyPoint "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :PartASupplyPoint "0.0"^^xsd:decimal)

Declaration(NamedIndividual(:PartASupplyRPY))
ClassAssertion(:RollPitchYaw :PartASupplyRPY)
DataPropertyAssertion(:hasRpy_Roll :PartASupplyRPY "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasRpy_Pitch :PartASupplyRPY "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasRpy_Yaw :PartASupplyRPY "0.0"^^xsd:decimal)


// PartB1NewPose **************************************************
Declaration(NamedIndividual(:PartB1NewPose))
ClassAssertion(:Pose :PartB1NewPose)
ObjectPropertyAssertion(:hasPose_Point :PartB1NewPose
                        :PartB1NewPoint)
ObjectPropertyAssertion(:hasPose_Rpy :PartB1NewPose
                        :PartB1NewRPY)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject :PartB1NewPose
                        :KitTray1)

Declaration(NamedIndividual(:PartB1NewPoint))
ClassAssertion(:Point :PartB1NewPoint)
DataPropertyAssertion(:hasPoint_X :PartB1NewPoint "0.05"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :PartB1NewPoint "-0.1"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :PartB1NewPoint "0.0"^^xsd:decimal)

Declaration(NamedIndividual(:PartB1NewRPY))
ClassAssertion(:RollPitchYaw :PartB1NewRPY)
DataPropertyAssertion(:hasRpy_Roll :PartB1NewRPY "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasRpy_Pitch :PartB1NewRPY "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasRpy_Yaw :PartB1NewRPY "0.0"^^xsd:decimal)


// PartBSupplyPose **************************************************
Declaration(NamedIndividual(:PartBSupplyPose))
ClassAssertion(:Pose :PartBSupplyPose)
ObjectPropertyAssertion(:hasPose_Point :PartBSupplyPose
                        :PartBSupplyPoint)
ObjectPropertyAssertion(:hasPose_Rpy :PartBSupplyPose
                        :PartBSupplyRPY)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject :PartBSupplyPose
  :KittingWorkstation1)

Declaration(NamedIndividual(:PartBSupplyPoint))
ClassAssertion(:Point :PartBSupplyPoint)
DataPropertyAssertion(:hasPoint_X :PartBSupplyPoint "5.5"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :PartBSupplyPoint "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :PartBSupplyPoint "0.0"^^xsd:decimal)

Declaration(NamedIndividual(:PartBSupplyRPY))
ClassAssertion(:RollPitchYaw :PartBSupplyRPY)
DataPropertyAssertion(:hasRpy_Roll :PartBSupplyRPY "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasRpy_Pitch :PartBSupplyRPY "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasRpy_Yaw :PartBSupplyRPY "0.0"^^xsd:decimal)


// PartC1NewPose **************************************************
Declaration(NamedIndividual(:PartC1NewPose))
ClassAssertion(:Pose :PartC1NewPose)
ObjectPropertyAssertion(:hasPose_Point :PartC1NewPose
                        :PartC1NewPoint)
ObjectPropertyAssertion(:hasPose_Rpy :PartC1NewPose
                        :PartC1NewRPY)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject :PartC1NewPose
                        :KitTray1)

Declaration(NamedIndividual(:PartC1NewPoint))
ClassAssertion(:Point :PartC1NewPoint)
DataPropertyAssertion(:hasPoint_X :PartC1NewPoint "0.05"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :PartC1NewPoint "0.05"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :PartC1NewPoint "0.0"^^xsd:decimal)

Declaration(NamedIndividual(:PartC1NewRPY))
ClassAssertion(:RollPitchYaw :PartC1NewRPY)
DataPropertyAssertion(:hasRpy_Roll :PartC1NewRPY "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasRpy_Pitch :PartC1NewRPY "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasRpy_Yaw :PartC1NewRPY "0.0"^^xsd:decimal)


// PartCSupplyPose **************************************************
Declaration(NamedIndividual(:PartCSupplyPose))
ClassAssertion(:Pose :PartCSupplyPose)
ObjectPropertyAssertion(:hasPose_Point :PartCSupplyPose
                        :PartCSupplyPoint)
ObjectPropertyAssertion(:hasPose_Rpy :PartCSupplyPose
                        :PartCSupplyRPY)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject :PartCSupplyPose
  :KittingWorkstation1)

Declaration(NamedIndividual(:PartCSupplyPoint))
ClassAssertion(:Point :PartCSupplyPoint)
DataPropertyAssertion(:hasPoint_X :PartCSupplyPoint "6.5"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :PartCSupplyPoint "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :PartCSupplyPoint "0.0"^^xsd:decimal)

Declaration(NamedIndividual(:PartCSupplyRPY))
ClassAssertion(:RollPitchYaw :PartCSupplyRPY)
DataPropertyAssertion(:hasRpy_Roll :PartCSupplyRPY "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasRpy_Pitch :PartCSupplyRPY "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasRpy_Yaw :PartCSupplyRPY "0.0"^^xsd:decimal)


// PartATrayPose **************************************************
Declaration(NamedIndividual(:PartATrayPose))
ClassAssertion(:Pose :PartATrayPose)
ObjectPropertyAssertion(:hasPose_Point :PartATrayPose
                        :PartATrayPoint)
ObjectPropertyAssertion(:hasPose_Rpy :PartATrayPose
                        :PartATrayRPY)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject :PartATrayPose
  :PartASupply)

Declaration(NamedIndividual(:PartATrayPoint))
ClassAssertion(:Point :PartATrayPoint)
DataPropertyAssertion(:hasPoint_X :PartATrayPoint "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :PartATrayPoint "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :PartATrayPoint "0.0"^^xsd:decimal)

Declaration(NamedIndividual(:PartATrayRPY))
ClassAssertion(:RollPitchYaw :PartATrayRPY)
DataPropertyAssertion(:hasRpy_Roll :PartATrayRPY "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasRpy_Pitch :PartATrayRPY "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasRpy_Yaw :PartATrayRPY "0.0"^^xsd:decimal)


// PartBTrayPose **************************************************
Declaration(NamedIndividual(:PartBTrayPose))
ClassAssertion(:Pose :PartBTrayPose)
ObjectPropertyAssertion(:hasPose_Point :PartBTrayPose
                        :PartBTrayPoint)
ObjectPropertyAssertion(:hasPose_Rpy :PartBTrayPose
                        :PartBTrayRPY)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject :PartBTrayPose
  :PartBSupply)

Declaration(NamedIndividual(:PartBTrayPoint))
ClassAssertion(:Point :PartBTrayPoint)
DataPropertyAssertion(:hasPoint_X :PartBTrayPoint "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :PartBTrayPoint "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :PartBTrayPoint "0.0"^^xsd:decimal)

Declaration(NamedIndividual(:PartBTrayRPY))
ClassAssertion(:RollPitchYaw :PartBTrayRPY)
DataPropertyAssertion(:hasRpy_Roll :PartBTrayRPY "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasRpy_Pitch :PartBTrayRPY "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasRpy_Yaw :PartBTrayRPY "0.0"^^xsd:decimal)


// PartCTrayPose **************************************************
Declaration(NamedIndividual(:PartCTrayPose))
ClassAssertion(:Pose :PartCTrayPose)
ObjectPropertyAssertion(:hasPose_Point :PartCTrayPose
                        :PartCTrayPoint)
ObjectPropertyAssertion(:hasPose_Rpy :PartCTrayPose
                        :PartCTrayRPY)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject :PartCTrayPose
  :PartCSupply)

Declaration(NamedIndividual(:PartCTrayPoint))
ClassAssertion(:Point :PartCTrayPoint)
DataPropertyAssertion(:hasPoint_X :PartCTrayPoint "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :PartCTrayPoint "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :PartCTrayPoint "0.0"^^xsd:decimal)

Declaration(NamedIndividual(:PartCTrayRPY))
ClassAssertion(:RollPitchYaw :PartCTrayRPY)
DataPropertyAssertion(:hasRpy_Roll :PartCTrayRPY "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasRpy_Pitch :PartCTrayRPY "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasRpy_Yaw :PartCTrayRPY "0.0"^^xsd:decimal)


// PartGripperHolderPose *********************************************
Declaration(NamedIndividual(:PartGripperHolderPose))
ClassAssertion(:Pose :PartGripperHolderPose)
ObjectPropertyAssertion(:hasPose_Point :PartGripperHolderPose
                        :PartGripperHolderPoint)
ObjectPropertyAssertion(:hasPose_Rpy :PartGripperHolderPose
                        :PartGripperHolderRPY)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject :PartGripperHolderPose
  :ChangingStation1)

Declaration(NamedIndividual(:PartGripperHolderPoint))
ClassAssertion(:Point :PartGripperHolderPoint)
DataPropertyAssertion(:hasPoint_X :PartGripperHolderPoint "0.25"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :PartGripperHolderPoint "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :PartGripperHolderPoint "0.5"^^xsd:decimal)

Declaration(NamedIndividual(:PartGripperHolderRPY))
ClassAssertion(:RollPitchYaw :PartGripperHolderRPY)
DataPropertyAssertion(:hasRpy_Roll :PartGripperHolderRPY "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasRpy_Pitch :PartGripperHolderRPY "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasRpy_Yaw :PartGripperHolderRPY "0.0"^^xsd:decimal)


// PartGripperPose ****************************************************
Declaration(NamedIndividual(:PartGripperPose))
ClassAssertion(:Pose :PartGripperPose)
ObjectPropertyAssertion(:hasPose_Point :PartGripperPose :PartGripperPoint)
ObjectPropertyAssertion(:hasPose_Rpy :PartGipperPose :PartGripperRPY)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject :PartGripperPose
  :PartGripperHolder)

Declaration(NamedIndividual(:PartGripperPoint))
ClassAssertion(:Point :PartGripperPoint)
DataPropertyAssertion(:hasPoint_X :PartGripperPoint "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :PartGripperPoint "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :PartGripperPoint "0.0"^^xsd:decimal)

Declaration(NamedIndividual(:PartGripperRPY))
ClassAssertion(:RollPitchYaw :PartGripperRPY)
DataPropertyAssertion(:hasRpy_Roll :PartGripperRPY "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasRpy_Pitch :PartGripperRPY "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasRpy_Yaw :PartGripperRPY "0.0"^^xsd:decimal)


// RobotPose *********************************************************
Declaration(NamedIndividual(:RobotPose))
ClassAssertion(:Pose :RobotPose)
ObjectPropertyAssertion(:hasPose_Point :RobotPose :RobotPoint)
ObjectPropertyAssertion(:hasPose_Rpy :RobotPose :RobotRPY)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject :RobotPose
  :KittingWorkstation1)

Declaration(NamedIndividual(:RobotPoint))
ClassAssertion(:Point :RobotPoint)
DataPropertyAssertion(:hasPoint_X :RobotPoint "3.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :RobotPoint "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :RobotPoint "2.0"^^xsd:decimal)

Declaration(NamedIndividual(:RobotRPY))
ClassAssertion(:RollPitchYaw :RobotRPY)
DataPropertyAssertion(:hasRpy_Roll :RobotRPY "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasRpy_Pitch :RobotRPY "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasRpy_Yaw :RobotRPY "0.0"^^xsd:decimal)


// TrayGripperHolderPose *********************************************
Declaration(NamedIndividual(:TrayGripperHolderPose))
ClassAssertion(:Pose :TrayGripperHolderPose)
ObjectPropertyAssertion(:hasPose_Point :TrayGripperHolderPose
                        :TrayGripperHolderPoint)
ObjectPropertyAssertion(:hasPose_Rpy :TrayGripperHolderPose
                        :TrayGripperHolderRPY)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject :TrayGripperHolderPose
                        :ChangingStation1)

Declaration(NamedIndividual(:TrayGripperHolderPoint))
ClassAssertion(:Point :TrayGripperHolderPoint)
DataPropertyAssertion(:hasPoint_X :TrayGripperHolderPoint "-0.25"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :TrayGripperHolderPoint "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :TrayGripperHolderPoint "0.5"^^xsd:decimal)

Declaration(NamedIndividual(:TrayGripperHolderRPY))
ClassAssertion(:RollPitchYaw :TrayGripperHolderRPY)
DataPropertyAssertion(:hasRpy_Roll :TrayGripperHolderRPY "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasRpy_Pitch :TrayGripperHolderRPY "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasRpy_Yaw :TrayGripperHolderRPY "0.0"^^xsd:decimal)


// WorkTablePose ******************************************************
Declaration(NamedIndividual(:WorkTablePose))
ClassAssertion(:Pose :WorkTablePose)
ObjectPropertyAssertion(:hasPose_Point :WorkTablePose :WorkTablePoint)
ObjectPropertyAssertion(:hasPose_Rpy :WorkTablePose :WorkTableRPY)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject :WorkTablePose
  :KittingWorkstation1)

Declaration(NamedIndividual(:WorkTablePoint))
ClassAssertion(:Point :WorkTablePoint)
DataPropertyAssertion(:hasPoint_X :WorkTablePoint "3.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :WorkTablePoint "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :WorkTablePoint "0.0"^^xsd:decimal)

Declaration(NamedIndividual(:WorkTableRPY))
ClassAssertion(:RollPitchYaw :WorkTableRPY)
DataPropertyAssertion(:hasRpy_Roll :WorkTableRPY "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasRpy_Pitch :WorkTableRPY "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasRpy_Yaw :WorkTableRPY "90.0"^^xsd:decimal)


// Points for kit design
Declaration(NamedIndividual(:PointA1))
ClassAssertion(:Point :PointA1)
DataPropertyAssertion(:hasPoint_X :PointA1 "0.2"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :PointA1 "0.3"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :PointA1 "0.0"^^xsd:decimal)

Declaration(NamedIndividual(:PointA2))
ClassAssertion(:Point :PointA2)
DataPropertyAssertion(:hasPoint_X :PointA2 "0.4"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :PointA2 "0.3"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :PointA2 "0.0"^^xsd:decimal)

Declaration(NamedIndividual(:PointB1))
ClassAssertion(:Point :PointB1)
DataPropertyAssertion(:hasPoint_X :PointB1 "0.2"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :PointB1 "0.5"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :PointB1 "0.0"^^xsd:decimal)

Declaration(NamedIndividual(:PointC1))
ClassAssertion(:Point :PointC1)
DataPropertyAssertion(:hasPoint_X :PointC1 "0.4"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :PointC1 "0.5"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :PointC1 "0.0"^^xsd:decimal)

// Rpys for kit design
Declaration(NamedIndividual(:RpyA1))
ClassAssertion(:RollPitchYaw :RpyA1)
DataPropertyAssertion(:hasPoint_Roll :RpyA1 "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Pitch :RpyA1 "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Yaw :RpyA1 "0.0"^^xsd:decimal)

Declaration(NamedIndividual(:RpyA2))
ClassAssertion(:RollPitchYaw :RpyA2)
DataPropertyAssertion(:hasPoint_Roll :RpyA2 "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Pitch :RpyA2 "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Yaw :RpyA2 "0.0"^^xsd:decimal)

Declaration(NamedIndividual(:RpyB1))
ClassAssertion(:RollPitchYaw :RpyB1)
DataPropertyAssertion(:hasPoint_Roll :RpyB1 "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Pitch :RpyB1 "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Yaw :RpyB1 "0.0"^^xsd:decimal)

Declaration(NamedIndividual(:RpyC1))
ClassAssertion(:RollPitchYaw :RpyC1)
DataPropertyAssertion(:hasPoint_Roll :RpyC1 "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Pitch :RpyC1 "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Yaw :RpyC1 "0.0"^^xsd:decimal)


// Pose individuals *************************************************
DifferentIndividuals(
 :ChangingStationPose
 :EmptyKitTrayBoxPose
 :EmptyKitTraySupplyPose
 :FinishedKitBoxPose
 :FinishedKitReceiverPose
 :KitInstance1Pose
 :KitTray1NewPose
 :PartA1NewPose
 :PartA2NewPose
 :PartASupplyPose
 :PartATrayPose
 :PartB1NewPose
 :PartBSupplyPose
 :PartBTrayPose
 :PartC1NewPose
 :PartCSupplyPose
 :PartCTrayPose
 :PartGripperPose
 :PartGripperHolderPose
 :RobotPose
 :TrayGripperHolderPose
 :WorkTablePose)

// Point individuals *************************************************
DifferentIndividuals(
 :ChangingStationPoint
 :EmptyKitTrayBoxPoint
 :EmptyKitTraySupplyPoint
 :FinishedKitBoxPoint
 :FinishedKitReceiverPoint
 :KitInstance1Point
 :KitTray1Point
 :PartA2NewPoint
 :PartA1NewPoint
 :PartASupplyPoint
 :PartATrayPoint
 :PartB1NewPoint
 :PartBSupplyPoint
 :PartBTrayPoint
 :PartC1NewPoint
 :PartCSupplyPoint
 :PartCTrayPoint
 :PartGripperPoint
 :PartGripperHolderPoint
 :PointA1
 :PointA2
 :PointB1
 :PointC1
 :PointMax
 :PointMin
 :RobotPoint
 :TrayGripperHolderPoint
 :WorkTablePoint)

// RPY individuals *************************************************
DifferentIndividuals(
 :ChangingStationRPY
 :EmptyKitTrayBoxRPY
 :EmptyKitTraySupplyRPY
 :FinishedKitBoxRPY
 :FinishedKitReceiverRPY
 :KitInstance1RPY
 :KitTray1RPY
 :PartA1NewRPY
 :PartA2NewRPY
 :PartASupplyRPY
 :PartATrayRPY
 :PartB1NewRPY
 :PartBSupplyRPY
 :PartBTrayRPY
 :PartC1NewRPY
 :PartCSupplyRPY
 :PartCTrayRPY
 :PartGripperRPY
 :PartGripperHolderRPY
 :RobotRPY
 :RpyA1
 :RpyA2
 :RpyB1
 :RpyC1
 :TrayGripperHolderRPY
 :WorkTableRPY)
// End Poses

// Start RelativeLocations ******************************************


Declaration(NamedIndividual(:RelativeLocationIn1))
ClassAssertion(:RelativeLocationIn :RelativeLocationIn1)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject :RelativeLocationIn1
                        :KittingWorkstation1)
DataPropertyAssertion(:hasRelativeLocationIn_Description
  :RelativeLocationIn1
  "The  KittingWorkstation is in KittingWorkstation1"^^xsd:string)

Declaration(NamedIndividual(:RelativeLocationOn1))
ClassAssertion(:RelativeLocationOn :RelativeLocationOn1)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject :RelativeLocationOn1
                        :Robot1)
DataPropertyAssertion(:hasRelativeLocationOn_Description
  :RelativeLocationOn1
  "The TrayGripper is on Robot1"^^xsd:string)

// End RelativeLocations

)
