Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)
Prefix(:=<http://www.nist.gov/el/ontologies/kittingInstancesInit.owl#>)
Prefix(:=<http://www.nist.gov/el/ontologies/kittingClasses.owl#>)

Ontology(<http://www.nist.gov/el/ontologies/kittingInstancesInit.owl>
Import(<file:kittingClasses.owl>)
Annotation(rdfs:comment
  "This is an OWL data file describing a specific kitting workstation.
   The workstation is as described in Zeit Kootbally's description
   discussed in the IPMAS meeting on February 28.
   This file uses the kittingClasses.owl ontology in the file
   kittingClasses.owl")
Annotation(rdfs:comment
  "The kitting workstation (kitting_workstation_1) has the following items
   - a robot (robot_1), which has:
     a vacuum effector for gripping trays (tray_gripper)
     a work volume consisting of one BoxVolume (box_volume_1)
   - a work table (work_table_1)
   - an end effector changing station (changing_station_1) with two
     end effector holders (part_gripper_holder and tray_gripper_holder)
   - another vacuum effector (part_gripper), which is being
     held by the part_gripper_holder on the changing station.
   - a StockKeepingUnitLibrary with six StockKeepingUnits
   - one KitDesign
   - a PartsTray with two PartAs
   - a PartsTray with one PartB
   - a PartsTray with one PartC
   - a box of KitTrays with one KitTray in it
   - an empty box for finished Kits
   The data is complete for these items, including many individuals not
   listed above (mostly Poses, Points, and Vectors.
   There are no other obstacles.")

// changing_station_1 ****************************************************
Declaration(NamedIndividual(:changing_station_1))
ClassAssertion(:EndEffectorChangingStation :changing_station_1)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation :changing_station_1
                        :changing_station_pose)
ObjectPropertyAssertion(:hasChangingStation_Holders :changing_station_1
                        :part_gripper_holder)
ObjectPropertyAssertion(:hasChangingStation_Holders :changing_station_1
                        :tray_gripper_holder)
ObjectPropertyAssertion(:hadByChangingStation_Workstation :changing_station_1
                        :kitting_workstation_1)


// empty_kit_tray_box *****************************************************
Declaration(NamedIndividual(:empty_kit_tray_box))
ClassAssertion(:LargeContainer :empty_kit_tray_box)
DataPropertyAssertion(:hasLargeContainer_SkuRef :empty_kit_tray_box
                      "SkuIdKitBox"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasLargeContainer_SerialNumber :empty_kit_tray_box
                      "4"^^xsd:NMTOKEN)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation :empty_kit_tray_box
                        :empty_kit_tray_box_pose)
ObjectPropertyAssertion(:hadByLargeContainer_LargeBoxWithEmptyKitTrays
                        :empty_kit_tray_box :empty_kit_tray_supply)
DataPropertyAssertion(:hasBox_Height :empty_kit_tray_box
                      "0.8"^^:positiveDecimal)
DataPropertyAssertion(:hasBox_Length :empty_kit_tray_box
                      "0.9"^^:positiveDecimal)
DataPropertyAssertion(:hasBox_Width :empty_kit_tray_box
                      "0.7"^^:positiveDecimal)


// empty_kit_tray_supply **************************************************
Declaration(NamedIndividual(:empty_kit_tray_supply))
ClassAssertion(:LargeBoxWithEmptyKitTrays :empty_kit_tray_supply)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
                        :empty_kit_tray_supply :empty_kit_tray_supply_pose)
ObjectPropertyAssertion(:hasLargeBoxWithEmptyKitTrays_Box
                        :empty_kit_tray_supply :empty_kit_tray_box)


// finished_kit_box ******************************************************
Declaration(NamedIndividual(:finished_kit_box))
ClassAssertion(:LargeContainer :finished_kit_box)
DataPropertyAssertion(:hasLargeContainer_SkuRef :finished_kit_box
                      "SkuIdKitBox"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasLargeContainer_SerialNumber :finished_kit_box
                      "5"^^xsd:NMTOKEN)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation :finished_kit_box
                        :finished_kit_box_pose)
ObjectPropertyAssertion(:hadByLargeContainer_LargeBoxWithKits :finished_kit_box
                        :finished_kit_receiver)
DataPropertyAssertion(:hasBox_Height :finished_kit_box "0.8"^^:positiveDecimal)
DataPropertyAssertion(:hasBox_Length :finished_kit_box "0.9"^^:positiveDecimal)
DataPropertyAssertion(:hasBox_Width :finished_kit_box "0.7"^^:positiveDecimal)


// finished_kit_receiver *************************************************
Declaration(NamedIndividual(:finished_kit_receiver))
ClassAssertion(:LargeBoxWithKits :finished_kit_receiver)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation :finished_kit_receiver
                        :finished_kit_receiver_pose)
ObjectPropertyAssertion(:hasLargeBoxWithKits_Box :finished_kit_receiver
                        :finished_kit_box)
DataPropertyAssertion(:hasLargeBoxWithKits_Capacity :finished_kit_receiver
                     "12"^^xsd:positiveInteger)
DataPropertyAssertion(:hasLargeBoxWithKits_KitDesignRef :finished_kit_receiver
                     "kit_design_a2b1c1"^^xsd:NMTOKEN)


// kit_design_a2b1c1 *****************************************************
Declaration(NamedIndividual(:kit_design_a2b1c1))
ClassAssertion(:KitDesign :kit_design_a2b1c1)
DataPropertyAssertion(:hasKitDesign_Id :kit_design_a2b1c1
                      "kit_design_a2b1c1"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasKitDesign_KitTraySkuRef :kit_design_a2b1c1
                      "SkuIdKitTray"^^xsd:NMTOKEN)
ObjectPropertyAssertion(:hasKitDesign_PartPoses :kit_design_a2b1c1
                        :part_ref_and_pose_a_1)
ObjectPropertyAssertion(:hasKitDesign_PartPoses :kit_design_a2b1c1
                        :part_ref_and_pose_a_2)
ObjectPropertyAssertion(:hasKitDesign_PartPoses :kit_design_a2b1c1
                        :part_ref_and_pose_b_1)
ObjectPropertyAssertion(:hasKitDesign_PartPoses :kit_design_a2b1c1
                        :part_ref_and_pose_c_1)
ObjectPropertyAssertion(:hadByKitDesign_Workstation :kit_design_a2b1c1
                        :kitting_workstation_1)


// kit_tray_1 ************************************************************
Declaration(NamedIndividual(:kit_tray_1))
ClassAssertion(:KitTray :kit_tray_1)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation :kit_tray_1
                        :kit_tray_1_pose)
ObjectPropertyAssertion(:hadByKitTray_LargeBoxWithEmptyKitTrays :kit_tray_1
                        :empty_kit_tray_supply)
DataPropertyAssertion(:hasBox_Height :kit_tray_1 "0.15"^^:positiveDecimal)
DataPropertyAssertion(:hasBox_Length :kit_tray_1 "0.5"^^:positiveDecimal)
DataPropertyAssertion(:hasBox_Width :kit_tray_1 "0.3"^^:positiveDecimal)
DataPropertyAssertion(:hasKitTray_SkuRef :kit_tray_1
                      "SkuIdKitTray"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasKitTray_SerialNumber :kit_tray_1 "1"^^xsd:NMTOKEN)


// part_a_supply ********************************************************
Declaration(NamedIndividual(:part_a_supply))
ClassAssertion(:PartsTrayWithParts :part_a_supply)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation :part_a_supply
                        :part_a_supply_pose)
ObjectPropertyAssertion(:hasPartsTrayWithParts_Tray :part_a_supply :part_a_tray)
ObjectPropertyAssertion(:hasPartsTrayWithParts_Parts :part_a_supply :part_a_1)
ObjectPropertyAssertion(:hasPartsTrayWithParts_Parts :part_a_supply :part_a_2)


// part_a_tray ********************************************************
Declaration(NamedIndividual(:part_a_tray))
ClassAssertion(:PartsTray :part_a_tray)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation :part_a_tray
                        :part_a_tray_pose)
ObjectPropertyAssertion(:hadByPartsTray_PartsTrayWithParts :part_a_tray
                        :part_a_supply)
DataPropertyAssertion(:hasBox_Height :part_a_tray "0.2"^^:positiveDecimal)
DataPropertyAssertion(:hasBox_Length :part_a_tray "0.6"^^:positiveDecimal)
DataPropertyAssertion(:hasBox_Width :part_a_tray "0.3"^^:positiveDecimal)
DataPropertyAssertion(:hasPartsTray_SkuRef :part_a_tray
                      "SkuIdPartsTray"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasPartsTray_SerialNumber :part_a_tray "6"^^xsd:NMTOKEN)


// part_a_1 ***********************************************************
Declaration(NamedIndividual(:part_a_1))
ClassAssertion(:Part :part_a_1)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation :part_a_1
                        :part_a_1_location)
ObjectPropertyAssertion(:hadByPart_PartsTrayWithParts :part_a_1 :part_a_supply)
DataPropertyAssertion(:hasPart_SkuRef :part_a_1 "SkuIdPartA"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasPart_SerialNumber :part_a_1 "9"^^xsd:NMTOKEN)


// part_a_2 ***********************************************************
Declaration(NamedIndividual(:part_a_2))
ClassAssertion(:Part :part_a_2)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation :part_a_2
                        :part_a_2_location)
ObjectPropertyAssertion(:hadByPart_PartsTrayWithParts :part_a_2 :part_a_supply)
DataPropertyAssertion(:hasPart_SkuRef :part_a_2 "SkuIdPartA"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasPart_SerialNumber :part_a_2 "10"^^xsd:NMTOKEN)


// part_b_supply ********************************************************
Declaration(NamedIndividual(:part_b_supply))
ClassAssertion(:PartsTrayWithParts :part_b_supply)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation :part_b_supply
                        :part_b_supply_pose)
ObjectPropertyAssertion(:hasPartsTrayWithParts_Tray :part_b_supply
                        :part_b_tray)
ObjectPropertyAssertion(:hasPartsTrayWithParts_Parts :part_b_supply
                        :part_b_1)


// part_b_tray **********************************************************
Declaration(NamedIndividual(:part_b_tray))
ClassAssertion(:PartsTray :part_b_tray)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation :part_b_tray
                        :part_b_tray_pose)
ObjectPropertyAssertion(:hadByPartsTray_PartsTrayWithParts :part_b_tray
                        :part_b_supply)
DataPropertyAssertion(:hasBox_Height :part_b_tray "0.2"^^:positiveDecimal)
DataPropertyAssertion(:hasBox_Length :part_b_tray "0.6"^^:positiveDecimal)
DataPropertyAssertion(:hasBox_Width :part_b_tray "0.3"^^:positiveDecimal)
DataPropertyAssertion(:hasPartsTray_SkuRef :part_b_tray
                      "SkuIdPartsTray"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasPartsTray_SerialNumber :part_b_tray "7"^^xsd:NMTOKEN)


// part_b_1 ************************************************************
Declaration(NamedIndividual(:part_b_1))
ClassAssertion(:Part :part_b_1)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation :part_b_1
                        :part_b_1_location)
ObjectPropertyAssertion(:hadByPart_PartsTrayWithParts :part_b_1 :part_b_supply)
DataPropertyAssertion(:hasPart_SkuRef :part_b_1 "SkuIdPartB"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasPart_SerialNumber :part_b_1 "13"^^xsd:NMTOKEN)


// part_c_supply *********************************************************
Declaration(NamedIndividual(:part_c_supply))
ClassAssertion(:PartsTrayWithParts :part_c_supply)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation :part_c_supply
                        :part_c_supply_pose)
ObjectPropertyAssertion(:hasPartsTrayWithParts_Tray :part_c_supply :part_c_tray)
ObjectPropertyAssertion(:hasPartsTrayWithParts_Parts :part_c_supply :part_c_1)


// part_c_tray **********************************************************
Declaration(NamedIndividual(:part_c_tray))
ClassAssertion(:PartsTray :part_c_tray)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation :part_c_tray
                        :part_c_tray_pose)
ObjectPropertyAssertion(:hadByPartsTray_PartsTrayWithParts :part_c_tray
                        :part_c_supply)
DataPropertyAssertion(:hasBox_Height :part_c_tray "0.2"^^:positiveDecimal)
DataPropertyAssertion(:hasBox_Length :part_c_tray "0.6"^^:positiveDecimal)
DataPropertyAssertion(:hasBox_Width :part_c_tray "0.3"^^:positiveDecimal)
DataPropertyAssertion(:hasPartsTray_SkuRef :part_c_tray
                      "SkuIdPartsTray"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasPartsTray_SerialNumber :part_c_tray "8"^^xsd:NMTOKEN)


// part_c_1 *************************************************************
Declaration(NamedIndividual(:part_c_1))
ClassAssertion(:Part :part_c_1)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation :part_c_1
                        :part_c_1_location)
ObjectPropertyAssertion(:hadByPart_PartsTrayWithParts :part_c_1 :part_c_supply)
DataPropertyAssertion(:hasPart_SkuRef :part_c_1 "SkuIdPartC"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasPart_SerialNumber :part_c_1 "15"^^xsd:NMTOKEN)


// part_gripper ********************************************************
Declaration(NamedIndividual(:part_gripper))
ClassAssertion(:VacuumEffectorSingleCup :part_gripper)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
  :part_gripper :part_gripper_pose)
ObjectPropertyAssertion(:hadByEndEffector_EndEffectorHolder
                        :part_gripper :part_gripper_holder)
DataPropertyAssertion(:hasEndEffector_Description :part_gripper
  "small single cup vacuum effector"^^xsd:string)
DataPropertyAssertion(:hasEndEffector_Weight :part_gripper
   "0.01"^^:positiveDecimal)
DataPropertyAssertion(:hasEndEffector_Id :part_gripper
   "ThePartGripper"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasVacuumEffector_CupDiameter :part_gripper
   "0.02"^^:positiveDecimal)
DataPropertyAssertion(:hasVacuumEffector_Length :part_gripper
   "0.025"^^:positiveDecimal)


// part_gripper_holder ****************************************************
Declaration(NamedIndividual(:part_gripper_holder))
ClassAssertion(:EndEffectorHolder :part_gripper_holder)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation :part_gripper_holder
                        :part_gripper_holder_pose)
ObjectPropertyAssertion(:hasEndEffectorHolder_EndEffector :part_gripper_holder
                        :part_gripper)
ObjectPropertyAssertion(:hadByEndEffectorHolder_ChangingStation
                        :part_gripper_holder :changing_station_1)


// part_ref_and_pose_a_1 *****************************************************
Declaration(NamedIndividual(:part_ref_and_pose_a_1))
ClassAssertion(:PartRefAndPose :part_ref_and_pose_a_1)
DataPropertyAssertion(:hasPartRefAndPose_Ref :part_ref_and_pose_a_1
                      "SkuIdPartA"^^xsd:NMTOKEN)
ObjectPropertyAssertion(:hasPartRefAndPose_Point
                        :part_ref_and_pose_a_1 :point_a_1)
ObjectPropertyAssertion(:hasPartRefAndPose_ZAxis
                        :part_ref_and_pose_a_1 :z_axis_a_1)
ObjectPropertyAssertion(:hasPartRefAndPose_XAxis
                        :part_ref_and_pose_a_1 :x_axis_a_1)
ObjectPropertyAssertion(:hadByPartRefAndPose_KitDesign
                        :part_ref_and_pose_a_1 :kit_design_a2b1c1)


// part_ref_and_pose_a_2 *****************************************************
Declaration(NamedIndividual(:part_ref_and_pose_a_2))
ClassAssertion(:PartRefAndPose :part_ref_and_pose_a_2)
DataPropertyAssertion(:hasPartRefAndPose_Ref :part_ref_and_pose_a_2
                      "SkuIdPartA"^^xsd:NMTOKEN)
ObjectPropertyAssertion(:hasPartRefAndPose_Point
                        :part_ref_and_pose_a_2 :point_a_2)
ObjectPropertyAssertion(:hasPartRefAndPose_ZAxis
                        :part_ref_and_pose_a_2 :z_axis_a_2)
ObjectPropertyAssertion(:hasPartRefAndPose_XAxis
                        :part_ref_and_pose_a_2 :x_axis_a_2)
ObjectPropertyAssertion(:hadByPartRefAndPose_KitDesign
                        :part_ref_and_pose_a_2 :kit_design_a2b1c1)


// part_ref_and_pose_b_1 *****************************************************
Declaration(NamedIndividual(:part_ref_and_pose_b_1))
ClassAssertion(:PartRefAndPose :part_ref_and_pose_b_1)
DataPropertyAssertion(:hasPartRefAndPose_Ref :part_ref_and_pose_b_1
                      "SkuIdPartB"^^xsd:NMTOKEN)
ObjectPropertyAssertion(:hasPartRefAndPose_Point
                        :part_ref_and_pose_b_1 :point_b_1)
ObjectPropertyAssertion(:hasPartRefAndPose_ZAxis
                        :part_ref_and_pose_b_1 :z_axis_b_1)
ObjectPropertyAssertion(:hasPartRefAndPose_XAxis
                        :part_ref_and_pose_b_1 :x_axis_b_1)
ObjectPropertyAssertion(:hadByPartRefAndPose_KitDesign
                        :part_ref_and_pose_b_1 :kit_design_a2b1c1)


// part_ref_and_pose_c_1 *****************************************************
Declaration(NamedIndividual(:part_ref_and_pose_c_1))
ClassAssertion(:PartRefAndPose :part_ref_and_pose_c_1)
DataPropertyAssertion(:hasPartRefAndPose_Ref :part_ref_and_pose_c_1
                      "SkuIdPartC"^^xsd:NMTOKEN)
ObjectPropertyAssertion(:hasPartRefAndPose_Point
                        :part_ref_and_pose_c_1 :point_c_1)
ObjectPropertyAssertion(:hasPartRefAndPose_ZAxis
                        :part_ref_and_pose_c_1 :z_axis_c_1)
ObjectPropertyAssertion(:hasPartRefAndPose_XAxis
                        :part_ref_and_pose_c_1 :x_axis_c_1)
ObjectPropertyAssertion(:hadByPartRefAndPose_KitDesign
                        :part_ref_and_pose_c_1 :kit_design_a2b1c1)


// robot_1 ***************************************************************
Declaration(NamedIndividual(:robot_1))
ClassAssertion(:Robot :robot_1)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation :robot_1 :robot_pose)
DataPropertyAssertion(:hasRobot_Description :robot_1
                      "this is the robot"^^xsd:string)
DataPropertyAssertion(:hasRobot_Id :robot_1 "robot_1"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasRobot_MaximumLoadWeight :robot_1 "7.0"^^xsd:decimal)
ObjectPropertyAssertion(:hasRobot_EndEffector :robot_1 :tray_gripper)
ObjectPropertyAssertion(:hasRobot_WorkVolume :robot_1 :box_volume_1)
ObjectPropertyAssertion(:hadByRobot_Workstation :robot_1 :kitting_workstation_1)


// shape_kit_box **********************************************************
Declaration(NamedIndividual(:shape_kit_box))
ClassAssertion(:ShapeDesign :shape_kit_box)
DataPropertyAssertion(:hasShapeDesign_Description :shape_kit_box
                      "Shape of boxes to hold kits and kit trays"^^xsd:string)


// shape_kit_tray *************************************************************
Declaration(NamedIndividual(:shape_kit_tray))
ClassAssertion(:ShapeDesign :shape_kit_tray)
DataPropertyAssertion(:hasShapeDesign_Description :shape_kit_tray
                      "Shape of KitTrays"^^xsd:string)


// shape_part_a ***********************************************************
Declaration(NamedIndividual(:shape_part_a))
ClassAssertion(:ShapeDesign :shape_part_a)
DataPropertyAssertion(:hasShapeDesign_Description :shape_part_a
                      "Shape of PartA"^^xsd:string)


// shape_part_b ***********************************************************
Declaration(NamedIndividual(:shape_part_b))
ClassAssertion(:ShapeDesign :shape_part_b)
DataPropertyAssertion(:hasShapeDesign_Description :shape_part_b
                      "Shape of PartB"^^xsd:string)


// shape_part_c ***********************************************************
Declaration(NamedIndividual(:shape_part_c))
ClassAssertion(:ShapeDesign :shape_part_c)
DataPropertyAssertion(:hasShapeDesign_Description :shape_part_c
                      "Shape of PartC"^^xsd:string)


// shape_parts_tray *******************************************************
Declaration(NamedIndividual(:shape_parts_tray))
ClassAssertion(:ShapeDesign :shape_parts_tray)
DataPropertyAssertion(:hasShapeDesign_Description :shape_parts_tray
                      "Shape of PartsTrays"^^xsd:string)


// stock_keeping_unit_kit_box ************************************************
Declaration(NamedIndividual(:stock_keeping_unit_kit_box))
ClassAssertion(:StockKeepingUnit :stock_keeping_unit_kit_box)
DataPropertyAssertion(:hasSku_Description :stock_keeping_unit_kit_box
                      "SKU for Boxes for Kits and KitTrays"^^xsd:string)
DataPropertyAssertion(:hasSku_Weight :stock_keeping_unit_kit_box
                      "1.2"^^xsd:decimal)
DataPropertyAssertion(:hasSku_Id :stock_keeping_unit_kit_box
                      "SkuIdKitBox"^^xsd:NMTOKEN)
ObjectPropertyAssertion(:hasSku_Shape :stock_keeping_unit_kit_box
                        :shape_kit_box)
ObjectPropertyAssertion(:hadBySku_Workstation :stock_keeping_unit_kit_box
                        :kitting_workstation_1)


// stock_keeping_unit_kit_tray ***********************************************
Declaration(NamedIndividual(:stock_keeping_unit_kit_tray))
ClassAssertion(:StockKeepingUnit :stock_keeping_unit_kit_tray)
DataPropertyAssertion(:hasSku_Description :stock_keeping_unit_kit_tray
                      "SKU for KitTrays"^^xsd:string)
DataPropertyAssertion(:hasSku_Weight :stock_keeping_unit_kit_tray
                      "0.2"^^xsd:decimal)
DataPropertyAssertion(:hasSku_Id :stock_keeping_unit_kit_tray
                      "SkuIdKitTray"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasSku_EndEffectorRefs :stock_keeping_unit_kit_tray
                      "TheTrayGripper"^^xsd:NMTOKEN)
ObjectPropertyAssertion(:hasSku_Shape :stock_keeping_unit_kit_tray
                        :shape_kit_tray)
ObjectPropertyAssertion(:hadBySku_Workstation :stock_keeping_unit_kit_tray
                        :kitting_workstation_1)


// stock_keeping_unit_part_a ************************************************
Declaration(NamedIndividual(:stock_keeping_unit_part_a))
ClassAssertion(:StockKeepingUnit :stock_keeping_unit_part_a)
DataPropertyAssertion(:hasSku_Description :stock_keeping_unit_part_a
                      "SKU for Part A"^^xsd:string)
DataPropertyAssertion(:hasSku_Weight :stock_keeping_unit_part_a
                      "0.18"^^xsd:decimal)
DataPropertyAssertion(:hasSku_Id :stock_keeping_unit_part_a
                      "SkuIdPartA"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasSku_EndEffectorRefs :stock_keeping_unit_part_a
                      "ThePartGripper"^^xsd:NMTOKEN)
ObjectPropertyAssertion(:hasSku_Shape :stock_keeping_unit_part_a :shape_part_a)
ObjectPropertyAssertion(:hadBySku_Workstation :stock_keeping_unit_part_a
                        :kitting_workstation_1)


// stock_keeping_unit_part_b ************************************************
Declaration(NamedIndividual(:stock_keeping_unit_part_b))
ClassAssertion(:StockKeepingUnit :stock_keeping_unit_part_b)
DataPropertyAssertion(:hasSku_Description :stock_keeping_unit_part_b
                      "SKU for PartB"^^xsd:string)
DataPropertyAssertion(:hasSku_Weight :stock_keeping_unit_part_b
                      "0.18"^^xsd:decimal)
DataPropertyAssertion(:hasSku_Id :stock_keeping_unit_part_b
                      "SkuIdPartB"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasSku_EndEffectorRefs :stock_keeping_unit_part_b
                      "ThePartGripper"^^xsd:NMTOKEN)
ObjectPropertyAssertion(:hasSku_Shape :stock_keeping_unit_part_b :shape_part_b)
ObjectPropertyAssertion(:hadBySku_Workstation :stock_keeping_unit_part_b
                        :kitting_workstation_1)


// stock_keeping_unit_part_c ************************************************
Declaration(NamedIndividual(:stock_keeping_unit_part_c))
ClassAssertion(:StockKeepingUnit :stock_keeping_unit_part_c)
DataPropertyAssertion(:hasSku_Description :stock_keeping_unit_part_c
                      "SKU for PartC"^^xsd:string)
DataPropertyAssertion(:hasSku_Weight :stock_keeping_unit_part_c
                      "0.18"^^xsd:decimal)
DataPropertyAssertion(:hasSku_Id :stock_keeping_unit_part_c
                      "SkuIdPartC"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasSku_EndEffectorRefs :stock_keeping_unit_part_c
                      "ThePartGripper"^^xsd:NMTOKEN)
ObjectPropertyAssertion(:hasSku_Shape :stock_keeping_unit_part_c :shape_part_c)
ObjectPropertyAssertion(:hadBySku_Workstation :stock_keeping_unit_part_c
                        :kitting_workstation_1)


// stock_keeping_unit_parts_tray ********************************************
Declaration(NamedIndividual(:stock_keeping_unit_parts_tray))
ClassAssertion(:StockKeepingUnit :stock_keeping_unit_parts_tray)
DataPropertyAssertion(:hasSku_Description :stock_keeping_unit_parts_tray
                      "SKU for PartsTrays"^^xsd:string)
DataPropertyAssertion(:hasSku_Weight :stock_keeping_unit_parts_tray
                      "0.2"^^xsd:decimal)
DataPropertyAssertion(:hasSku_Id :stock_keeping_unit_parts_tray
                      "SkuIdPartsTray"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasSku_EndEffectorRefs :stock_keeping_unit_parts_tray
                      "TheTrayGripper"^^xsd:NMTOKEN)
ObjectPropertyAssertion(:hasSku_Shape :stock_keeping_unit_parts_tray
                        :shape_parts_tray)
ObjectPropertyAssertion(:hadBySku_Workstation :stock_keeping_unit_parts_tray
                        :kitting_workstation_1)


// tray_gripper ********************************************************
Declaration(NamedIndividual(:tray_gripper))
ClassAssertion(:VacuumEffectorSingleCup :tray_gripper)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation
  :tray_gripper :relative_location_on_1)
ObjectPropertyAssertion(:hadByEndEffector_Robot :tray_gripper :robot_1)
DataPropertyAssertion(:hasEndEffector_Description :tray_gripper
  "large single cup vacuum effector"^^xsd:string)
DataPropertyAssertion(:hasEndEffector_Weight :tray_gripper
   "0.04"^^:positiveDecimal)
DataPropertyAssertion(:hasEndEffector_Id :tray_gripper
   "TheTrayGripper"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasVacuumEffector_CupDiameter :tray_gripper
   "0.04"^^:positiveDecimal)
DataPropertyAssertion(:hasVacuumEffector_Length :tray_gripper
   "0.1"^^:positiveDecimal)


// tray_gripper_holder **************************************************
Declaration(NamedIndividual(:tray_gripper_holder))
ClassAssertion(:EndEffectorHolder :tray_gripper_holder)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation :tray_gripper_holder
                        :tray_gripper_holder_pose)
ObjectPropertyAssertion(:hadByEndEffectorHolder_ChangingStation
                        :tray_gripper_holder :changing_station_1)

// Workstation ********************************************************
Declaration(NamedIndividual(:kitting_workstation_1))
ClassAssertion(:KittingWorkstation :kitting_workstation_1)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation :kitting_workstation_1
                        :relative_location_in_1)
DataPropertyAssertion(:hasWorkstation_AngleUnit :kitting_workstation_1
                      "degree")
DataPropertyAssertion(:hasWorkstation_LengthUnit :kitting_workstation_1
                      "meter")
DataPropertyAssertion(:hasWorkstation_WeightUnit :kitting_workstation_1
                      "kilogram")
ObjectPropertyAssertion(:hasWorkstation_Robot :kitting_workstation_1 :robot_1)
ObjectPropertyAssertion(:hasWorkstation_ChangingStation :kitting_workstation_1
                        :changing_station_1)
ObjectPropertyAssertion(:hasWorkstation_Table :kitting_workstation_1
                        :work_table_1)
ObjectPropertyAssertion(:hasWorkstation_SkuLibrary :kitting_workstation_1
                        :stock_keeping_unit_kit_box)
ObjectPropertyAssertion(:hasWorkstation_SkuLibrary :kitting_workstation_1
                        :stock_keeping_unit_kit_tray)
ObjectPropertyAssertion(:hasWorkstation_SkuLibrary :kitting_workstation_1
                        :stock_keeping_unit_part_a)
ObjectPropertyAssertion(:hasWorkstation_SkuLibrary :kitting_workstation_1
                        :stock_keeping_unit_part_b)
ObjectPropertyAssertion(:hasWorkstation_SkuLibrary :kitting_workstation_1
                        :stock_keeping_unit_part_c)
ObjectPropertyAssertion(:hasWorkstation_SkuLibrary :kitting_workstation_1
                        :stock_keeping_unit_parts_tray)

ObjectPropertyAssertion(:hasWorkstation_KitDesignLibrary :kitting_workstation_1
                        :kit_design_a2b1c1)


// work_table_1  *********************************************************
Declaration(NamedIndividual(:work_table_1))
ClassAssertion(:WorkTable :work_table_1)
ObjectPropertyAssertion(:hasSolidObject_PrimaryLocation :work_table_1
                        :work_table_pose)
ObjectPropertyAssertion(:hadByWorkTable_Workstation :work_table_1
                        :kitting_workstation_1)
DataPropertyAssertion(:hasBox_Height :work_table_1 "0.5"^^:positiveDecimal)
DataPropertyAssertion(:hasBox_Length :work_table_1 "1.6"^^:positiveDecimal)
DataPropertyAssertion(:hasBox_Width :work_table_1 "0.8"^^:positiveDecimal)


// box_volume_1 **********************************************************
Declaration(NamedIndividual(:box_volume_1))
ClassAssertion(:BoxVolume :box_volume_1)
Declaration(NamedIndividual(:point_max))
ClassAssertion(:Point :point_max)
DataPropertyAssertion(:hasPoint_X :point_max "1.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :point_max "1.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :point_max "2.0"^^xsd:decimal)
Declaration(NamedIndividual(:point_min))
ClassAssertion(:Point :point_min)
DataPropertyAssertion(:hasPoint_X :point_min "-1.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :point_min "-1.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :point_min "0.0"^^xsd:decimal)
ObjectPropertyAssertion(:hasBoxVolume_MaximumPoint :box_volume_1 :point_max)
ObjectPropertyAssertion(:hasBoxVolume_MinimumPoint :box_volume_1 :point_min)


// Different Individuals **********************************************
DifferentIndividuals(:empty_kit_tray_box :finished_kit_box)
DifferentIndividuals(:part_gripper_holder :tray_gripper_holder)
DifferentIndividuals(
 :part_a_1
 :part_a_2
 :part_b_1
 :part_c_1)
DifferentIndividuals(:part_gripper :tray_gripper)
DifferentIndividuals(:part_a_supply :part_b_supply :part_c_supply)
DifferentIndividuals(:part_a_tray :part_b_tray :part_c_tray)
DifferentIndividuals(
 :part_ref_and_pose_a_1
 :part_ref_and_pose_a_2
 :part_ref_and_pose_b_1
 :part_ref_and_pose_c_1)
DifferentIndividuals(
 :shape_kit_box
 :shape_kit_tray
 :shape_part_a
 :shape_part_b
 :shape_part_c
 :shape_parts_tray)
DifferentIndividuals(
 :stock_keeping_unit_kit_box
 :stock_keeping_unit_kit_tray
 :stock_keeping_unit_part_a
 :stock_keeping_unit_part_b
 :stock_keeping_unit_part_c
 :stock_keeping_unit_parts_tray)


// Start Poses
// changing_station_pose ************************************************
Declaration(NamedIndividual(:changing_station_pose))
ClassAssertion(:PoseOnlyLocation :changing_station_pose)
ObjectPropertyAssertion(:hasPoseLocation_Point :changing_station_pose
                        :changing_station_point)
ObjectPropertyAssertion(:hasPoseLocation_ZAxis :changing_station_pose
                        :changing_station_z_axis)
ObjectPropertyAssertion(:hasPoseLocation_XAxis :changing_station_pose
                        :changing_station_x_axis)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject :changing_station_pose
  :kitting_workstation_1)

Declaration(NamedIndividual(:changing_station_point))
ClassAssertion(:Point :changing_station_point)
DataPropertyAssertion(:hasPoint_X :changing_station_point "7.5"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :changing_station_point "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :changing_station_point "0.0"^^xsd:decimal)

Declaration(NamedIndividual(:changing_station_z_axis))
ClassAssertion(:Vector :changing_station_z_axis)
DataPropertyAssertion(:hasVector_I :changing_station_z_axis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :changing_station_z_axis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :changing_station_z_axis "1.0"^^xsd:decimal)

Declaration(NamedIndividual(:changing_station_x_axis))
ClassAssertion(:Vector :changing_station_x_axis)
DataPropertyAssertion(:hasVector_I :changing_station_x_axis "1.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :changing_station_x_axis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :changing_station_x_axis "0.0"^^xsd:decimal)


// empty_kit_tray_box_pose *************************************************
Declaration(NamedIndividual(:empty_kit_tray_box_pose))
ClassAssertion(:PoseOnlyLocation :empty_kit_tray_box_pose)
ObjectPropertyAssertion(:hasPoseLocation_Point :empty_kit_tray_box_pose
                        :empty_kit_tray_box_point)
ObjectPropertyAssertion(:hasPoseLocation_ZAxis :empty_kit_tray_box_pose
                        :empty_kit_tray_box_z_axis)
ObjectPropertyAssertion(:hasPoseLocation_XAxis :empty_kit_tray_box_pose
                        :empty_kit_tray_box_x_axis)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject :empty_kit_tray_box_pose
                        :empty_kit_tray_supply)

Declaration(NamedIndividual(:empty_kit_tray_box_point))
ClassAssertion(:Point :empty_kit_tray_box_point)
DataPropertyAssertion(:hasPoint_X :empty_kit_tray_box_point "0.5"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :empty_kit_tray_box_point "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :empty_kit_tray_box_point "0.0"^^xsd:decimal)

Declaration(NamedIndividual(:empty_kit_tray_box_z_axis))
ClassAssertion(:Vector :empty_kit_tray_box_z_axis)
DataPropertyAssertion(:hasVector_I :empty_kit_tray_box_z_axis
                      "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :empty_kit_tray_box_z_axis
                      "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :empty_kit_tray_box_z_axis
                      "1.0"^^xsd:decimal)

Declaration(NamedIndividual(:empty_kit_tray_box_x_axis))
ClassAssertion(:Vector :empty_kit_tray_box_x_axis)
DataPropertyAssertion(:hasVector_I :empty_kit_tray_box_x_axis
                      "1.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :empty_kit_tray_box_x_axis
                      "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :empty_kit_tray_box_x_axis
                      "0.0"^^xsd:decimal)


// empty_kit_tray_supply_pose *************************************************
Declaration(NamedIndividual(:empty_kit_tray_supply_pose))
ClassAssertion(:PoseOnlyLocation :empty_kit_tray_supply_pose)
ObjectPropertyAssertion(:hasPoseLocation_Point :empty_kit_tray_supply_pose
                        :empty_kit_tray_supply_point)
ObjectPropertyAssertion(:hasPoseLocation_ZAxis :empty_kit_tray_supply_pose
                        :empty_kit_tray_supply_z_axis)
ObjectPropertyAssertion(:hasPoseLocation_XAxis :empty_kit_tray_supply_pose
                        :empty_kit_tray_supply_x_axis)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :empty_kit_tray_supply_pose :kitting_workstation_1)

Declaration(NamedIndividual(:empty_kit_tray_supply_point))
ClassAssertion(:Point :empty_kit_tray_supply_point)
DataPropertyAssertion(:hasPoint_X :empty_kit_tray_supply_point
                      "0.5"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :empty_kit_tray_supply_point
                      "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :empty_kit_tray_supply_point
                      "0.0"^^xsd:decimal)

Declaration(NamedIndividual(:empty_kit_tray_supply_z_axis))
ClassAssertion(:Vector :empty_kit_tray_supply_z_axis)
DataPropertyAssertion(:hasVector_I :empty_kit_tray_supply_z_axis
                      "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :empty_kit_tray_supply_z_axis
                      "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :empty_kit_tray_supply_z_axis
                      "1.0"^^xsd:decimal)

Declaration(NamedIndividual(:empty_kit_tray_supply_x_axis))
ClassAssertion(:Vector :empty_kit_tray_supply_x_axis)
DataPropertyAssertion(:hasVector_I :empty_kit_tray_supply_x_axis
                      "1.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :empty_kit_tray_supply_x_axis
                      "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :empty_kit_tray_supply_x_axis
                      "0.0"^^xsd:decimal)


// finished_kit_box_pose *************************************************
Declaration(NamedIndividual(:finished_kit_box_pose))
ClassAssertion(:PoseOnlyLocation :finished_kit_box_pose)
ObjectPropertyAssertion(:hasPoseLocation_Point :finished_kit_box_pose
                        :finished_kit_box_point)
ObjectPropertyAssertion(:hasPoseLocation_ZAxis :finished_kit_box_pose
                        :finished_kit_box_z_axis)
ObjectPropertyAssertion(:hasPoseLocation_XAxis :finished_kit_box_pose
                        :finished_kit_box_x_axis)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject :finished_kit_box_pose
  :finished_kit_receiver)

Declaration(NamedIndividual(:finished_kit_box_point))
ClassAssertion(:Point :finished_kit_box_point)
DataPropertyAssertion(:hasPoint_X :finished_kit_box_point "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :finished_kit_box_point "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :finished_kit_box_point "0.0"^^xsd:decimal)

Declaration(NamedIndividual(:finished_kit_box_z_axis))
ClassAssertion(:Vector :finished_kit_box_z_axis)
DataPropertyAssertion(:hasVector_I :finished_kit_box_z_axis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :finished_kit_box_z_axis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :finished_kit_box_z_axis "1.0"^^xsd:decimal)

Declaration(NamedIndividual(:finished_kit_box_x_axis))
ClassAssertion(:Vector :finished_kit_box_x_axis)
DataPropertyAssertion(:hasVector_I :finished_kit_box_x_axis "1.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :finished_kit_box_x_axis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :finished_kit_box_x_axis "0.0"^^xsd:decimal)


// finished_kit_receiver_pose ********************************************
Declaration(NamedIndividual(:finished_kit_receiver_pose))
ClassAssertion(:PoseOnlyLocation :finished_kit_receiver_pose)
ObjectPropertyAssertion(:hasPoseLocation_Point :finished_kit_receiver_pose
                        :finished_kit_receiver_point)
ObjectPropertyAssertion(:hasPoseLocation_ZAxis :finished_kit_receiver_pose
                        :finished_kit_receiver_z_axis)
ObjectPropertyAssertion(:hasPoseLocation_XAxis :finished_kit_receiver_pose
                        :finished_kit_receiver_x_axis)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :finished_kit_receiver_pose :kitting_workstation_1)

Declaration(NamedIndividual(:finished_kit_receiver_point))
ClassAssertion(:Point :finished_kit_receiver_point)
DataPropertyAssertion(:hasPoint_X :finished_kit_receiver_point
                      "1.5"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :finished_kit_receiver_point
                      "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :finished_kit_receiver_point
                      "0.0"^^xsd:decimal)

Declaration(NamedIndividual(:finished_kit_receiver_z_axis))
ClassAssertion(:Vector :finished_kit_receiver_z_axis)
DataPropertyAssertion(:hasVector_I :finished_kit_receiver_z_axis
                      "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :finished_kit_receiver_z_axis
                      "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :finished_kit_receiver_z_axis
                      "1.0"^^xsd:decimal)

Declaration(NamedIndividual(:finished_kit_receiver_x_axis))
ClassAssertion(:Vector :finished_kit_receiver_x_axis)
DataPropertyAssertion(:hasVector_I :finished_kit_receiver_x_axis
                      "1.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :finished_kit_receiver_x_axis
                      "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :finished_kit_receiver_x_axis
                      "0.0"^^xsd:decimal)


// kit_tray_1_pose ******************************************************
Declaration(NamedIndividual(:kit_tray_1_pose))
ClassAssertion(:PoseOnlyLocation :kit_tray_1_pose)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :kit_tray_1_pose :kit_tray_1_point)
ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :kit_tray_1_pose :kit_tray_1_z_axis)
ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :kit_tray_1_pose :kit_tray_1_x_axis)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :kit_tray_1_pose :empty_kit_tray_box)

Declaration(NamedIndividual(:kit_tray_1_point))
ClassAssertion(:Point :kit_tray_1_point)
DataPropertyAssertion(:hasPoint_X :kit_tray_1_point "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :kit_tray_1_point "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :kit_tray_1_point "0.0"^^xsd:decimal)

Declaration(NamedIndividual(:kit_tray_1_z_axis))
ClassAssertion(:Vector :kit_tray_1_z_axis)
DataPropertyAssertion(:hasVector_I :kit_tray_1_z_axis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :kit_tray_1_z_axis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :kit_tray_1_z_axis "1.0"^^xsd:decimal)

Declaration(NamedIndividual(:kit_tray_1_x_axis))
ClassAssertion(:Vector :kit_tray_1_x_axis)
DataPropertyAssertion(:hasVector_I :kit_tray_1_x_axis "1.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :kit_tray_1_x_axis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :kit_tray_1_x_axis "0.0"^^xsd:decimal)


// part_a_supply_pose **************************************************
Declaration(NamedIndividual(:part_a_supply_pose))
ClassAssertion(:PoseOnlyLocation :part_a_supply_pose)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :part_a_supply_pose :part_a_supply_point)
ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :part_a_supply_pose :part_a_supply_z_axis)
ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :part_a_supply_pose :part_a_supply_x_axis)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :part_a_supply_pose :kitting_workstation_1)

Declaration(NamedIndividual(:part_a_supply_point))
ClassAssertion(:Point :part_a_supply_point)
DataPropertyAssertion(:hasPoint_X :part_a_supply_point "4.5"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :part_a_supply_point "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :part_a_supply_point "0.0"^^xsd:decimal)

Declaration(NamedIndividual(:part_a_supply_z_axis))
ClassAssertion(:Vector :part_a_supply_z_axis)
DataPropertyAssertion(:hasVector_I :part_a_supply_z_axis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_a_supply_z_axis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_a_supply_z_axis "1.0"^^xsd:decimal)

Declaration(NamedIndividual(:part_a_supply_x_axis))
ClassAssertion(:Vector :part_a_supply_x_axis)
DataPropertyAssertion(:hasVector_I :part_a_supply_x_axis "1.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_a_supply_x_axis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_a_supply_x_axis "0.0"^^xsd:decimal)


// part_b_supply_pose **************************************************
Declaration(NamedIndividual(:part_b_supply_pose))
ClassAssertion(:PoseOnlyLocation :part_b_supply_pose)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :part_b_supply_pose :part_b_supply_point)
ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :part_b_supply_pose :part_b_supply_z_axis)
ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :part_b_supply_pose :part_b_supply_x_axis)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :part_b_supply_pose :kitting_workstation_1)

Declaration(NamedIndividual(:part_b_supply_point))
ClassAssertion(:Point :part_b_supply_point)
DataPropertyAssertion(:hasPoint_X :part_b_supply_point "5.5"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :part_b_supply_point "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :part_b_supply_point "0.0"^^xsd:decimal)

Declaration(NamedIndividual(:part_b_supply_z_axis))
ClassAssertion(:Vector :part_b_supply_z_axis)
DataPropertyAssertion(:hasVector_I :part_b_supply_z_axis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_b_supply_z_axis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_b_supply_z_axis "1.0"^^xsd:decimal)

Declaration(NamedIndividual(:part_b_supply_x_axis))
ClassAssertion(:Vector :part_b_supply_x_axis)
DataPropertyAssertion(:hasVector_I :part_b_supply_x_axis "1.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_b_supply_x_axis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_b_supply_x_axis "0.0"^^xsd:decimal)


// part_c_supply_pose **************************************************
Declaration(NamedIndividual(:part_c_supply_pose))
ClassAssertion(:PoseOnlyLocation :part_c_supply_pose)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :part_c_supply_pose :part_c_supply_point)
ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :part_c_supply_pose :part_c_supply_z_axis)
ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :part_c_supply_pose :part_c_supply_x_axis)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :part_c_supply_pose :kitting_workstation_1)

Declaration(NamedIndividual(:part_c_supply_point))
ClassAssertion(:Point :part_c_supply_point)
DataPropertyAssertion(:hasPoint_X :part_c_supply_point "6.5"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :part_c_supply_point "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :part_c_supply_point "0.0"^^xsd:decimal)

Declaration(NamedIndividual(:part_c_supply_z_axis))
ClassAssertion(:Vector :part_c_supply_z_axis)
DataPropertyAssertion(:hasVector_I :part_c_supply_z_axis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_c_supply_z_axis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_c_supply_z_axis "1.0"^^xsd:decimal)

Declaration(NamedIndividual(:part_c_supply_x_axis))
ClassAssertion(:Vector :part_c_supply_x_axis)
DataPropertyAssertion(:hasVector_I :part_c_supply_x_axis "1.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_c_supply_x_axis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_c_supply_x_axis "0.0"^^xsd:decimal)


// part_a_tray_pose **************************************************
Declaration(NamedIndividual(:part_a_tray_pose))
ClassAssertion(:PoseOnlyLocation :part_a_tray_pose)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :part_a_tray_pose :part_a_tray_point)
ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :part_a_tray_pose :part_a_tray_z_axis)
ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :part_a_tray_pose :part_a_tray_x_axis)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :part_a_tray_pose :part_a_supply)

Declaration(NamedIndividual(:part_a_tray_point))
ClassAssertion(:Point :part_a_tray_point)
DataPropertyAssertion(:hasPoint_X :part_a_tray_point "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :part_a_tray_point "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :part_a_tray_point "0.0"^^xsd:decimal)

Declaration(NamedIndividual(:part_a_tray_z_axis))
ClassAssertion(:Vector :part_a_tray_z_axis)
DataPropertyAssertion(:hasVector_I :part_a_tray_z_axis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_a_tray_z_axis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_a_tray_z_axis "1.0"^^xsd:decimal)

Declaration(NamedIndividual(:part_a_tray_x_axis))
ClassAssertion(:Vector :part_a_tray_x_axis)
DataPropertyAssertion(:hasVector_I :part_a_tray_x_axis "1.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_a_tray_x_axis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_a_tray_x_axis "0.0"^^xsd:decimal)


// part_b_tray_pose **************************************************
Declaration(NamedIndividual(:part_b_tray_pose))
ClassAssertion(:PoseOnlyLocation :part_b_tray_pose)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :part_b_tray_pose :part_b_tray_point)
ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :part_b_tray_pose :part_b_tray_z_axis)
ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :part_b_tray_pose :part_b_tray_x_axis)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :part_b_tray_pose :part_b_supply)

Declaration(NamedIndividual(:part_b_tray_point))
ClassAssertion(:Point :part_b_tray_point)
DataPropertyAssertion(:hasPoint_X :part_b_tray_point "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :part_b_tray_point "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :part_b_tray_point "0.0"^^xsd:decimal)

Declaration(NamedIndividual(:part_b_tray_z_axis))
ClassAssertion(:Vector :part_b_tray_z_axis)
DataPropertyAssertion(:hasVector_I :part_b_tray_z_axis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_b_tray_z_axis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_b_tray_z_axis "1.0"^^xsd:decimal)

Declaration(NamedIndividual(:part_b_tray_x_axis))
ClassAssertion(:Vector :part_b_tray_x_axis)
DataPropertyAssertion(:hasVector_I :part_b_tray_x_axis "1.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_b_tray_x_axis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_b_tray_x_axis "0.0"^^xsd:decimal)


// part_c_tray_pose **************************************************
Declaration(NamedIndividual(:part_c_tray_pose))
ClassAssertion(:PoseOnlyLocation :part_c_tray_pose)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :part_c_tray_pose :part_c_tray_point)
ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :part_c_tray_pose :part_c_tray_z_axis)
ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :part_c_tray_pose :part_c_tray_x_axis)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :part_c_tray_pose :part_c_supply)

Declaration(NamedIndividual(:part_c_tray_point))
ClassAssertion(:Point :part_c_tray_point)
DataPropertyAssertion(:hasPoint_X :part_c_tray_point "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :part_c_tray_point "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :part_c_tray_point "0.0"^^xsd:decimal)

Declaration(NamedIndividual(:part_c_tray_z_axis))
ClassAssertion(:Vector :part_c_tray_z_axis)
DataPropertyAssertion(:hasVector_I :part_c_tray_z_axis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_c_tray_z_axis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_c_tray_z_axis "1.0"^^xsd:decimal)

Declaration(NamedIndividual(:part_c_tray_x_axis))
ClassAssertion(:Vector :part_c_tray_x_axis)
DataPropertyAssertion(:hasVector_I :part_c_tray_x_axis "1.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_c_tray_x_axis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_c_tray_x_axis "0.0"^^xsd:decimal)


// part_gripper_holder_pose *********************************************
Declaration(NamedIndividual(:part_gripper_holder_pose))
ClassAssertion(:PoseOnlyLocation :part_gripper_holder_pose)
ObjectPropertyAssertion(:hasPoseLocation_Point :part_gripper_holder_pose
                        :part_gripper_holder_point)
ObjectPropertyAssertion(:hasPoseLocation_ZAxis :part_gripper_holder_pose
                        :part_gripper_holder_z_axis)
ObjectPropertyAssertion(:hasPoseLocation_XAxis :part_gripper_holder_pose
                        :part_gripper_holder_x_axis)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :part_gripper_holder_pose :part_gripper_holder_1)

Declaration(NamedIndividual(:part_gripper_holder_point))
ClassAssertion(:Point :part_gripper_holder_point)
DataPropertyAssertion(:hasPoint_X :part_gripper_holder_point
                      "0.25"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :part_gripper_holder_point
                      "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :part_gripper_holder_point
                      "0.5"^^xsd:decimal)

Declaration(NamedIndividual(:part_gripper_holder_z_axis))
ClassAssertion(:Vector :part_gripper_holder_z_axis)
DataPropertyAssertion(:hasVector_I :part_gripper_holder_z_axis
                      "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_gripper_holder_z_axis
                      "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_gripper_holder_z_axis
                      "1.0"^^xsd:decimal)

Declaration(NamedIndividual(:part_gripper_holder_x_axis))
ClassAssertion(:Vector :part_gripper_holder_x_axis)
DataPropertyAssertion(:hasVector_I :part_gripper_holder_x_axis
                      "1.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_gripper_holder_x_axis
                      "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_gripper_holder_x_axis
                      "0.0"^^xsd:decimal)


// part_gripper_pose ****************************************************
Declaration(NamedIndividual(:part_gripper_pose))
ClassAssertion(:PoseOnlyLocation :part_gripper_pose)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :part_gripper_pose :part_gripper_point)
ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :part_gripper_pose :part_gripper_z_axis)
ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :part_gripper_pose :part_gripper_x_axis)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :part_gripper_pose :part_gripper_holder)

Declaration(NamedIndividual(:part_gripper_point))
ClassAssertion(:Point :part_gripper_point)
DataPropertyAssertion(:hasPoint_X :part_gripper_point "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :part_gripper_point "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :part_gripper_point "0.0"^^xsd:decimal)

Declaration(NamedIndividual(:part_gripper_z_axis))
ClassAssertion(:Vector :part_gripper_z_axis)
DataPropertyAssertion(:hasVector_I :part_gripper_z_axis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_gripper_z_axis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_gripper_z_axis "1.0"^^xsd:decimal)

Declaration(NamedIndividual(:part_gripper_x_axis))
ClassAssertion(:Vector :part_gripper_x_axis)
DataPropertyAssertion(:hasVector_I :part_gripper_x_axis "1.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :part_gripper_x_axis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :part_gripper_x_axis "0.0"^^xsd:decimal)


// robot_pose *********************************************************
Declaration(NamedIndividual(:robot_pose))
ClassAssertion(:PoseOnlyLocation :robot_pose)
ObjectPropertyAssertion(:hasPoseLocation_Point :robot_pose :robot_point)
ObjectPropertyAssertion(:hasPoseLocation_ZAxis :robot_pose :robot_z_axis)
ObjectPropertyAssertion(:hasPoseLocation_XAxis :robot_pose :robot_x_axis)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject :robot_pose
  :kitting_workstation_1)

Declaration(NamedIndividual(:robot_point))
ClassAssertion(:Point :robot_point)
DataPropertyAssertion(:hasPoint_X :robot_point "3.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :robot_point "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :robot_point "2.0"^^xsd:decimal)

Declaration(NamedIndividual(:robot_z_axis))
ClassAssertion(:Vector :robot_z_axis)
DataPropertyAssertion(:hasVector_I :robot_z_axis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :robot_z_axis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :robot_z_axis "1.0"^^xsd:decimal)

Declaration(NamedIndividual(:robot_x_axis))
ClassAssertion(:Vector :robot_x_axis)
DataPropertyAssertion(:hasVector_I :robot_x_axis "1.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :robot_x_axis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :robot_x_axis "0.0"^^xsd:decimal)


// tray_gripper_holder_pose *********************************************
Declaration(NamedIndividual(:tray_gripper_holder_pose))
ClassAssertion(:PoseOnlyLocation :tray_gripper_holder_pose)
ObjectPropertyAssertion(:hasPoseLocation_Point :tray_gripper_holder_pose
                        :tray_gripper_holder_point)
ObjectPropertyAssertion(:hasPoseLocation_ZAxis :tray_gripper_holder_pose
                        :tray_gripper_holder_z_axis)
ObjectPropertyAssertion(:hasPoseLocation_XAxis :tray_gripper_holder_pose
                        :tray_gripper_holder_x_axis)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :tray_gripper_holder_pose :tray_gripper_holder_1)

Declaration(NamedIndividual(:tray_gripper_holder_point))
ClassAssertion(:Point :tray_gripper_holder_point)
DataPropertyAssertion(:hasPoint_X :tray_gripper_holder_point
                      "-0.25"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :tray_gripper_holder_point
                      "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :tray_gripper_holder_point
                      "0.5"^^xsd:decimal)

Declaration(NamedIndividual(:tray_gripper_holder_z_axis))
ClassAssertion(:Vector :tray_gripper_holder_z_axis)
DataPropertyAssertion(:hasVector_I :tray_gripper_holder_z_axis
                      "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :tray_gripper_holder_z_axis
                      "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :tray_gripper_holder_z_axis
                      "1.0"^^xsd:decimal)

Declaration(NamedIndividual(:tray_gripper_holder_x_axis))
ClassAssertion(:Vector :tray_gripper_holder_x_axis)
DataPropertyAssertion(:hasVector_I :tray_gripper_holder_x_axis
                      "1.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :tray_gripper_holder_x_axis
                      "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :tray_gripper_holder_x_axis
                      "0.0"^^xsd:decimal)


// work_table_pose ******************************************************
Declaration(NamedIndividual(:work_table_pose))
ClassAssertion(:PoseOnlyLocation :work_table_pose)
ObjectPropertyAssertion(:hasPoseLocation_Point
                        :work_table_pose :work_table_point)
ObjectPropertyAssertion(:hasPoseLocation_ZAxis
                        :work_table_pose :work_table_z_axis)
ObjectPropertyAssertion(:hasPoseLocation_XAxis
                        :work_table_pose :work_table_x_axis)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject
                        :work_table_pose :kitting_workstation_1)

Declaration(NamedIndividual(:work_table_point))
ClassAssertion(:Point :work_table_point)
DataPropertyAssertion(:hasPoint_X :work_table_point "3.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :work_table_point "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :work_table_point "0.0"^^xsd:decimal)

Declaration(NamedIndividual(:work_table_z_axis))
ClassAssertion(:Vector :work_table_z_axis)
DataPropertyAssertion(:hasVector_I :work_table_z_axis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :work_table_z_axis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :work_table_z_axis "1.0"^^xsd:decimal)

Declaration(NamedIndividual(:work_table_x_axis))
ClassAssertion(:Vector :work_table_x_axis)
DataPropertyAssertion(:hasVector_I :work_table_x_axis "1.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :work_table_x_axis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :work_table_x_axis "0.0"^^xsd:decimal)


// Points for kit design ****************************************
Declaration(NamedIndividual(:point_a_1))
ClassAssertion(:Point :point_a_1)
DataPropertyAssertion(:hasPoint_X :point_a_1 "0.2"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :point_a_1 "0.3"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :point_a_1 "0.0"^^xsd:decimal)

Declaration(NamedIndividual(:point_a_2))
ClassAssertion(:Point :point_a_2)
DataPropertyAssertion(:hasPoint_X :point_a_2 "0.4"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :point_a_2 "0.3"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :point_a_2 "0.0"^^xsd:decimal)

Declaration(NamedIndividual(:point_b_1))
ClassAssertion(:Point :point_b_1)
DataPropertyAssertion(:hasPoint_X :point_b_1 "0.2"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :point_b_1 "0.5"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :point_b_1 "0.0"^^xsd:decimal)

Declaration(NamedIndividual(:point_c_1))
ClassAssertion(:Point :point_c_1)
DataPropertyAssertion(:hasPoint_X :point_c_1 "0.4"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :point_c_1 "0.5"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :point_c_1 "0.0"^^xsd:decimal)

// axes for kit designs ***************************************
Declaration(NamedIndividual(:z_axis_a_1))
ClassAssertion(:Vector :z_axis_a_1)
DataPropertyAssertion(:hasVector_I :z_axis_a_1 "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :z_axis_a_1 "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :z_axis_a_1 "1.0"^^xsd:decimal)

Declaration(NamedIndividual(:x_axis_a_1))
ClassAssertion(:Vector :x_axis_a_1)
DataPropertyAssertion(:hasVector_I :x_axis_a_1 "1.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :x_axis_a_1 "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :x_axis_a_1 "0.0"^^xsd:decimal)

Declaration(NamedIndividual(:z_axis_a_2))
ClassAssertion(:Vector :z_axis_a_2)
DataPropertyAssertion(:hasVector_I :z_axis_a_2 "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :z_axis_a_2 "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :z_axis_a_2 "1.0"^^xsd:decimal)

Declaration(NamedIndividual(:x_axis_a_2))
ClassAssertion(:Vector :x_axis_a_2)
DataPropertyAssertion(:hasVector_I :x_axis_a_2 "1.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :x_axis_a_2 "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :x_axis_a_2 "0.0"^^xsd:decimal)

Declaration(NamedIndividual(:z_axis_b_1))
ClassAssertion(:Vector :z_axis_b_1)
DataPropertyAssertion(:hasVector_I :z_axis_b_1 "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :z_axis_b_1 "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :z_axis_b_1 "1.0"^^xsd:decimal)

Declaration(NamedIndividual(:x_axis_b_1))
ClassAssertion(:Vector :x_axis_b_1)
DataPropertyAssertion(:hasVector_I :x_axis_b_1 "1.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :x_axis_b_1 "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :x_axis_b_1 "0.0"^^xsd:decimal)

Declaration(NamedIndividual(:z_axis_c_1))
ClassAssertion(:Vector :z_axis_c_1)
DataPropertyAssertion(:hasVector_I :z_axis_c_1 "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :z_axis_c_1 "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :z_axis_c_1 "1.0"^^xsd:decimal)

Declaration(NamedIndividual(:x_axis_c_1))
ClassAssertion(:Vector :x_axis_c_1)
DataPropertyAssertion(:hasVector_I :x_axis_c_1 "1.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :x_axis_c_1 "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :x_axis_c_1 "0.0"^^xsd:decimal)


// Pose individuals *************************************************
DifferentIndividuals(
 :changing_station_pose
 :empty_kit_tray_box_pose
 :empty_kit_tray_supply_pose
 :finished_kit_box_pose
 :finished_kit_receiver_pose
 :kit_tray_1_pose
 :part_a_supply_pose
 :part_a_tray_pose
 :part_b_supply_pose
 :part_b_tray_pose
 :part_c_supply_pose
 :part_c_tray_pose
 :part_gripper_pose
 :part_gripper_holder_pose
 :robot_pose
 :tray_gripper_holder_pose
 :work_table_pose)

// Point individuals *************************************************
DifferentIndividuals(
 :changing_station_point
 :empty_kit_tray_box_point
 :empty_kit_tray_supply_point
 :finished_kit_box_point
 :finished_kit_receiver_point
 :kit_tray_1_point
 :part_a_supply_point
 :part_a_tray_point
 :part_b_supply_point
 :part_b_tray_point
 :part_c_supply_point
 :part_c_tray_point
 :part_gripper_point
 :part_gripper_holder_point
 :point_a_1
 :point_a_2
 :point_b_1
 :point_c_1
 :point_max
 :point_min
 :robot_point
 :tray_gripper_holder_point
 :work_table_point)

// Vector individuals *************************************************
DifferentIndividuals(
 :changing_station_x_axis
 :empty_kit_tray_box_x_axis
 :empty_kit_tray_supply_x_axis
 :finished_kit_box_x_axis
 :finished_kit_receiver_x_axis
 :kit_tray_1_x_axis
 :part_a_supply_x_axis
 :part_a_tray_x_axis
 :part_b_supply_x_axis
 :part_b_tray_x_axis
 :part_c_supply_x_axis
 :part_c_tray_x_axis
 :part_gripper_x_axis
 :part_gripper_holder_x_axis
 :robot_x_axis
 :x_axis_a_1
 :x_axis_a_2
 :x_axis_b_1
 :x_axis_c_1
 :tray_gripper_holder_x_axis
 :work_table_x_axis

 :changing_station_z_axis
 :empty_kit_tray_box_z_axis
 :empty_kit_tray_supply_z_axis
 :finished_kit_box_z_axis
 :finished_kit_receiver_z_axis
 :kit_tray_1_z_axis
 :part_a_supply_z_axis
 :part_a_tray_z_axis
 :part_b_supply_z_axis
 :part_b_tray_z_axis
 :part_c_supply_z_axis
 :part_c_tray_z_axis
 :part_gripper_z_axis
 :part_gripper_holder_z_axis
 :robot_z_axis
 :z_axis_a_1
 :z_axis_a_2
 :z_axis_b_1
 :z_axis_c_1
 :tray_gripper_holder_z_axis
 :work_table_z_axis)
// End Poses

// Start RelativeLocations ******************************************

Declaration(NamedIndividual(:part_a_1_location))
ClassAssertion(:RelativeLocationIn :part_a_1_location)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject :part_a_1_location
                        :part_a_tray)
DataPropertyAssertion(:hasRelativeLocationIn_Description
  :part_a_1_location "part_a_1 is in part_a_tray"^^xsd:string)

Declaration(NamedIndividual(:part_a_2_location))
ClassAssertion(:RelativeLocationIn :part_a_2_location)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject :part_a_2_location
                        :part_a_tray)
DataPropertyAssertion(:hasRelativeLocationIn_Description
  :part_a_2_location "part_a_2 is in part_a_tray"^^xsd:string)

Declaration(NamedIndividual(:part_b_1_location))
ClassAssertion(:RelativeLocationIn :part_b_1_location)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject :part_b_1_location
                        :part_b_tray)
DataPropertyAssertion(:hasRelativeLocationIn_Description
  :part_b_1_location "part_b_1 is in part_b_tray"^^xsd:string)

Declaration(NamedIndividual(:part_c_1_location))
ClassAssertion(:RelativeLocationIn :part_c_1_location)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject :part_c_1_location
                        :part_c_tray)
DataPropertyAssertion(:hasRelativeLocationIn_Description
  :part_c_1_location "PartC1 is in part_c_tray"^^xsd:string)

Declaration(NamedIndividual(:relative_location_in_1))
ClassAssertion(:RelativeLocationIn :relative_location_in_1)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject :relative_location_in_1
                        :kitting_workstation_1)
DataPropertyAssertion(:hasRelativeLocationIn_Description
  :relative_location_in_1
  "The  KittingWorkstation is in kitting_workstation_1"^^xsd:string)

Declaration(NamedIndividual(:relative_location_on_1))
ClassAssertion(:RelativeLocationOn :relative_location_on_1)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject :relative_location_on_1
                        :robot_1)
DataPropertyAssertion(:hasRelativeLocationOn_Description
  :relative_location_on_1
  "The tray_gripper is on robot_1"^^xsd:string)

DifferentIndividuals(
 :part_a_1_location
 :part_a_2_location
 :part_b_1_location
 :part_c_1_location
 :relative_location_in_1)

// End RelativeLocations

)
