Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)
Prefix(:=<http://www.nist.gov/el/ontologies/kittingInstancesInit.owl#>)
Prefix(:=<http://www.nist.gov/el/ontologies/kittingClasses.owl#>)

Ontology(<http://www.nist.gov/el/ontologies/kittingInstancesInit.owl>
Import(<file:kittingClasses.owl>)
Annotation(rdfs:comment
  "This is an OWL data file describing a specific kitting workstation.
   The workstation is as described in Zeit Kootbally's description
   discussed in the IPMAS meeting on February 28.
   This file uses the kittingClasses.owl ontology in the file
   kittingClasses.owl")
Annotation(rdfs:comment
  "The kitting workstation (KittingWorkstation1) has the following items
   - a robot (Robot1), which has:
     a vacuum effector for gripping trays (TrayGripper)
     a work volume consisting of one BoxVolume (BoxVolume1)
   - a work table (WorkTable1)
   - an end effector changing station (ChangingStation1) with two
     end effector holders (PartGripperHolder and TrayGripperHolder)
   - another vacuum effector (PartGripper), which is being
     held by the PartGripperHolder on the changing station.
   - a StockKeepingUnitLibrary with six StockKeepingUnits
   - one KitDesign
   - a PartsTray with two PartAs
   - a PartsTray with one PartB
   - a PartsTray with one PartC
   - a box of KitTrays with one KitTray in it
   - an empty box for finished Kits
   The data is complete for these items, including many individuals not
   listed above (mostly Poses, Points, and Vectors.
   There are no other obstacles.")

// ChangingStation1 ****************************************************
Declaration(NamedIndividual(:ChangingStation1))
ClassAssertion(:EndEffectorChangingStation :ChangingStation1)
ObjectPropertyAssertion(:hasSolidObject_PhysicalLocation :ChangingStation1
                        :ChangingStationPose)
ObjectPropertyAssertion(:hasChangingStation_Holders :ChangingStation1
                        :PartGripperHolder)
ObjectPropertyAssertion(:hasChangingStation_Holders :ChangingStation1
                        :TrayGripperHolder)
ObjectPropertyAssertion(:hadByChangingStation_Workstation :ChangingStation1
                        :KittingWorkstation1)


// EmptyKitTrayBox *****************************************************
Declaration(NamedIndividual(:EmptyKitTrayBox))
ClassAssertion(:LargeContainer :EmptyKitTrayBox)
DataPropertyAssertion(:hasLargeContainer_SkuRef :EmptyKitTrayBox
                      "SkuIdKitBox"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasLargeContainer_SerialNumber :EmptyKitTrayBox
                      "4"^^xsd:NMTOKEN)
ObjectPropertyAssertion(:hasSolidObject_PhysicalLocation :EmptyKitTrayBox
                        :EmptyKitTrayBoxPose)
ObjectPropertyAssertion(:hadByLargeContainer_LargeBoxWithEmptyKitTrays
                        :EmptyKitTrayBox :EmptyKitTraySupply)
DataPropertyAssertion(:hasBox_Height :EmptyKitTrayBox "0.8"^^:positiveDecimal)
DataPropertyAssertion(:hasBox_Length :EmptyKitTrayBox "0.9"^^:positiveDecimal)
DataPropertyAssertion(:hasBox_Width :EmptyKitTrayBox "0.7"^^:positiveDecimal)


// EmptyKitTraySupply **************************************************
Declaration(NamedIndividual(:EmptyKitTraySupply))
ClassAssertion(:LargeBoxWithEmptyKitTrays :EmptyKitTraySupply)
ObjectPropertyAssertion(:hasSolidObject_PhysicalLocation :EmptyKitTraySupply
                        :EmptyKitTraySupplyPose)
ObjectPropertyAssertion(:hasLargeBoxWithEmptyKitTrays_Box :EmptyKitTraySupply
                        :EmptyKitTrayBox)


// FinishedKitBox ******************************************************
Declaration(NamedIndividual(:FinishedKitBox))
ClassAssertion(:LargeContainer :FinishedKitBox)
DataPropertyAssertion(:hasLargeContainer_SkuRef :FinishedKitBox
                      "SkuIdKitBox"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasLargeContainer_SerialNumber :FinishedKitBox
                      "5"^^xsd:NMTOKEN)
ObjectPropertyAssertion(:hasSolidObject_PhysicalLocation :FinishedKitBox
                        :FinishedKitBoxPose)
ObjectPropertyAssertion(:hadByLargeContainer_LargeBoxWithKits :FinishedKitBox
                        :FinishedKitReceiver)
DataPropertyAssertion(:hasBox_Height :FinishedKitBox "0.8"^^:positiveDecimal)
DataPropertyAssertion(:hasBox_Length :FinishedKitBox "0.9"^^:positiveDecimal)
DataPropertyAssertion(:hasBox_Width :FinishedKitBox "0.7"^^:positiveDecimal)


// FinishedKitReceiver *************************************************
Declaration(NamedIndividual(:FinishedKitReceiver))
ClassAssertion(:LargeBoxWithKits :FinishedKitReceiver)
ObjectPropertyAssertion(:hasSolidObject_PhysicalLocation :FinishedKitReceiver
                        :FinishedKitReceiverPose)
ObjectPropertyAssertion(:hasLargeBoxWithKits_Box :FinishedKitReceiver
                        :FinishedKitBox)
DataPropertyAssertion(:hasLargeBoxWithKits_Capacity :FinishedKitReceiver
                     "12"^^xsd:positiveInteger)
DataPropertyAssertion(:hasLargeBoxWithKits_KitDesignRef :FinishedKitReceiver
                     "KitDesignA2B1C1"^^xsd:NMTOKEN)


// KitDesignA2B1C1 *****************************************************
Declaration(NamedIndividual(:KitDesignA2B1C1))
ClassAssertion(:KitDesign :KitDesignA2B1C1)
DataPropertyAssertion(:hasKitDesign_Id :KitDesignA2B1C1
                      "KitDesignA2B1C1"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasKitDesign_KitTraySkuRef :KitDesignA2B1C1
                      "SkuIdKitTray"^^xsd:NMTOKEN)
ObjectPropertyAssertion(:hasKitDesign_PartPoses :KitDesignA2B1C1
                        :PartRefAndPoseA1)
ObjectPropertyAssertion(:hasKitDesign_PartPoses :KitDesignA2B1C1
                        :PartRefAndPoseA2)
ObjectPropertyAssertion(:hasKitDesign_PartPoses :KitDesignA2B1C1
                        :PartRefAndPoseB1)
ObjectPropertyAssertion(:hasKitDesign_PartPoses :KitDesignA2B1C1
                        :PartRefAndPoseC1)
ObjectPropertyAssertion(:hadByKitDesign_Workstation :KitDesignA2B1C1
                        :Workstation1)


// KitTray1 ************************************************************
Declaration(NamedIndividual(:KitTray1))
ClassAssertion(:KitTray :KitTray1)
ObjectPropertyAssertion(:hasSolidObject_PhysicalLocation :KitTray1
                        :KitTray1Pose)
ObjectPropertyAssertion(:hadByKitTray_LargeBoxWithEmptyKitTrays :KitTray1
                        :EmptyKitTraySupply)
DataPropertyAssertion(:hasBox_Height :KitTray1 "0.15"^^:positiveDecimal)
DataPropertyAssertion(:hasBox_Length :KitTray1 "0.5"^^:positiveDecimal)
DataPropertyAssertion(:hasBox_Width :KitTray1 "0.3"^^:positiveDecimal)
DataPropertyAssertion(:hasKitTray_SkuRef :KitTray1 "SkuIdKitTray"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasKitTray_SerialNumber :KitTray1 "1"^^xsd:NMTOKEN)


// PartASupply ********************************************************
Declaration(NamedIndividual(:PartASupply))
ClassAssertion(:PartsTrayWithParts :PartASupply)
ObjectPropertyAssertion(:hasSolidObject_PhysicalLocation :PartASupply
                        :PartASupplyPose)
ObjectPropertyAssertion(:hasPartsTrayWithParts_Tray :PartASupply :PartATray)
ObjectPropertyAssertion(:hasPartsTrayWithParts_Parts :PartASupply :PartA1)
ObjectPropertyAssertion(:hasPartsTrayWithParts_Parts :PartASupply :PartA2)


// PartATray ********************************************************
Declaration(NamedIndividual(:PartATray))
ClassAssertion(:PartsTray :PartATray)
ObjectPropertyAssertion(:hasSolidObject_PhysicalLocation :PartATray
                        :PartATrayPose)
ObjectPropertyAssertion(:hadByPartsTray_PartsTrayWithParts :PartATray
                        :PartASupply)
DataPropertyAssertion(:hasBox_Height :PartATray "0.2"^^:positiveDecimal)
DataPropertyAssertion(:hasBox_Length :PartATray "0.6"^^:positiveDecimal)
DataPropertyAssertion(:hasBox_Width :PartATray "0.3"^^:positiveDecimal)
DataPropertyAssertion(:hasPartsTray_SkuRef :PartATray
                      "SkuIdPartsTray"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasPartsTray_SerialNumber :PartATray "6"^^xsd:NMTOKEN)


// PartA1 ***********************************************************
Declaration(NamedIndividual(:PartA1))
ClassAssertion(:Part :PartA1)
ObjectPropertyAssertion(:hasSolidObject_PhysicalLocation :PartA1
                        :PartA1Location)
ObjectPropertyAssertion(:hadByPart_PartsTrayWithParts :PartA1 :PartASupply)
DataPropertyAssertion(:hasPart_SkuRef :PartA1 "SkuIdPartA"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasPart_SerialNumber :PartA1 "9"^^xsd:NMTOKEN)


// PartA2 ***********************************************************
Declaration(NamedIndividual(:PartA2))
ClassAssertion(:Part :PartA2)
ObjectPropertyAssertion(:hasSolidObject_PhysicalLocation :PartA2
                        :PartA2Location)
ObjectPropertyAssertion(:hadByPart_PartsTrayWithParts :PartA2 :PartASupply)
DataPropertyAssertion(:hasPart_SkuRef :PartA2 "SkuIdPartA"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasPart_SerialNumber :PartA2 "10"^^xsd:NMTOKEN)


// PartBSupply ********************************************************
Declaration(NamedIndividual(:PartBSupply))
ClassAssertion(:PartsTrayWithParts :PartBSupply)
ObjectPropertyAssertion(:hasSolidObject_PhysicalLocation :PartBSupply
                        :PartBSupplyPose)
ObjectPropertyAssertion(:hasPartsTrayWithParts_Tray :PartBSupply
                        :PartBTray)
ObjectPropertyAssertion(:hasPartsTrayWithParts_Parts :PartBSupply
                        :PartB1)


// PartBTray **********************************************************
Declaration(NamedIndividual(:PartBTray))
ClassAssertion(:PartsTray :PartBTray)
ObjectPropertyAssertion(:hasSolidObject_PhysicalLocation :PartBTray
                        :PartBTrayPose)
ObjectPropertyAssertion(:hadByPartsTray_PartsTrayWithParts :PartBTray
                        :PartBSupply)
DataPropertyAssertion(:hasBox_Height :PartBTray "0.2"^^:positiveDecimal)
DataPropertyAssertion(:hasBox_Length :PartBTray "0.6"^^:positiveDecimal)
DataPropertyAssertion(:hasBox_Width :PartBTray "0.3"^^:positiveDecimal)
DataPropertyAssertion(:hasPartsTray_SkuRef :PartBTray
                      "SkuIdPartsTray"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasPartsTray_SerialNumber :PartBTray "7"^^xsd:NMTOKEN)


// PartB1 ************************************************************
Declaration(NamedIndividual(:PartB1))
ClassAssertion(:Part :PartB1)
ObjectPropertyAssertion(:hasSolidObject_PhysicalLocation :PartB1
                        :PartB1Location)
ObjectPropertyAssertion(:hadByPart_PartsTrayWithParts :PartB1 :PartBSupply)
DataPropertyAssertion(:hasPart_SkuRef :PartB1 "SkuIdPartB"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasPart_SerialNumber :PartB1 "13"^^xsd:NMTOKEN)


// PartCSupply *********************************************************
Declaration(NamedIndividual(:PartCSupply))
ClassAssertion(:PartsTrayWithParts :PartCSupply)
ObjectPropertyAssertion(:hasSolidObject_PhysicalLocation :PartCSupply
                        :PartCSupplyPose)
ObjectPropertyAssertion(:hasPartsTrayWithParts_Tray :PartCSupply :PartCTray)
ObjectPropertyAssertion(:hasPartsTrayWithParts_Parts :PartCSupply :PartC1)


// PartCTray **********************************************************
Declaration(NamedIndividual(:PartCTray))
ClassAssertion(:PartsTray :PartCTray)
ObjectPropertyAssertion(:hasSolidObject_PhysicalLocation :PartCTray
                        :PartCTrayPose)
ObjectPropertyAssertion(:hadByPartsTray_PartsTrayWithParts :PartCTray
                        :PartCSupply)
DataPropertyAssertion(:hasBox_Height :PartCTray "0.2"^^:positiveDecimal)
DataPropertyAssertion(:hasBox_Length :PartCTray "0.6"^^:positiveDecimal)
DataPropertyAssertion(:hasBox_Width :PartCTray "0.3"^^:positiveDecimal)
DataPropertyAssertion(:hasPartsTray_SkuRef :PartCTray
                      "SkuIdPartsTray"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasPartsTray_SerialNumber :PartCTray "8"^^xsd:NMTOKEN)


// PartC1 *************************************************************
Declaration(NamedIndividual(:PartC1))
ClassAssertion(:Part :PartC1)
ObjectPropertyAssertion(:hasSolidObject_PhysicalLocation :PartC1
                        :PartC1Location)
ObjectPropertyAssertion(:hadByPart_PartsTrayWithParts :PartC1 :PartCSupply)
DataPropertyAssertion(:hasPart_SkuRef :PartC1 "SkuIdPartC"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasPart_SerialNumber :PartC1 "15"^^xsd:NMTOKEN)


// PartGripper ********************************************************
Declaration(NamedIndividual(:PartGripper))
ClassAssertion(:VacuumEffectorSingleCup :PartGripper)
ObjectPropertyAssertion(:hasSolidObject_PhysicalLocation
  :PartGripper :PartGripperPose)
ObjectPropertyAssertion(:hadByEndEffector_EndEffectorHolder
                        :PartGripper :PartGripperHolder)
DataPropertyAssertion(:hasEndEffector_Description :PartGripper
  "small single cup vacuum effector"^^xsd:string)
DataPropertyAssertion(:hasEndEffector_Weight :PartGripper
   "0.01"^^:positiveDecimal)
DataPropertyAssertion(:hasEndEffector_Id :PartGripper
   "ThePartGripper"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasVacuumEffector_CupDiameter :PartGripper
   "0.02"^^:positiveDecimal)
DataPropertyAssertion(:hasVacuumEffector_Length :PartGripper
   "0.025"^^:positiveDecimal)


// PartGripperHolder ****************************************************
Declaration(NamedIndividual(:PartGripperHolder))
ClassAssertion(:EndEffectorHolder :PartGripperHolder)
ObjectPropertyAssertion(:hasSolidObject_PhysicalLocation :PartGripperHolder
                        :PartGripperHolderPose)
ObjectPropertyAssertion(:hasEndEffectorHolder_EndEffector :PartGripperHolder
                        :PartGripper)
ObjectPropertyAssertion(:hadByEndEffectorHolder_ChangingStation
                        :PartGripperHolder :ChangingStation1)


// PartRefAndPoseA1 *****************************************************
Declaration(NamedIndividual(:PartRefAndPoseA1))
ClassAssertion(:PartRefAndPose :PartRefAndPoseA1)
DataPropertyAssertion(:hasPartRefAndPose_Ref :PartRefAndPoseA1
                      "SkuIdPartA"^^xsd:NMTOKEN)
ObjectPropertyAssertion(:hasPartRefAndPose_Point :PartRefAndPoseA1 :PointA1)
ObjectPropertyAssertion(:hasPartRefAndPose_ZAxis :PartRefAndPoseA1 :ZAxisA1)
ObjectPropertyAssertion(:hasPartRefAndPose_XAxis :PartRefAndPoseA1 :XAxisA1)
ObjectPropertyAssertion(:hadByPartRefAndPose_KitDesign :PartRefAndPoseA1
                        :KitDesignA2B1C1)


// PartRefAndPoseA2 *****************************************************
Declaration(NamedIndividual(:PartRefAndPoseA2))
ClassAssertion(:PartRefAndPose :PartRefAndPoseA2)
DataPropertyAssertion(:hasPartRefAndPose_Ref :PartRefAndPoseA2
                      "SkuIdPartA"^^xsd:NMTOKEN)
ObjectPropertyAssertion(:hasPartRefAndPose_Point :PartRefAndPoseA2 :PointA2)
ObjectPropertyAssertion(:hasPartRefAndPose_ZAxis :PartRefAndPoseA2 :ZAxisA2)
ObjectPropertyAssertion(:hasPartRefAndPose_XAxis :PartRefAndPoseA2 :XAxisA2)
ObjectPropertyAssertion(:hadByPartRefAndPose_KitDesign :PartRefAndPoseA2
                        :KitDesignA2B1C1)


// PartRefAndPoseB1 *****************************************************
Declaration(NamedIndividual(:PartRefAndPoseB1))
ClassAssertion(:PartRefAndPose :PartRefAndPoseB1)
DataPropertyAssertion(:hasPartRefAndPose_Ref :PartRefAndPoseB1
                      "SkuIdPartB"^^xsd:NMTOKEN)
ObjectPropertyAssertion(:hasPartRefAndPose_Point :PartRefAndPoseB1 :PointB1)
ObjectPropertyAssertion(:hasPartRefAndPose_ZAxis :PartRefAndPoseB1 :ZAxisB1)
ObjectPropertyAssertion(:hasPartRefAndPose_XAxis :PartRefAndPoseB1 :XAxisB1)
ObjectPropertyAssertion(:hadByPartRefAndPose_KitDesign :PartRefAndPoseB1
                        :KitDesignA2B1C1)


// PartRefAndPoseC1 *****************************************************
Declaration(NamedIndividual(:PartRefAndPoseC1))
ClassAssertion(:PartRefAndPose :PartRefAndPoseC1)
DataPropertyAssertion(:hasPartRefAndPose_Ref :PartRefAndPoseC1
                      "SkuIdPartC"^^xsd:NMTOKEN)
ObjectPropertyAssertion(:hasPartRefAndPose_Point :PartRefAndPoseC1 :PointC1)
ObjectPropertyAssertion(:hasPartRefAndPose_ZAxis :PartRefAndPoseC1 :ZAxisC1)
ObjectPropertyAssertion(:hasPartRefAndPose_XAxis :PartRefAndPoseC1 :XAxisC1)
ObjectPropertyAssertion(:hadByPartRefAndPose_KitDesign :PartRefAndPoseC1
                        :KitDesignA2B1C1)


// Robot1 ***************************************************************
Declaration(NamedIndividual(:Robot1))
ClassAssertion(:Robot :Robot1)
ObjectPropertyAssertion(:hasSolidObject_PhysicalLocation :Robot1 :RobotPose)
DataPropertyAssertion(:hasRobot_Description :Robot1
                      "this is the robot"^^xsd:string)
DataPropertyAssertion(:hasRobot_Id :Robot1 "Robot1"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasRobot_MaximumLoadWeight :Robot1 "7.0"^^xsd:decimal)
ObjectPropertyAssertion(:hasRobot_EndEffector :Robot1 :TrayGripper)
ObjectPropertyAssertion(:hasRobot_WorkVolume :Robot1 :BoxVolume1)
ObjectPropertyAssertion(:hadByRobot_Workstation :Robot1 :Workstation1)


// ShapeKitBox **********************************************************
Declaration(NamedIndividual(:ShapeKitBox))
ClassAssertion(:ShapeDesign :ShapeKitBox)
DataPropertyAssertion(:hasShapeDesign_Description :ShapeKitBox
                      "Shape of boxes to hold kits and kit trays"^^xsd:string)


// ShapeKitTray *************************************************************
Declaration(NamedIndividual(:ShapeKitTray))
ClassAssertion(:ShapeDesign :ShapeKitTray)
DataPropertyAssertion(:hasShapeDesign_Description :ShapeKitTray
                      "Shape of KitTrays"^^xsd:string)


// ShapePartA ***********************************************************
Declaration(NamedIndividual(:ShapePartA))
ClassAssertion(:ShapeDesign :ShapePartA)
DataPropertyAssertion(:hasShapeDesign_Description :ShapePartA
                      "Shape of PartA"^^xsd:string)


// ShapePartB ***********************************************************
Declaration(NamedIndividual(:ShapePartB))
ClassAssertion(:ShapeDesign :ShapePartB)
DataPropertyAssertion(:hasShapeDesign_Description :ShapePartB
                      "Shape of PartB"^^xsd:string)


// ShapePartC ***********************************************************
Declaration(NamedIndividual(:ShapePartC))
ClassAssertion(:ShapeDesign :ShapePartC)
DataPropertyAssertion(:hasShapeDesign_Description :ShapePartC
                      "Shape of PartC"^^xsd:string)


// ShapePartsTray *******************************************************
Declaration(NamedIndividual(:ShapePartsTray))
ClassAssertion(:ShapeDesign :ShapePartsTray)
DataPropertyAssertion(:hasShapeDesign_Description :ShapePartsTray
                      "Shape of PartsTrays"^^xsd:string)


// StockKeepingUnitKitBox ************************************************
Declaration(NamedIndividual(:StockKeepingUnitKitBox))
ClassAssertion(:StockKeepingUnit :StockKeepingUnitKitBox)
DataPropertyAssertion(:hasSku_Description :StockKeepingUnitKitBox
                      "SKU for Boxes for Kits and KitTrays"^^xsd:string)
DataPropertyAssertion(:hasSku_Weight :StockKeepingUnitKitBox "1.2"^^xsd:decimal)
DataPropertyAssertion(:hasSku_Id :StockKeepingUnitKitBox
                      "SkuIdKitBox"^^xsd:NMTOKEN)
ObjectPropertyAssertion(:hasSku_Shape :StockKeepingUnitKitBox :ShapeKitBox)
ObjectPropertyAssertion(:hadBySku_Workstation :StockKeepingUnitKitBox
                        :Workstation1)


// StockKeepingUnitKitTray ***********************************************
Declaration(NamedIndividual(:StockKeepingUnitKitTray))
ClassAssertion(:StockKeepingUnit :StockKeepingUnitKitTray)
DataPropertyAssertion(:hasSku_Description :StockKeepingUnitKitTray
                      "SKU for KitTrays"^^xsd:string)
DataPropertyAssertion(:hasSku_Weight :StockKeepingUnitKitTray
                      "0.2"^^xsd:decimal)
DataPropertyAssertion(:hasSku_Id :StockKeepingUnitKitTray
                      "SkuIdKitTray"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasSku_EndEffectorRefs :StockKeepingUnitKitTray
                      "TheTrayGripper"^^xsd:NMTOKEN)
ObjectPropertyAssertion(:hasSku_Shape :StockKeepingUnitKitTray :ShapeKitTray)
ObjectPropertyAssertion(:hadBySku_Workstation :StockKeepingUnitKitTray
                        :Workstation1)


// StockKeepingUnitPartA ************************************************
Declaration(NamedIndividual(:StockKeepingUnitPartA))
ClassAssertion(:StockKeepingUnit :StockKeepingUnitPartA)
DataPropertyAssertion(:hasSku_Description :StockKeepingUnitPartA
                      "SKU for Part A"^^xsd:string)
DataPropertyAssertion(:hasSku_Weight :StockKeepingUnitPartA "0.18"^^xsd:decimal)
DataPropertyAssertion(:hasSku_Id :StockKeepingUnitPartA
                      "SkuIdPartA"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasSku_EndEffectorRefs :StockKeepingUnitPartA
                      "ThePartGripper"^^xsd:NMTOKEN)
ObjectPropertyAssertion(:hasSku_Shape :StockKeepingUnitPartA :ShapePartA)
ObjectPropertyAssertion(:hadBySku_Workstation :StockKeepingUnitPartA
                        :Workstation1)


// StockKeepingUnitPartB ************************************************
Declaration(NamedIndividual(:StockKeepingUnitPartB))
ClassAssertion(:StockKeepingUnit :StockKeepingUnitPartB)
DataPropertyAssertion(:hasSku_Description :StockKeepingUnitPartB
                      "SKU for PartB"^^xsd:string)
DataPropertyAssertion(:hasSku_Weight :StockKeepingUnitPartB "0.18"^^xsd:decimal)
DataPropertyAssertion(:hasSku_Id :StockKeepingUnitPartB
                      "SkuIdPartB"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasSku_EndEffectorRefs :StockKeepingUnitPartB
                      "ThePartGripper"^^xsd:NMTOKEN)
ObjectPropertyAssertion(:hasSku_Shape :StockKeepingUnitPartB :ShapePartB)
ObjectPropertyAssertion(:hadBySku_Workstation :StockKeepingUnitPartB
                        :Workstation1)


// StockKeepingUnitPartC ************************************************
Declaration(NamedIndividual(:StockKeepingUnitPartC))
ClassAssertion(:StockKeepingUnit :StockKeepingUnitPartC)
DataPropertyAssertion(:hasSku_Description :StockKeepingUnitPartC
                      "SKU for PartC"^^xsd:string)
DataPropertyAssertion(:hasSku_Weight :StockKeepingUnitPartC "0.18"^^xsd:decimal)
DataPropertyAssertion(:hasSku_Id :StockKeepingUnitPartC
                      "SkuIdPartC"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasSku_EndEffectorRefs :StockKeepingUnitPartC
                      "ThePartGripper"^^xsd:NMTOKEN)
ObjectPropertyAssertion(:hasSku_Shape :StockKeepingUnitPartC :ShapePartC)
ObjectPropertyAssertion(:hadBySku_Workstation :StockKeepingUnitPartC
                        :Workstation1)


// StockKeepingUnitPartsTray ********************************************
Declaration(NamedIndividual(:StockKeepingUnitPartsTray))
ClassAssertion(:StockKeepingUnit :StockKeepingUnitPartsTray)
DataPropertyAssertion(:hasSku_Description :StockKeepingUnitPartsTray
                      "SKU for PartsTrays"^^xsd:string)
DataPropertyAssertion(:hasSku_Weight :StockKeepingUnitPartsTray
                      "0.2"^^xsd:decimal)
DataPropertyAssertion(:hasSku_Id :StockKeepingUnitPartsTray
                      "SkuIdPartsTray"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasSku_EndEffectorRefs :StockKeepingUnitPartsTray
                      "TheTrayGripper"^^xsd:NMTOKEN)
ObjectPropertyAssertion(:hasSku_Shape :StockKeepingUnitPartsTray
                        :ShapePartsTray)
ObjectPropertyAssertion(:hadBySku_Workstation :StockKeepingUnitPartsTray
                        :Workstation1)


// TrayGripper ********************************************************
Declaration(NamedIndividual(:TrayGripper))
ClassAssertion(:VacuumEffectorSingleCup :TrayGripper)
ObjectPropertyAssertion(:hasSolidObject_PhysicalLocation
  :TrayGripper :RelativeLocationOn1)
ObjectPropertyAssertion(:hadByEndEffector_Robot :TrayGripper :Robot1)
DataPropertyAssertion(:hasEndEffector_Description :TrayGripper
  "large single cup vacuum effector"^^xsd:string)
DataPropertyAssertion(:hasEndEffector_Weight :TrayGripper
   "0.04"^^:positiveDecimal)
DataPropertyAssertion(:hasEndEffector_Id :TrayGripper
   "TheTrayGripper"^^xsd:NMTOKEN)
DataPropertyAssertion(:hasVacuumEffector_CupDiameter :TrayGripper
   "0.04"^^:positiveDecimal)
DataPropertyAssertion(:hasVacuumEffector_Length :TrayGripper
   "0.1"^^:positiveDecimal)


// TrayGripperHolder **************************************************
Declaration(NamedIndividual(:TrayGripperHolder))
ClassAssertion(:EndEffectorHolder :TrayGripperHolder)
ObjectPropertyAssertion(:hasSolidObject_PhysicalLocation :TrayGripperHolder
                        :TrayGripperHolderPose)
ObjectPropertyAssertion(:hadByEndEffectorHolder_ChangingStation
                        :TrayGripperHolder :ChangingStation1)

// Workstation ********************************************************
Declaration(NamedIndividual(:KittingWorkstation1))
ClassAssertion(:KittingWorkstation :KittingWorkstation1)
ObjectPropertyAssertion(:hasSolidObject_PhysicalLocation :KittingWorkstation1
                        :RelativeLocationIn1)
DataPropertyAssertion(:hasWorkstation_AngleUnit :KittingWorkstation1
                      "degree")
DataPropertyAssertion(:hasWorkstation_LengthUnit :KittingWorkstation1
                      "meter")
DataPropertyAssertion(:hasWorkstation_WeightUnit :KittingWorkstation1
                      "kilogram")
ObjectPropertyAssertion(:hasWorkstation_Robot :KittingWorkstation1 :Robot1)
ObjectPropertyAssertion(:hasWorkstation_ChangingStation :KittingWorkstation1
                        :ChangingStation1)
ObjectPropertyAssertion(:hasWorkstation_Table :KittingWorkstation1
                        :WorkTable1)
ObjectPropertyAssertion(:hasWorkstation_SkuLibrary :KittingWorkstation1
                        :StockKeepingUnitKitBox)
ObjectPropertyAssertion(:hasWorkstation_SkuLibrary :KittingWorkstation1
                        :StockKeepingUnitKitTray)
ObjectPropertyAssertion(:hasWorkstation_SkuLibrary :KittingWorkstation1
                        :StockKeepingUnitPartA)
ObjectPropertyAssertion(:hasWorkstation_SkuLibrary :KittingWorkstation1
                        :StockKeepingUnitPartB)
ObjectPropertyAssertion(:hasWorkstation_SkuLibrary :KittingWorkstation1
                        :StockKeepingUnitPartC)
ObjectPropertyAssertion(:hasWorkstation_SkuLibrary :KittingWorkstation1
                        :StockKeepingUnitPartsTray)

ObjectPropertyAssertion(:hasWorkstation_KitDesignLibrary :KittingWorkstation1
                        :KitDesignA2B1C1)


// WorkTable1  *********************************************************
Declaration(NamedIndividual(:WorkTable1))
ClassAssertion(:WorkTable :WorkTable1)
ObjectPropertyAssertion(:hasSolidObject_PhysicalLocation :WorkTable1
                        :WorkTablePose)
ObjectPropertyAssertion(:hadByWorkTable_Workstation :WorkTable1
                        :Workstation1)
DataPropertyAssertion(:hasBox_Height :WorkTable1 "0.5"^^:positiveDecimal)
DataPropertyAssertion(:hasBox_Length :WorkTable1 "1.6"^^:positiveDecimal)
DataPropertyAssertion(:hasBox_Width :WorkTable1 "0.8"^^:positiveDecimal)


// BoxVolume1 **********************************************************
Declaration(NamedIndividual(:BoxVolume1))
ClassAssertion(:BoxVolume :BoxVolume1)
Declaration(NamedIndividual(:PointMax))
ClassAssertion(:Point :PointMax)
DataPropertyAssertion(:hasPoint_X :PointMax "1.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :PointMax "1.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :PointMax "2.0"^^xsd:decimal)
Declaration(NamedIndividual(:PointMin))
ClassAssertion(:Point :PointMin)
DataPropertyAssertion(:hasPoint_X :PointMin "-1.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :PointMin "-1.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :PointMin "0.0"^^xsd:decimal)
ObjectPropertyAssertion(:hasBoxVolume_MaximumPoint :BoxVolume1 :PointMax)
ObjectPropertyAssertion(:hasBoxVolume_MinimumPoint :BoxVolume1 :PointMin)


// Different Individuals **********************************************
DifferentIndividuals(:EmptyKitTrayBox :FinishedKitBox)
DifferentIndividuals(:PartGripperHolder :TrayGripperHolder)
DifferentIndividuals(
 :PartA1
 :PartA2
 :PartB1
 :PartC1)
DifferentIndividuals(:PartGripper :TrayGripper)
DifferentIndividuals(:PartASupply :PartBSupply :PartCSupply)
DifferentIndividuals(:PartATray :PartBTray :PartCTray)
DifferentIndividuals(
 :PartRefAndPoseA1
 :PartRefAndPoseA2
 :PartRefAndPoseB1
 :PartRefAndPoseC1)
DifferentIndividuals(
 :ShapeKitBox
 :ShapeKitTray
 :ShapePartA
 :ShapePartB
 :ShapePartC
 :ShapePartsTray)
DifferentIndividuals(
 :StockKeepingUnitKitBox
 :StockKeepingUnitKitTray
 :StockKeepingUnitPartA
 :StockKeepingUnitPartB
 :StockKeepingUnitPartC
 :StockKeepingUnitPartsTray)


// Start Poses
// ChangingStationPose ************************************************
Declaration(NamedIndividual(:ChangingStationPose))
ClassAssertion(:PoseOnlyLocation :ChangingStationPose)
ObjectPropertyAssertion(:hasPose_Point :ChangingStationPose
                        :ChangingStationPoint)
ObjectPropertyAssertion(:hasPose_ZAxis :ChangingStationPose
                        :ChangingStationZAxis)
ObjectPropertyAssertion(:hasPose_XAxis :ChangingStationPose
                        :ChangingStationXAxis)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject :ChangingStationPose
  :KittingWorkstation1)

Declaration(NamedIndividual(:ChangingStationPoint))
ClassAssertion(:Point :ChangingStationPoint)
DataPropertyAssertion(:hasPoint_X :ChangingStationPoint "7.5"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :ChangingStationPoint "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :ChangingStationPoint "0.0"^^xsd:decimal)

Declaration(NamedIndividual(:ChangingStationZAxis))
ClassAssertion(:Vector :ChangingStationZAxis)
DataPropertyAssertion(:hasVector_I :ChangingStationZAxis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :ChangingStationZAxis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :ChangingStationZAxis "1.0"^^xsd:decimal)

Declaration(NamedIndividual(:ChangingStationXAxis))
ClassAssertion(:Vector :ChangingStationXAxis)
DataPropertyAssertion(:hasVector_I :ChangingStationXAxis "1.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :ChangingStationXAxis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :ChangingStationXAxis "0.0"^^xsd:decimal)


// EmptyKitTrayBoxPose *************************************************
Declaration(NamedIndividual(:EmptyKitTrayBoxPose))
ClassAssertion(:PoseOnlyLocation :EmptyKitTrayBoxPose)
ObjectPropertyAssertion(:hasPose_Point :EmptyKitTrayBoxPose
                        :EmptyKitTrayBoxPoint)
ObjectPropertyAssertion(:hasPose_ZAxis :EmptyKitTrayBoxPose
                        :EmptyKitTrayBoxZAxis)
ObjectPropertyAssertion(:hasPose_XAxis :EmptyKitTrayBoxPose
                        :EmptyKitTrayBoxXAxis)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject :EmptyKitTrayBoxPose
  :EmptyKitTraySupply)

Declaration(NamedIndividual(:EmptyKitTrayBoxPoint))
ClassAssertion(:Point :EmptyKitTrayBoxPoint)
DataPropertyAssertion(:hasPoint_X :EmptyKitTrayBoxPoint "0.5"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :EmptyKitTrayBoxPoint "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :EmptyKitTrayBoxPoint "0.0"^^xsd:decimal)

Declaration(NamedIndividual(:EmptyKitTrayBoxZAxis))
ClassAssertion(:Vector :EmptyKitTrayBoxZAxis)
DataPropertyAssertion(:hasVector_I :EmptyKitTrayBoxZAxis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :EmptyKitTrayBoxZAxis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :EmptyKitTrayBoxZAxis "1.0"^^xsd:decimal)

Declaration(NamedIndividual(:EmptyKitTrayBoxXAxis))
ClassAssertion(:Vector :EmptyKitTrayBoxXAxis)
DataPropertyAssertion(:hasVector_I :EmptyKitTrayBoxXAxis "1.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :EmptyKitTrayBoxXAxis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :EmptyKitTrayBoxXAxis "0.0"^^xsd:decimal)


// EmptyKitTraySupplyPose *************************************************
Declaration(NamedIndividual(:EmptyKitTraySupplyPose))
ClassAssertion(:PoseOnlyLocation :EmptyKitTraySupplyPose)
ObjectPropertyAssertion(:hasPose_Point :EmptyKitTraySupplyPose
                        :EmptyKitTraySupplyPoint)
ObjectPropertyAssertion(:hasPose_ZAxis :EmptyKitTraySupplyPose
                        :EmptyKitTraySupplyZAxis)
ObjectPropertyAssertion(:hasPose_XAxis :EmptyKitTraySupplyPose
                        :EmptyKitTraySupplyXAxis)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject :EmptyKitTraySupplyPose
  :KittingWorkstation1)

Declaration(NamedIndividual(:EmptyKitTraySupplyPoint))
ClassAssertion(:Point :EmptyKitTraySupplyPoint)
DataPropertyAssertion(:hasPoint_X :EmptyKitTraySupplyPoint "0.5"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :EmptyKitTraySupplyPoint "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :EmptyKitTraySupplyPoint "0.0"^^xsd:decimal)

Declaration(NamedIndividual(:EmptyKitTraySupplyZAxis))
ClassAssertion(:Vector :EmptyKitTraySupplyZAxis)
DataPropertyAssertion(:hasVector_I :EmptyKitTraySupplyZAxis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :EmptyKitTraySupplyZAxis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :EmptyKitTraySupplyZAxis "1.0"^^xsd:decimal)

Declaration(NamedIndividual(:EmptyKitTraySupplyXAxis))
ClassAssertion(:Vector :EmptyKitTraySupplyXAxis)
DataPropertyAssertion(:hasVector_I :EmptyKitTraySupplyXAxis "1.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :EmptyKitTraySupplyXAxis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :EmptyKitTraySupplyXAxis "0.0"^^xsd:decimal)


// FinishedKitBoxPose *************************************************
Declaration(NamedIndividual(:FinishedKitBoxPose))
ClassAssertion(:PoseOnlyLocation :FinishedKitBoxPose)
ObjectPropertyAssertion(:hasPose_Point :FinishedKitBoxPose
                        :FinishedKitBoxPoint)
ObjectPropertyAssertion(:hasPose_ZAxis :FinishedKitBoxPose
                        :FinishedKitBoxZAxis)
ObjectPropertyAssertion(:hasPose_XAxis :FinishedKitBoxPose
                        :FinishedKitBoxXAxis)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject :FinishedKitBoxPose
  :FinishedKitReceiver)

Declaration(NamedIndividual(:FinishedKitBoxPoint))
ClassAssertion(:Point :FinishedKitBoxPoint)
DataPropertyAssertion(:hasPoint_X :FinishedKitBoxPoint "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :FinishedKitBoxPoint "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :FinishedKitBoxPoint "0.0"^^xsd:decimal)

Declaration(NamedIndividual(:FinishedKitBoxZAxis))
ClassAssertion(:Vector :FinishedKitBoxZAxis)
DataPropertyAssertion(:hasVector_I :FinishedKitBoxZAxis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :FinishedKitBoxZAxis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :FinishedKitBoxZAxis "1.0"^^xsd:decimal)

Declaration(NamedIndividual(:FinishedKitBoxXAxis))
ClassAssertion(:Vector :FinishedKitBoxXAxis)
DataPropertyAssertion(:hasVector_I :FinishedKitBoxXAxis "1.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :FinishedKitBoxXAxis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :FinishedKitBoxXAxis "0.0"^^xsd:decimal)


// FinishedKitReceiverPose ********************************************
Declaration(NamedIndividual(:FinishedKitReceiverPose))
ClassAssertion(:PoseOnlyLocation :FinishedKitReceiverPose)
ObjectPropertyAssertion(:hasPose_Point :FinishedKitReceiverPose
                        :FinishedKitReceiverPoint)
ObjectPropertyAssertion(:hasPose_ZAxis :FinishedKitReceiverPose
                        :FinishedKitReceiverZAxis)
ObjectPropertyAssertion(:hasPose_XAxis :FinishedKitReceiverPose
                        :FinishedKitReceiverXAxis)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject :FinishedKitReceiverPose
  :KittingWorkstation1)

Declaration(NamedIndividual(:FinishedKitReceiverPoint))
ClassAssertion(:Point :FinishedKitReceiverPoint)
DataPropertyAssertion(:hasPoint_X :FinishedKitReceiverPoint "1.5"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :FinishedKitReceiverPoint "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :FinishedKitReceiverPoint "0.0"^^xsd:decimal)

Declaration(NamedIndividual(:FinishedKitReceiverZAxis))
ClassAssertion(:Vector :FinishedKitReceiverZAxis)
DataPropertyAssertion(:hasVector_I :FinishedKitReceiverZAxis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :FinishedKitReceiverZAxis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :FinishedKitReceiverZAxis "1.0"^^xsd:decimal)

Declaration(NamedIndividual(:FinishedKitReceiverXAxis))
ClassAssertion(:Vector :FinishedKitReceiverXAxis)
DataPropertyAssertion(:hasVector_I :FinishedKitReceiverXAxis "1.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :FinishedKitReceiverXAxis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :FinishedKitReceiverXAxis "0.0"^^xsd:decimal)


// KitTray1Pose ******************************************************
Declaration(NamedIndividual(:KitTray1Pose))
ClassAssertion(:PoseOnlyLocation :KitTray1Pose)
ObjectPropertyAssertion(:hasPose_Point :KitTray1Pose :KitTray1Point)
ObjectPropertyAssertion(:hasPose_ZAxis :KitTray1Pose :KitTray1ZAxis)
ObjectPropertyAssertion(:hasPose_XAxis :KitTray1Pose :KitTray1XAxis)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject :KitTray1Pose
  :EmptyKitTrayBox)

Declaration(NamedIndividual(:KitTray1Point))
ClassAssertion(:Point :KitTray1Point)
DataPropertyAssertion(:hasPoint_X :KitTray1Point "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :KitTray1Point "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :KitTray1Point "0.0"^^xsd:decimal)

Declaration(NamedIndividual(:KitTray1ZAxis))
ClassAssertion(:Vector :KitTray1ZAxis)
DataPropertyAssertion(:hasVector_I :KitTray1ZAxis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :KitTray1ZAxis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :KitTray1ZAxis "1.0"^^xsd:decimal)

Declaration(NamedIndividual(:KitTray1XAxis))
ClassAssertion(:Vector :KitTray1XAxis)
DataPropertyAssertion(:hasVector_I :KitTray1XAxis "1.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :KitTray1XAxis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :KitTray1XAxis "0.0"^^xsd:decimal)


// PartASupplyPose **************************************************
Declaration(NamedIndividual(:PartASupplyPose))
ClassAssertion(:PoseOnlyLocation :PartASupplyPose)
ObjectPropertyAssertion(:hasPose_Point :PartASupplyPose :PartASupplyPoint)
ObjectPropertyAssertion(:hasPose_ZAxis :PartASupplyPose :PartASupplyZAxis)
ObjectPropertyAssertion(:hasPose_XAxis :PartASupplyPose :PartASupplyXAxis)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject :PartASupplyPose
  :KittingWorkstation1)

Declaration(NamedIndividual(:PartASupplyPoint))
ClassAssertion(:Point :PartASupplyPoint)
DataPropertyAssertion(:hasPoint_X :PartASupplyPoint "4.5"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :PartASupplyPoint "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :PartASupplyPoint "0.0"^^xsd:decimal)

Declaration(NamedIndividual(:PartASupplyZAxis))
ClassAssertion(:Vector :PartASupplyZAxis)
DataPropertyAssertion(:hasVector_I :PartASupplyZAxis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :PartASupplyZAxis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :PartASupplyZAxis "1.0"^^xsd:decimal)

Declaration(NamedIndividual(:PartASupplyXAxis))
ClassAssertion(:Vector :PartASupplyXAxis)
DataPropertyAssertion(:hasVector_I :PartASupplyXAxis "1.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :PartASupplyXAxis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :PartASupplyXAxis "0.0"^^xsd:decimal)


// PartBSupplyPose **************************************************
Declaration(NamedIndividual(:PartBSupplyPose))
ClassAssertion(:PoseOnlyLocation :PartBSupplyPose)
ObjectPropertyAssertion(:hasPose_Point :PartBSupplyPose :PartBSupplyPoint)
ObjectPropertyAssertion(:hasPose_ZAxis :PartBSupplyPose :PartBSupplyZAxis)
ObjectPropertyAssertion(:hasPose_XAxis :PartBSupplyPose :PartBSupplyXAxis)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject :PartBSupplyPose
  :KittingWorkstation1)

Declaration(NamedIndividual(:PartBSupplyPoint))
ClassAssertion(:Point :PartBSupplyPoint)
DataPropertyAssertion(:hasPoint_X :PartBSupplyPoint "5.5"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :PartBSupplyPoint "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :PartBSupplyPoint "0.0"^^xsd:decimal)

Declaration(NamedIndividual(:PartBSupplyZAxis))
ClassAssertion(:Vector :PartBSupplyZAxis)
DataPropertyAssertion(:hasVector_I :PartBSupplyZAxis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :PartBSupplyZAxis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :PartBSupplyZAxis "1.0"^^xsd:decimal)

Declaration(NamedIndividual(:PartBSupplyXAxis))
ClassAssertion(:Vector :PartBSupplyXAxis)
DataPropertyAssertion(:hasVector_I :PartBSupplyXAxis "1.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :PartBSupplyXAxis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :PartBSupplyXAxis "0.0"^^xsd:decimal)


// PartCSupplyPose **************************************************
Declaration(NamedIndividual(:PartCSupplyPose))
ClassAssertion(:PoseOnlyLocation :PartCSupplyPose)
ObjectPropertyAssertion(:hasPose_Point :PartCSupplyPose :PartCSupplyPoint)
ObjectPropertyAssertion(:hasPose_ZAxis :PartCSupplyPose :PartCSupplyZAxis)
ObjectPropertyAssertion(:hasPose_XAxis :PartCSupplyPose :PartCSupplyXAxis)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject :PartCSupplyPose
  :KittingWorkstation1)

Declaration(NamedIndividual(:PartCSupplyPoint))
ClassAssertion(:Point :PartCSupplyPoint)
DataPropertyAssertion(:hasPoint_X :PartCSupplyPoint "6.5"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :PartCSupplyPoint "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :PartCSupplyPoint "0.0"^^xsd:decimal)

Declaration(NamedIndividual(:PartCSupplyZAxis))
ClassAssertion(:Vector :PartCSupplyZAxis)
DataPropertyAssertion(:hasVector_I :PartCSupplyZAxis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :PartCSupplyZAxis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :PartCSupplyZAxis "1.0"^^xsd:decimal)

Declaration(NamedIndividual(:PartCSupplyXAxis))
ClassAssertion(:Vector :PartCSupplyXAxis)
DataPropertyAssertion(:hasVector_I :PartCSupplyXAxis "1.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :PartCSupplyXAxis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :PartCSupplyXAxis "0.0"^^xsd:decimal)


// PartATrayPose **************************************************
Declaration(NamedIndividual(:PartATrayPose))
ClassAssertion(:PoseOnlyLocation :PartATrayPose)
ObjectPropertyAssertion(:hasPose_Point :PartATrayPose :PartATrayPoint)
ObjectPropertyAssertion(:hasPose_ZAxis :PartATrayPose :PartATrayZAxis)
ObjectPropertyAssertion(:hasPose_XAxis :PartATrayPose :PartATrayXAxis)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject :PartATrayPose
  :PartASupply)

Declaration(NamedIndividual(:PartATrayPoint))
ClassAssertion(:Point :PartATrayPoint)
DataPropertyAssertion(:hasPoint_X :PartATrayPoint "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :PartATrayPoint "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :PartATrayPoint "0.0"^^xsd:decimal)

Declaration(NamedIndividual(:PartATrayZAxis))
ClassAssertion(:Vector :PartATrayZAxis)
DataPropertyAssertion(:hasVector_I :PartATrayZAxis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :PartATrayZAxis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :PartATrayZAxis "1.0"^^xsd:decimal)

Declaration(NamedIndividual(:PartATrayXAxis))
ClassAssertion(:Vector :PartATrayXAxis)
DataPropertyAssertion(:hasVector_I :PartATrayXAxis "1.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :PartATrayXAxis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :PartATrayXAxis "0.0"^^xsd:decimal)


// PartBTrayPose **************************************************
Declaration(NamedIndividual(:PartBTrayPose))
ClassAssertion(:PoseOnlyLocation :PartBTrayPose)
ObjectPropertyAssertion(:hasPose_Point :PartBTrayPose :PartBTrayPoint)
ObjectPropertyAssertion(:hasPose_ZAxis :PartBTrayPose :PartBTrayZAxis)
ObjectPropertyAssertion(:hasPose_XAxis :PartBTrayPose :PartBTrayXAxis)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject :PartBTrayPose
  :PartBSupply)

Declaration(NamedIndividual(:PartBTrayPoint))
ClassAssertion(:Point :PartBTrayPoint)
DataPropertyAssertion(:hasPoint_X :PartBTrayPoint "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :PartBTrayPoint "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :PartBTrayPoint "0.0"^^xsd:decimal)

Declaration(NamedIndividual(:PartBTrayZAxis))
ClassAssertion(:Vector :PartBTrayZAxis)
DataPropertyAssertion(:hasVector_I :PartBTrayZAxis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :PartBTrayZAxis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :PartBTrayZAxis "1.0"^^xsd:decimal)

Declaration(NamedIndividual(:PartBTrayXAxis))
ClassAssertion(:Vector :PartBTrayXAxis)
DataPropertyAssertion(:hasVector_I :PartBTrayXAxis "1.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :PartBTrayXAxis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :PartBTrayXAxis "0.0"^^xsd:decimal)


// PartCTrayPose **************************************************
Declaration(NamedIndividual(:PartCTrayPose))
ClassAssertion(:PoseOnlyLocation :PartCTrayPose)
ObjectPropertyAssertion(:hasPose_Point :PartCTrayPose :PartCTrayPoint)
ObjectPropertyAssertion(:hasPose_ZAxis :PartCTrayPose :PartCTrayZAxis)
ObjectPropertyAssertion(:hasPose_XAxis :PartCTrayPose :PartCTrayXAxis)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject :PartCTrayPose
  :PartCSupply)

Declaration(NamedIndividual(:PartCTrayPoint))
ClassAssertion(:Point :PartCTrayPoint)
DataPropertyAssertion(:hasPoint_X :PartCTrayPoint "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :PartCTrayPoint "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :PartCTrayPoint "0.0"^^xsd:decimal)

Declaration(NamedIndividual(:PartCTrayZAxis))
ClassAssertion(:Vector :PartCTrayZAxis)
DataPropertyAssertion(:hasVector_I :PartCTrayZAxis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :PartCTrayZAxis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :PartCTrayZAxis "1.0"^^xsd:decimal)

Declaration(NamedIndividual(:PartCTrayXAxis))
ClassAssertion(:Vector :PartCTrayXAxis)
DataPropertyAssertion(:hasVector_I :PartCTrayXAxis "1.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :PartCTrayXAxis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :PartCTrayXAxis "0.0"^^xsd:decimal)


// PartGripperHolderPose *********************************************
Declaration(NamedIndividual(:PartGripperHolderPose))
ClassAssertion(:PoseOnlyLocation :PartGripperHolderPose)
ObjectPropertyAssertion(:hasPose_Point :PartGripperHolderPose
                        :PartGripperHolderPoint)
ObjectPropertyAssertion(:hasPose_ZAxis :PartGripperHolderPose
                        :PartGripperHolderZAxis)
ObjectPropertyAssertion(:hasPose_XAxis :PartGripperHolderPose
                        :PartGripperHolderXAxis)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject :PartGripperHolderPose
  :PartGripperHolder1)

Declaration(NamedIndividual(:PartGripperHolderPoint))
ClassAssertion(:Point :PartGripperHolderPoint)
DataPropertyAssertion(:hasPoint_X :PartGripperHolderPoint "0.25"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :PartGripperHolderPoint "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :PartGripperHolderPoint "0.5"^^xsd:decimal)

Declaration(NamedIndividual(:PartGripperHolderZAxis))
ClassAssertion(:Vector :PartGripperHolderZAxis)
DataPropertyAssertion(:hasVector_I :PartGripperHolderZAxis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :PartGripperHolderZAxis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :PartGripperHolderZAxis "1.0"^^xsd:decimal)

Declaration(NamedIndividual(:PartGripperHolderXAxis))
ClassAssertion(:Vector :PartGripperHolderXAxis)
DataPropertyAssertion(:hasVector_I :PartGripperHolderXAxis "1.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :PartGripperHolderXAxis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :PartGripperHolderXAxis "0.0"^^xsd:decimal)


// PartGripperPose ****************************************************
Declaration(NamedIndividual(:PartGripperPose))
ClassAssertion(:PoseOnlyLocation :PartGripperPose)
ObjectPropertyAssertion(:hasPose_Point :PartGripperPose :PartGripperPoint)
ObjectPropertyAssertion(:hasPose_ZAxis :PartGripperPose :PartGripperZAxis)
ObjectPropertyAssertion(:hasPose_XAxis :PartGripperPose :PartGripperXAxis)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject :PartGripperPose
  :PartGripperHolder)

Declaration(NamedIndividual(:PartGripperPoint))
ClassAssertion(:Point :PartGripperPoint)
DataPropertyAssertion(:hasPoint_X :PartGripperPoint "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :PartGripperPoint "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :PartGripperPoint "0.0"^^xsd:decimal)

Declaration(NamedIndividual(:PartGripperZAxis))
ClassAssertion(:Vector :PartGripperZAxis)
DataPropertyAssertion(:hasVector_I :PartGripperZAxis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :PartGripperZAxis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :PartGripperZAxis "1.0"^^xsd:decimal)

Declaration(NamedIndividual(:PartGripperXAxis))
ClassAssertion(:Vector :PartGripperXAxis)
DataPropertyAssertion(:hasVector_I :PartGripperXAxis "1.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :PartGripperXAxis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :PartGripperXAxis "0.0"^^xsd:decimal)


// RobotPose *********************************************************
Declaration(NamedIndividual(:RobotPose))
ClassAssertion(:PoseOnlyLocation :RobotPose)
ObjectPropertyAssertion(:hasPose_Point :RobotPose :RobotPoint)
ObjectPropertyAssertion(:hasPose_ZAxis :RobotPose :RobotZAxis)
ObjectPropertyAssertion(:hasPose_XAxis :RobotPose :RobotXAxis)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject :RobotPose
  :KittingWorkstation1)

Declaration(NamedIndividual(:RobotPoint))
ClassAssertion(:Point :RobotPoint)
DataPropertyAssertion(:hasPoint_X :RobotPoint "3.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :RobotPoint "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :RobotPoint "2.0"^^xsd:decimal)

Declaration(NamedIndividual(:RobotZAxis))
ClassAssertion(:Vector :RobotZAxis)
DataPropertyAssertion(:hasVector_I :RobotZAxis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :RobotZAxis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :RobotZAxis "1.0"^^xsd:decimal)

Declaration(NamedIndividual(:RobotXAxis))
ClassAssertion(:Vector :RobotXAxis)
DataPropertyAssertion(:hasVector_I :RobotXAxis "1.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :RobotXAxis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :RobotXAxis "0.0"^^xsd:decimal)


// TrayGripperHolderPose *********************************************
Declaration(NamedIndividual(:TrayGripperHolderPose))
ClassAssertion(:PoseOnlyLocation :TrayGripperHolderPose)
ObjectPropertyAssertion(:hasPose_Point :TrayGripperHolderPose
                        :TrayGripperHolderPoint)
ObjectPropertyAssertion(:hasPose_ZAxis :TrayGripperHolderPose
                        :TrayGripperHolderZAxis)
ObjectPropertyAssertion(:hasPose_XAxis :TrayGripperHolderPose
                        :TrayGripperHolderXAxis)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject :TrayGripperHolderPose
                        :TrayGripperHolder1)

Declaration(NamedIndividual(:TrayGripperHolderPoint))
ClassAssertion(:Point :TrayGripperHolderPoint)
DataPropertyAssertion(:hasPoint_X :TrayGripperHolderPoint "-0.25"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :TrayGripperHolderPoint "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :TrayGripperHolderPoint "0.5"^^xsd:decimal)

Declaration(NamedIndividual(:TrayGripperHolderZAxis))
ClassAssertion(:Vector :TrayGripperHolderZAxis)
DataPropertyAssertion(:hasVector_I :TrayGripperHolderZAxis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :TrayGripperHolderZAxis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :TrayGripperHolderZAxis "1.0"^^xsd:decimal)

Declaration(NamedIndividual(:TrayGripperHolderXAxis))
ClassAssertion(:Vector :TrayGripperHolderXAxis)
DataPropertyAssertion(:hasVector_I :TrayGripperHolderXAxis "1.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :TrayGripperHolderXAxis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :TrayGripperHolderXAxis "0.0"^^xsd:decimal)


// WorkTablePose ******************************************************
Declaration(NamedIndividual(:WorkTablePose))
ClassAssertion(:PoseOnlyLocation :WorkTablePose)
ObjectPropertyAssertion(:hasPose_Point :WorkTablePose :WorkTablePoint)
ObjectPropertyAssertion(:hasPose_ZAxis :WorkTablePose :WorkTableZAxis)
ObjectPropertyAssertion(:hasPose_XAxis :WorkTablePose :WorkTableXAxis)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject :WorkTablePose
  :KittingWorkstation1)

Declaration(NamedIndividual(:WorkTablePoint))
ClassAssertion(:Point :WorkTablePoint)
DataPropertyAssertion(:hasPoint_X :WorkTablePoint "3.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :WorkTablePoint "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :WorkTablePoint "0.0"^^xsd:decimal)

Declaration(NamedIndividual(:WorkTableZAxis))
ClassAssertion(:Vector :WorkTableZAxis)
DataPropertyAssertion(:hasVector_I :WorkTableZAxis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :WorkTableZAxis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :WorkTableZAxis "1.0"^^xsd:decimal)

Declaration(NamedIndividual(:WorkTableXAxis))
ClassAssertion(:Vector :WorkTableXAxis)
DataPropertyAssertion(:hasVector_I :WorkTableXAxis "1.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :WorkTableXAxis "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :WorkTableXAxis "0.0"^^xsd:decimal)


// Points for kit design ****************************************
Declaration(NamedIndividual(:PointA1))
ClassAssertion(:Point :PointA1)
DataPropertyAssertion(:hasPoint_X :PointA1 "0.2"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :PointA1 "0.3"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :PointA1 "0.0"^^xsd:decimal)

Declaration(NamedIndividual(:PointA2))
ClassAssertion(:Point :PointA2)
DataPropertyAssertion(:hasPoint_X :PointA2 "0.4"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :PointA2 "0.3"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :PointA2 "0.0"^^xsd:decimal)

Declaration(NamedIndividual(:PointB1))
ClassAssertion(:Point :PointB1)
DataPropertyAssertion(:hasPoint_X :PointB1 "0.2"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :PointB1 "0.5"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :PointB1 "0.0"^^xsd:decimal)

Declaration(NamedIndividual(:PointC1))
ClassAssertion(:Point :PointC1)
DataPropertyAssertion(:hasPoint_X :PointC1 "0.4"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Y :PointC1 "0.5"^^xsd:decimal)
DataPropertyAssertion(:hasPoint_Z :PointC1 "0.0"^^xsd:decimal)

// axes for kit designs ***************************************
Declaration(NamedIndividual(:ZAxisA1))
ClassAssertion(:Vector :ZAxisA1)
DataPropertyAssertion(:hasVector_I :ZAxisA1 "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :ZAxisA1 "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :ZAxisA1 "1.0"^^xsd:decimal)

Declaration(NamedIndividual(:XAxisA1))
ClassAssertion(:Vector :XAxisA1)
DataPropertyAssertion(:hasVector_I :XAxisA1 "1.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :XAxisA1 "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :XAxisA1 "0.0"^^xsd:decimal)

Declaration(NamedIndividual(:ZAxisA2))
ClassAssertion(:Vector :ZAxisA2)
DataPropertyAssertion(:hasVector_I :ZAxisA2 "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :ZAxisA2 "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :ZAxisA2 "1.0"^^xsd:decimal)

Declaration(NamedIndividual(:XAxisA2))
ClassAssertion(:Vector :XAxisA2)
DataPropertyAssertion(:hasVector_I :XAxisA2 "1.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :XAxisA2 "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :XAxisA2 "0.0"^^xsd:decimal)

Declaration(NamedIndividual(:ZAxisB1))
ClassAssertion(:Vector :ZAxisB1)
DataPropertyAssertion(:hasVector_I :ZAxisB1 "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :ZAxisB1 "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :ZAxisB1 "1.0"^^xsd:decimal)

Declaration(NamedIndividual(:XAxisB1))
ClassAssertion(:Vector :XAxisB1)
DataPropertyAssertion(:hasVector_I :XAxisB1 "1.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :XAxisB1 "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :XAxisB1 "0.0"^^xsd:decimal)

Declaration(NamedIndividual(:ZAxisC1))
ClassAssertion(:Vector :ZAxisC1)
DataPropertyAssertion(:hasVector_I :ZAxisC1 "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :ZAxisC1 "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :ZAxisC1 "1.0"^^xsd:decimal)

Declaration(NamedIndividual(:XAxisC1))
ClassAssertion(:Vector :XAxisC1)
DataPropertyAssertion(:hasVector_I :XAxisC1 "1.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_J :XAxisC1 "0.0"^^xsd:decimal)
DataPropertyAssertion(:hasVector_K :XAxisC1 "0.0"^^xsd:decimal)


// Pose individuals *************************************************
DifferentIndividuals(
 :ChangingStationPose
 :EmptyKitTrayBoxPose
 :EmptyKitTraySupplyPose
 :FinishedKitBoxPose
 :FinishedKitReceiverPose
 :KitTray1Pose
 :PartASupplyPose
 :PartATrayPose
 :PartBSupplyPose
 :PartBTrayPose
 :PartCSupplyPose
 :PartCTrayPose
 :PartGripperPose
 :PartGripperHolderPose
 :RobotPose
 :TrayGripperHolderPose
 :WorkTablePose)

// Point individuals *************************************************
DifferentIndividuals(
 :ChangingStationPoint
 :EmptyKitTrayBoxPoint
 :EmptyKitTraySupplyPoint
 :FinishedKitBoxPoint
 :FinishedKitReceiverPoint
 :KitTray1Point
 :PartASupplyPoint
 :PartATrayPoint
 :PartBSupplyPoint
 :PartBTrayPoint
 :PartCSupplyPoint
 :PartCTrayPoint
 :PartGripperPoint
 :PartGripperHolderPoint
 :PointA1
 :PointA2
 :PointB1
 :PointC1
 :PointMax
 :PointMin
 :RobotPoint
 :TrayGripperHolderPoint
 :WorkTablePoint)

// Vector individuals *************************************************
DifferentIndividuals(
 :ChangingStationXAxis
 :EmptyKitTrayBoxXAxis
 :EmptyKitTraySupplyXAxis
 :FinishedKitBoxXAxis
 :FinishedKitReceiverXAxis
 :KitTray1XAxis
 :PartASupplyXAxis
 :PartATrayXAxis
 :PartBSupplyXAxis
 :PartBTrayXAxis
 :PartCSupplyXAxis
 :PartCTrayXAxis
 :PartGripperXAxis
 :PartGripperHolderXAxis
 :RobotXAxis
 :XAxisA1
 :XAxisA2
 :XAxisB1
 :XAxisC1
 :TrayGripperHolderXAxis
 :WorkTableXAxis

 :ChangingStationZAxis
 :EmptyKitTrayBoxZAxis
 :EmptyKitTraySupplyZAxis
 :FinishedKitBoxZAxis
 :FinishedKitReceiverZAxis
 :KitTray1ZAxis
 :PartASupplyZAxis
 :PartATrayZAxis
 :PartBSupplyZAxis
 :PartBTrayZAxis
 :PartCSupplyZAxis
 :PartCTrayZAxis
 :PartGripperZAxis
 :PartGripperHolderZAxis
 :RobotZAxis
 :ZAxisA1
 :ZAxisA2
 :ZAxisB1
 :ZAxisC1
 :TrayGripperHolderZAxis
 :WorkTableZAxis)
// End Poses

// Start RelativeLocations ******************************************

Declaration(NamedIndividual(:PartA1Location))
ClassAssertion(:RelativeLocationIn :PartA1Location)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject :PartA1Location
                        :PartATray)
DataPropertyAssertion(:hasRelativeLocationIn_Description
  :PartA1Location "PartA1 is in PartATray"^^xsd:string)

Declaration(NamedIndividual(:PartA2Location))
ClassAssertion(:RelativeLocationIn :PartA2Location)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject :PartA2Location
                        :PartATray)
DataPropertyAssertion(:hasRelativeLocationIn_Description
  :PartA2Location "PartA2 is in PartATray"^^xsd:string)

Declaration(NamedIndividual(:PartB1Location))
ClassAssertion(:RelativeLocationIn :PartB1Location)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject :PartB1Location
                        :PartBTray)
DataPropertyAssertion(:hasRelativeLocationIn_Description
  :PartB1Location "PartB1 is in PartBTray"^^xsd:string)

Declaration(NamedIndividual(:PartC1Location))
ClassAssertion(:RelativeLocationIn :PartC1Location)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject :PartC1Location
                        :PartCTray)
DataPropertyAssertion(:hasRelativeLocationIn_Description
  :PartC1Location "PartC1 is in PartCTray"^^xsd:string)

Declaration(NamedIndividual(:RelativeLocationIn1))
ClassAssertion(:RelativeLocationIn :RelativeLocationIn1)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject :RelativeLocationIn1
                        :KittingWorkstation1)
DataPropertyAssertion(:hasRelativeLocationIn_Description
  :RelativeLocationIn1
  "The  KittingWorkstation is in KittingWorkstation1"^^xsd:string)

Declaration(NamedIndividual(:RelativeLocationOn1))
ClassAssertion(:RelativeLocationOn :RelativeLocationOn1)
ObjectPropertyAssertion(:hasPhysicalLocation_RefObject :RelativeLocationOn1
                        :Robot1)
DataPropertyAssertion(:hasRelativeLocationOn_Description
  :RelativeLocationOn1
  "The TrayGripper is on Robot1"^^xsd:string)

DifferentIndividuals(
 :PartA1Location
 :PartA2Location
 :PartB1Location
 :PartC1Location
 :RelativeLocationIn1)

// End RelativeLocations

)
